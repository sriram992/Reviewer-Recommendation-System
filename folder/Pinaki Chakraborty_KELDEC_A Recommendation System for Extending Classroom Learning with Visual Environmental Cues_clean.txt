See discussions, stats, and author profiles for this publication at: https://www.researchgate.net/publication/335254829 KELDEC: A Recommendation System for Extending Classroom Learning with Visual Environmental Cues Conference Paper June 2019 DOI: 10.1145/3342827.3342849 CITATIONS 5 READS 62 6 authors, including: Kanika Kanika Netaji Subhas Institute of Technology 10 PUBLICATIONS 42 CITATIONS SEE PROFILE Soumya Mohapatra Netaji Subhas Institute of Technology 2 PUBLICATIONS 5 CITATIONS SEE PROFILE All content following this page was uploaded by Kanika Kanika on 19 January 2022. The user has requested enhancement of the downloaded file. KELDEC: A Recommendation System for Extending Classroom Learning with Visual Environmental Cues Kanika Division of Computer Engineering Netaji Subhas University of Technology New Delhi, India +91 9953871776 kanikatehlan@gmail.com Shampa Chakraverty Division of Computer Engineering Netaji Subhas University of Technology New Delhi, India +91 9899568694 apmahs.nsit@gmail.com Pinaki Chakraborty Division of Computer Engineering Netaji Subhas University of Technology New Delhi, India +91 9911128163 pinaki_chakraborty_163@yaho Shikhar Agnihotri Division of Computer Engineering Netaji Subhas University of Technology New Delhi, India +91 8860377453 shikhar9a@gmail.com Soumya Mohapatra Division of Computer Engineering Netaji Subhas University of Technology New Delhi, India +91 8750082950 shmiitian@gmail.com Prakriti Bansal Division of Computer Engineering Netaji Subhas University of Technology New Delhi, India +91 9205075516 prakriti.bansal@gmail.com ABSTRACT We develop an innovative personalized recommendation system called KELDEC that links the notes that students take in class with their outdoor experiences captured with camera, to suggest websites that extend their knowledge. Despite the plethora of educational recommendation systems, there is a dearth of effective tools that make evident the practical application of theory in the real world. KELDEC extracts the core learning points from class notes and distinctive labels that describe objects in a picture. It then mines the web to first extract the technical context of the picture, and subsequently culls out websites that establish linkages between notes and the picture. Response to user surveys garnered from students studying Software Engineering in the undergraduate Computer Engineering course reveal that they gain new and practical extension of classroom knowledge. CCS Concepts Information systems Information retrieval Retrieval tasks and goals Recommender systems Keywords Personalized mobile learning; Educational recommender system; Classroom learning points; Image analysis; Web content mining 1. INTRODUCTION Today, the combined use of advanced computing technologies, abundant multimedia data, and streaming communication have steered society towards new paradigms of education such as blended learning and flipped classroom, which conquer the constraints of time and location [1,2]. Indeed, learning is no longer a collective experience of disparate events but a continuous process that progresses even after a student leaves the classroom [3]. There are several educational recommender systems that enable students to find relevant information and educational resources[4]. However, there is a dearth of tools to help dig out serendipitous information by connecting classroom learning to the outside world that the student would not have otherwise discovered. We propose a learning recommender system that makes use of visual stimuli in the dynamic environment that students immerse in after class hours, with the aim of finding extensional knowledge and practical applications of what they have learnt in the class. The system is named Knowledge Extension by Linking Dynamic Environment with Class-notes (KELDEC). The remaining paper is structured as follows. Section 2 explores existing educational recommender systems with that use images and class notes as learning aids to offer personalized suggestions. Section 3 expounds the working of our proposed learning recommendation system, KELDEC. Section 4 presents the results and analysis of our survey. We conclude and give future possibilities in section 5. 2. PRIOR WORK It is widely recognized that educational recommender systems assist students by helping them deal with the problem of information overload [5]. A number of educational recommender systems provide various online resources such as learning objects [6], lecture notes [7], and even entire courses [8]. Personalized educational recommender systems use tags with ratings [9], prior knowledge [10], similarity between tags [11] and past experience of students [12] to give learner-specific suggestions. However, it has been observed that with time, the suggestions become obvious, leading to the problem of overspecialization and reduced user satisfaction [13]. The serendipity factor was introduced to improve user satisfaction [11, 13, 14]. In [13], the authors suggest that serendipity should include contextual analysis for suggesting relevant yet unexpected items. Some context-aware recommendation systems do consider time and location information [15]. However, there are other situations where learners leave an imprint of their learning such as Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from Permissions@acm.org. NLPIR 2019, June 28 30, 2019, Tokushima, Japan 2019 Association for Computing Machinery. ACM ISBN 978-1-4503-6279-5/19/06 $15.00 DOI: https://doi.org/10.1145/3342827.3342849 99 lecture notes taken in a classroom, which provide a contextual background of their learning. Indeed, several studies discuss the importance of class notes [16,17], but the idea of utilizing such notes as repositories of contextual and personalized learning has not yet been explored. Apart from class notes, images are also reservoirs of latent information. Pictures taken by learners reflect what captures their attention and interests them. Such information can then be utilized to establish linkages between the image and user generated content. The main contributions of this work are: 1. KELDEClinksclass notes with latent information in a picture clicked by a student in real environment. The notes and pics are treated as capsules of personalized and contextual information. They are harnessed to mine information from the web and suggest relevant websites to extend learning. 2. We propose a novel way to identify the central theme discussed in class with the help of class notes and ebook of the subject. 3. We propose a method to extract the technical content that is hidden in an image by creating a dictionary and tapping the web as a knowledge source. 3. WORKING OF KELDEC The block diagram in Fig. 1 shows the components and overall workflow of the KELDEC system. We now explain its working. 3.1 Pre-process Notes A student uploads a scanned copy of handwritten class-notes and inputsthelink to a reference e-book. For the sake of illustration, we assume that the student is enrolled in a technical course and looking forward to its application in the real world. With the help of an Optical Character Recognition (OCR) module, the system converts the handwritten notes into a set K of words. A spell-checker checks and corrects spelling mistakes in K [18]. 3.2 Extract Core Learning Points Noun phrases encapsulate bulk of the information that notes carry [19]. KELDEC first extracts the concepts by selecting nouns from K. Given a reference e-book, KELDEC then searches through its index to extract all single-word or multi-word phrases that contain the identified concepts in K. All such index topics represent potential learning points that were discussed in class. In order to identify the core learning points and central theme that was taken up in class, the system first creates clusters of all page numbers corresponding to every index entry in K. A dense cluster comprising many close by pages indicates a core theme that was discussed in the class whereas a sparse cluster indicates anecdotal mention. KELDEC picks up the densest cluster and extracts itsindex phrases to form a set L of Core Learning Points (CLP). Images 1.1 to 1.5 included in the input dataset that we have made available [20], are sample class-notes. List 1 that follows these images contains the list of CLPs extracted. 3.3 Extract Distinct Image Labels After stepping out of classroom and entering the dynamic environment, a student captures and uploads a picture of a scene or an object of interest. The system performs image analysis to recognize the objects in the image and extract a set of descriptive phrases called labels for these objects. Image 2 in the input dataset [20] shows a picture clicked. Its descriptive labels extracted are listed under list 2. Fig 1: Block Diagram of the KELDEC system Some of these labels may be repetitive. To eliminate redundant labels and filter out distinct ones, KELDEC creates clusters of all image labels. Each label is treated as a document which can be represented by a vector of Term Frequency-Inverse Document Frequency (TF-IDF) values of the terms collected from all such documents [21]. The pairwise Euclidean distances between these TF-IDF vectors are used to generate the clusters. The label associated with the TF-IDF vector closest to the centroid of each cluster is added to a set M of distinct image labels. 3.4 Learn Technical Content of Images KELDEC now conducts an exhaustive web search to gather technical information related to the set M of distinct labels. 3.4.1 Create technical dictionary The system creates a reference dictionary of common technical words to cull out technically oriented websites related to the image. Starting with a few technical terms, for example, machine, system, device and equipment, their hyponyms and synonyms are extracted from wordnet [22] and added to construct a reference dictionary D. List 3 available in the input dataset [25-20] illustrates a portion of this dictionary. 3.4.2 Conduct preliminary search For each image label m in M, the system generates three search queries (i) m equipment (ii) m machinery list , and (iii) m electronic devices . It then launches a web search on Google 100 search engine for each search query and selects the first ranked website, thus producing a set Wm of three urls for a given label m. 3.4.3 Extract technical phrases From each website in Wm, the system extracts a set of concept phrases by identifying the regular expression <JJ>*<NN>, where <JJ> is an adjective and <NN> is a noun. Such combinations, such as synchronous motor and hydraulic machinery represent descriptive concepts. The system scans through all such descriptive concept phrases collected from all websites in Wmand identifies those phrases that contain words belonging to the technical dictionary D. It sorts the concept phrases according to the number of overlapping terms with D, and selects the top 10 amongst them to generate a set Tm of technical terms related to label m. 3.4.4 Eliminate redundant technical terms In order to remove redundant technical terms from Tm that are highly similar, the system uses a sequence matching algorithm which returns a measure of two sequences' similarity in the range [0, 1], by using Eq. 1 (1) where, n is the combined length of both the sequences and l is the length of their longest contiguous matching subsequence. If the similarity score r is greater than 0.7, then the technical phrase with the shorter length is rejected in favor of the longer one. Image 2 in input dataset [20] is a sample picture and its technical phrases are enlisted in list 4. 3.5 Mine Knowledge Sources KELDEC now uses cues from both Tm,the set of image-related technical phrases and L, the class notes CLPs, to scout for relevant websites. The system issues a search query for every combination of technical phrase t from Tm and CLP phrase p from L, also appending the name s of the subject being taught, to form a search query <t,p,s>. It chooses the top ranked web page for each search query to generate an initial recommendation dataset RmL of URLs. It may be noted that each website in RmL originates from a distinct image label m via one of its relevant technical terms and from L via one of its a CLPs. 3.5.1 Filter out unrelated urls KELDEC applies the following filters to remove irrelevant websites from RmL:At least one of the CLPs in L must be present in the website, else it is eliminated from RmL. Wiki articles and community forums are removed as they tend to be too generic and broad-based. URLs whose documents that contain a preset list of stop_words such as amazon , wikipedia , and youtube are thus eliminated. 3.5.2 Calculate semantic relevance KELDEC now assesses the semantic closeness of each article in RmL with both the image label m as well as to the CLP p that helped mine it from the web. We employ pre-trained word embeddings based on the GloVe (Global Vectors for Word Representation) algorithm by Stanford [23]. They represent words with vectors that encapsulate semantic information of the words. For each article in RmL, special characters are replaced with blank spaces as they do not add meaning to the article. The system removes all stop words as defined by the NLTK stop-word corpus. The article s textual content is then tokenized into a set of word-frequency pairs A={(w1,f1), (wi,fi), ... (wn,fn)}, where wioccurs with a frequency fi . Let us consider a multi-word phrase X = {l1,l2, l3, ... , ln} which may be either an image label m or a CLP phrase in L. The semantic similarity between article A and X is given as: (2) (3) Where and are the vector embedding representation of wi and lj respectively and |A|, |X| are the respective lengths of the article A and phrase X [24].The overall semantic similarity score for a given image label phrase m in M and a CLP phrase p in L is a linear combination of a prefixed weighting factor : (4) The weighting factor determines whether the recommended site is semantically closer to the image or to the class notes. 3.6 Rank and recommend The filtered set of websites obtained from each of the image labels in M and each CLP in L, together form the final recommendation set R. The websites are sorted according to their similarity scores given by Eq. 4. Finally, KELDEC recommends the top-N of these websites to the user. 4. EXPERIMENTAL RESULTS KELDEC is developed as an Android application that interacts with a Node.js server. On receiving inputs, the server spawns python scripts, for each step, and formulates the required search queries. We used Google Cloud Vision OCR to extract text from the pdf of notes [25]. It detects and extracts text using convolutional neural networks. Cloud Vision is also used to extract image labels. The software uses the existing metadata of images maintained by Google to detect objects present in an image. After detecting objects and labels, the system performs landmark recognition with the help of knowledge graph entities to locate landmarks and improve the accuracy of identification [25]. We used the Google search engine to mine technical terms related to image labels and the relevant websites for recommendation. The Selenium WebDriver was used to gather information from the Web. The value of the weighting factor was preset to 0.5. Datasets: UG students of B.Tech Computer Engineering in NetajiSubhas University of Technology (N.S.U.T.), study the course Software Engineering during their fourth semester. We took class notes taken by students during three lecture periods on the themes (L1) software development lifecycle models, (L2) requirements engineering and (L3) a revision of data flow diagrams and capability maturity model. Each student also submitted a picture of an object or scene of interest, that they had clicked in their immersive environment after stepping out of class. For evaluation purpose, we used three randomly chosen pairs of notes and images. The first image, paired with L1, was that of a laptop, a portable speaker and a wire. The second image, paired with L2, was that of a few people performing on stage with some 101 musical instruments. The third image, paired with L3, was that of a bicycle and a small lamp in the corner. We have made available all the datasets and links to the recommended articles generated for each dataset in github [26]. Survey Questionnaire: We conducted a survey-based offline evaluation of the KELDEC system to assess the recommendations generated for their degree of relevance to students knowledge and the extent to which they offered an element of serendipity. The survey questionnaire comprised two psychometric questions and one qualitative question, as given below: Que. 1: To what extent do you find the information on this website relevant. Respondents are required to rate the relevance on a 5-point likert scale [27]. The classes denote 1: very relevant 2: quite relevant 3: somewhat relevant 4: hardly relevant 5: irrelevant. Que. 2: To what extent did the information present on the website surprised you. Respondents are required to choose one class, on a 3-point likert scale; 1. Very surprising, 2.somewhat surprising 3.not at all surprising. Que. 3: Write your experiences on using this app. Whereas the first two questions are based on the recommendations given by KELDEC for the sample datasets, this question sought users own experiences with the recommendations generated specifically for their own datasets. Survey Response: A total of 74 students enrolled in the software engineering course of BTech, Computer Engineering at N.S.U.T., participated in the survey by engaging with the KELDEC system in two ways. 1. Each participated first interacted with the app to input their own class notes and pictures and receive recommendations for further reading. 2. For each sample datasets, the corresponding class notes and image pairs were input to KELDEC. The system recommended the Top-2 websites for each dataset. Respondents were requested to study each sample dataset and then browse the top two recommended websites carefully. The participants finally responded to the three questions in the survey. Table 1 summarizes the responses for relevancy of the recommendation and Table 2 summarizes the responses for their serendipity. The Top-2 recommendations generated are labeled as url-1 and url-2 under column 2. (i) Relevancy: Table 1 shows that the response for relevancy varied for different urls. Dataset II url-1 and the Dataset III url-2 gained the best scores for relevancy with both median and mode at class 2. Thus the most frequent and concentrated response was quite relevant. Dataset II url-2 generated the most frequent response at class 2 - quite relevant, with a slight tilt towards class 3 - somewhat relevant. Dataset I url-1 was judged predominantly as somewhat relevant with both median and mode at class 3. Dataset I url 2 and Dataset III url 1 had the most frequent response at somewhat relevant but also reflected a wide variation with the median value at 5 - irrelevant. Overall, 9.8% of respondents found the recommendations to be very relevant, the largest group comprising 21.5% of respondents voted for them to be quite relevant, 17% found them to be somewhat relevant, 12.7% of them found them hardly relevant and 12.3 % found them to be irrelevant. Table 1. Results for relevance Dataset Top-2 ReccUrls Relevancy classes Median Class Mode Class 1 2 3 4 5 I url-1 7 10 21 20 15 3 3 url-2 7 13 18 16 20 3 5 II url-1 12 37 14 5 5 2 2 url-2 7 26 18 13 10 3 2 III url-1 8 15 15 14 21 3 5 url-2 18 28 16 8 3 2 2 Users response to the question: To what extent do you find the information on this website relevant Table 2. Results for serendipity Datase t Top-2 ReccUrl s Serendipity classes Median Class Mode Class Very Much Some what Not at all I url 1 9 45 18 Somewhat Somewhat url-2 16 38 18 Somewhat Somewhat II url-1 23 40 9 Somewhat Somewhat url-2 22 32 19 Somewhat Somewhat III url-1 17 30 26 Somewhat Somewhat url-2 19 38 16 Somewhat Somewhat Users response to the question: To what extent did the information present on the website surprised you. (ii) Serendipity: The responses to the question investigating the surprising element in the recommendations clearly indicate that more than half of the participants found the information somewhat surprising for each recommendation. Statistically, 24.37% of respondents considered the recommendations very much surprising, a majority of 51.26% found them somewhat surprising and 24.37% found no element of surprise. (iii) Qualitative response: Responses to the qualitative question reflected overall enthusiasm towards the potential of the app and added some new practical dimension to the theoretical knowledge gained in class. The most frequent responses was- I would definitely use the app . Some expressed Needs improvement . Many respondents felt that the length of the textual matter on recommended websites was an issue - the articles needed to be pruned to show the relevant portion or the gist of the information. Feedback generally indicated that students would like to use the app in future, but preferred certain knowledge sources such as news portals that report the latest news on the topics they learnt in class. 5. CONCLUSION We developed KELDEC- a recommender system that uses visual cues from the dynamic environment of learners to suggest online resources that offer extensional technical knowledge. To the best of our knowledge, it is for the first time that an automated system brings out the correlation between knowledge acquired in class 102 and the real-life environment of learners. The results of our survey indicate that the recommendations provided are quite relevant. The inclusion of real life images indeed gave information that surprised the students. Even though we have considered a technical domain, the basic principles of KELDEC can be applied to other fields such as social sciences, literature or fine arts with minor adaptations. Keeping in mind the feedback from participants, we will summarize the recommended sources to reduce length and provide relevant core information. We will also give relative priorities to different categories of knowledge sources as desired by users. 6. REFERENCES [1] Vel zquez-Iturbide J , Hern n-Losada I and Paredes- Velasco M. 2017. Evaluating the effect of program visualization on student motivation. IEEE Transactions on Education. 60 (3), (Aug-2017), 238-245. [2] Nunez JL, Caro ET and Gonzalez JR. 2017. From higher education to open education: Challenges in the transformation of an online traditional course. IEEE Transactions on Education. 60(2), (May-2017), 134-142. [3] Laal M. Impact of Technology on lifelong learning. Procedia-Social and Behavioral Sciences. 28 (1), (Jan-2011) 439-443. [4] Van Meteren R and Van Someren M.2000. Using content- based filtering for recommendation. In Proceedings of the Machine Learning in the New Information Age: MLnet/ECML2000 Workshop, 30, (May- 2000), 47-56. [5] Garcia-Martinez S and Hamou-Lhadj A.2013. Educational recommender systems: A pedagogical-focused perspective. In Multimedia Services in Intelligent Environments Springer, Heidelberg, 2013, 113-124. [6] Lemire, D., Boley, H., McGrath, S., and Ball, M. 2005. Collaborative filtering and inference rules for context-aware learning object recommendation. Journal of Interactive Technology and Smart Education, 2 (2005), 179 188. doi:10.1108/ 17415650580000043. [7] Farzan, R. and Brusilovsky, P. 2005. Social navigation support in e-learning: What are the real Footprints? In: Proceedings of the 19th International Joint Conference on Artificial Intelligence, 5 (Aug- 2005) 49-56. [8] Farzan R, and Brusilovsky P. 2006. Social navigation support in a course recommendation system. In: Proceedings of International Conference on Adaptive Hypermedia and Adaptive Web-Based Systems (Jun 2006) Springer, Berlin, Heidelberg 91-100. [9] Drachsler, H., Rutledge, L., van Rosmalen, P., Hummel, H., Pecceu, D., Arts, T., et al. 2010. ReMashed An usability study of a recommender system for mash-ups for learning. International Journal of Emerging Technologies in Learning, 5(2010), 7 11. [10] Bobadilla, J., Seradella, F., and Hernando, A. 2009. Collaborative filtering adapted to recommender systems of e- Learning. Knowledge-Based Systems, 22 (2009), 261 265. [11] Durao, F. and Dolog, P. 2010. Extending a hybrid tag-based recommender system with personalization. In Proceedings 2010 ACM Symposium on Applied Computing, (SAC 2010), Sierre, Switzerland 1723 1727. [12] Kotkov D, Wang S, and Veijalainen J. A survey of serendipity in recommender systems. Knowledge-Based Systems. 111 (1) (Nov-2016), 180-92. [13] Kotkov D, Veijalainen J, and Wang S. 2016. Challenges of serendipity in recommender systems. In WEBIST 2016: Proceedings of the 12th International conference on web information systems and technologies. 2 (2016). SCITEPRESS. [14] Iaquinta L, de Gemmis M, Lops P, Semeraro G, and Molino P. 2010. Can a recommender system induce serendipitous encounters?.InE-commerce (1 Feb- 2010). IntechOpen. [15] Adomavicius G and Tuzhilin A. 2011. Context-aware recommender systems. In Recommender systems handbook 2011, 217-253. Springer, Boston, MA. [16] Kam M, Wang J, Iles A, Tse E, Chiu J, Glaser D, Tarshish O, and Canny J. Livenotes: a system for cooperative and augmented note-taking in lectures. In: Proceedings of the SIGCHI conference on Human factors in computing systems (Apr 2005) 531-540. [17] Makany T, Kemp J, and Dror IE.2009. Optimising the use of note taking as an external cognitive aid for increasing learning. British Journal of Educational Technology. 40(4), (Jul 2009), 619-35. [18] Perkins J. Python text processing with NLTK 2.0 cookbook. Packt Publishing Ltd; 2010 Nov 9. [19] Kaur J and Gupta V.2010. Effective approaches for extraction of keywords. International Journal of Computer Science Issues. 7 (6), (Nov-2010), 144. [20] Input dataset for illustration available at:: https://docs.google.com/document/d/1ls2EPfLy4_tx35oNg0j 2HYK3mOM66cosZ0hu3YVkZq4/edit?ts=5ce7ad92 [21] Aizawa, A.2003. An information-theoretic perspective of tf idf measures. Information Processing & Management. 39.1 (2003): 45-65. [22] Miller, G. A., Beckwith, R., Fellbaum, C., Gross, D., and Miller, K. J. (1990). Introduction to WordNet: An on-line lexical database. International journal of lexicography, 3(4), 235-244. [23] Pennington J, Socher R, and Manning C. 2014. Glove: Global vectors for word representation. In: Proceedings of the 2014 conference on empirical methods in natural language processing (EMNLP) 2014, 1532-1543. [24] Kowser, S., Rahman, S., Shojol, D. A., and Kabir, M. 2019. Study on Text Similarity Measure Algorithms For English Language (Doctoral dissertation, United International University). [25] Google Cloud Vision API, https://cloud.google.com/vision/ [26] Complete Dataset and results for experiments with KELDEC available at:.https://github.com/shikhar-scs/Keldec_dataset [27] Likert R. A technique for the measurement of attitudes. Archives of psychology. (1932). 1 55. 103 View publication stats