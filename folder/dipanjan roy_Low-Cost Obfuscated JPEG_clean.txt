IEEE TRANSACTIONS ON CONSUMER ELECTRONICS, VOL. 64, NO. 3, AUGUST 2018 365 Low-Cost Obfuscated JPEG CODEC IP Core for Secure CE Hardware Anirban Sengupta , Senior Member, IEEE, Dipanjan Roy , Student Member, IEEE, Saraju P. Mohanty , Senior Member, IEEE, and Peter Corcoran, Fellow, IEEE Abstract A novel approach for obfuscated JPEG compres- sion/decompression (CODEC) IP core design methodology, suit- able for use in re-usable IP core designs, is presented. This incorporates structural obfuscation for architecture or structure hiding from an adversary in order to maximize the com- plexity against reverse engineering. Additionally, the proposed methodology performs the entire compression and decompres- sion through a single dedicated hardware IP core. To obtain a lightweight (low cost version) of the proposed obfuscated JPEG CODEC IP, particle swarm optimization driven design space exploration is employed. Results of the proposed low cost, obfuscated JPEG CODEC IP core design when compared to un- protected (un-obfuscated) design yielded enhancement in strength of obfuscation of 76%, as well as reduction of 5% compared to un-optimized design. Index Terms JPEG CODEC, structural obfuscation, grayscale image, IP protection. I. INTRODUCTION E NERGY ef ciency and security are important constraints that a design engineer needs to balance carefully in an effective Consumer Electronics (CE) design [1]. These con- straints are equally valid for networked or stand-alone designs and motivate an exploration of new design paradigms [3], [4] to optimize the security of an electronics design at minimal additional energy cost. In modern designs there is a trend for re-usable IP cores. The use of such cores optimizes design productivity and minimizes design time. But standard IP core design pro- cess does not have ability to produce architectures that look functionally unobvious and thus makes reverse engineering harder. RE attacks could be employed by rogue elements in the design ow to implant malicious hardware logic in CE system-on-chip or to produce counterfeit designs of CE hardware. Manuscript received February 20, 2018; revised May 26, 2018; accepted June 26, 2018. Date of publication July 9, 2018; date of current version September 24, 2018. This work was supported by the Council of Scienti c and Industrial Research under Grant 22/730/17/EMR-II. (Corresponding author: Anirban Sengupta.) A. Sengupta and D. Roy are with the Discipline of Computer Science and Engineering, Indian Institute of Technology Indore, Indore 453552, India (e-mail: asengupt@iiti.ac.in; phd1501201007@iiti.ac.in). S. P. Mohanty is with the Department of Computer Science, University of North Texas, Denton, TX 76207 USA (e-mail: saraju.mohanty@unt.edu). P. Corcoran is with the College of Engineering and Informatics, National University of Ireland Galway, Galway, H91 TK33 Ireland (e-mail: peter.corcoran@nuigalway.ie). Color versions of one or more of the gures in this paper are available online at http://ieeexplore.ieee.org. Digital Object Identi er 10.1109/TCE.2018.2852265 Fig. 1. Thematic representation of obfuscated JPEG CODEC IP. IP protection ensures protection of the hardware ownership or intellectual property rights (IPR) [6]. Digital signal processing (DSP) hardware processes some form of multimedia signal including image, audio, and video as a part of a CE system [7]. In the current paper, the focus is on image digital signal processing. However, in principle, the proposed design paradigm can be undertaken for audio and video. Image compression and decompression is a major func- tionality in most of these modern CE devices. In CE devices, a dedicated IP core can play a vital role in performing this process. Since, an IP vendor/designer invests substantial cost, workforce, research, and veri cation on its design, thus, it must be protected against cloning and/or infringement (refer Fig. 1). Insertion of malicious Trojan logic into the IP core through RE attack is another major problem that is faced by an IP vendor [6]. Successful RE attack enables an adversary (in the foundry) to identify the functionality of the design to counterfeit the netlist of the design and make several copies of it without the knowledge of the IP vendor/owner. Further, if an adversary is able to identify the functionality of the design from its functional structure, he/she can make mali- cious modi cation (i.e., insert Trojan) into the design and create malfunctioning. Both these threats can be avoided if reverse engineering process is made harder for an adversary. This is possible by structurally obfuscating the design such that the functionality of it becomes un-obvious to an adversary, i.e., architecture designed to be hidden to an adversary. This strongly hinders the RE process, thus thwarting the threats. Rest of the paper is organized as follows: The novel contri- butions of this paper are summarized in Section II. Section III explains related research works. The proposed methodology and its related theory for JPEG CODEC are explained in 1558-4127 c 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. 366 IEEE TRANSACTIONS ON CONSUMER ELECTRONICS, VOL. 64, NO. 3, AUGUST 2018 Sections IV and V respectively. Section VI provides imple- mentation process of the resulting IP core design. Section VII presents the experimental results of the proposed approach. Section VIII presents conclusions and future research. II. NOVEL CONTRIBUTIONS OF THIS PAPER Reusable IP cores play a vital role in the design of modern CE devices by maximizing design productivity and minimiz- ing design time. In this paper we use the example of JPEG CODEC used in digital camera to explain how architecture can be transformed to enhance complexity against RE. Standard JPEG CODEC design process does not aim to obscure the functionality from an adversary by transforming the archi- tecture. This does not make the reverse engineering process harder for an adversary. JPEG CODEC is considered secure, if its architecture is not obvious, i.e., its functionality is not easily discoverable by inspecting its structure. JPEG CODEC has been selected as an example because it is a very vital core widely used in several CE applications. Keeping in view the recent surge of IP counterfeits and hardware Trojan, it is important to secure JPEG CODEC IP core against RE threats as failing to do so may lead to serious functional failures (due to Trojan) and/or signi cant loss to CE industry (due to IP counterfeit). There is no work in the literature that addresses this concern and it is high time that this concern be addressed. The contributions are: Proposes a novel obfuscation methodology for dedicated JPEG CODEC IP core that aims to obscure the function- ality from an adversary by transforming the architecture. This would make the reverse engineering process harder for an adversary (threat model discussed in Section IV). Enhancement in strength of obfuscation [16] of 76% is obtained through proposed method. Proposes a novel design of obfuscated JPEG CODEC IP core hardware as a proof of concept of this methodology. Optimization of the cost of the obfuscated JPEG CODEC IP core design using particle swarm based design space exploration. Reduction in design cost of 5% on the current IP core design is achieved. III. RELATED PRIOR RESEARCH IP protection techniques can be broadly classi ed into two categories: (a) passive method and (b) active method. Passive IP protection approaches such as symmetrical IP core protection mechanisms [9], computational forensic engineer- ing (CFE) [10], IP metering, hardware metering and IP vendor protection using signature [13] provide passive mode of pro- tection which is only capable of tracing the clone copies of IP core but unable to prevent it from being stolen. Active methods hide the functionality and implementation of an IP core as it passes through the different potentially untrustworthy phases of the design ow. Obfuscation is the process of transforming an original application or design into a functionally equivalent form to make the reverse engineer- ing process signi cantly more complex [2], [5], [8], [12]. This can be done in two ways (a) key based, known as logic encryption [11]; (b) non-key-based, known as structural obfus- cation. In logic encryption, the functionality is known to an attacker but the right combination of key is unknown; on the other hand structural obfuscation tries to hide the correct func- tionalities of the design [16], therefore protection through key is not required. Moreover, in [2], [5], and [8] obfuscation is performed for sequential/combinational circuits at gate or layout level but not for DSP core at architectural level. In this paper, we have proposed low-cost high-level transforma- tion based structurally obfuscated IP core design for JPEG CODEC. A new recursive algorithm and two types of circuit archi- tectures for the computation of 2D DCT is presented in [14]. The proposed algorithm is capable of computing the 2D DCT using the 1D DCT recursively. A theoretical analysis on the variation of local variance due to JPEG compression is pre- sented in [14]. It is suggested that the local variance under JPEG compression can be used in image processing and anal- ysis, such as image enhancement, image quality assessment, and image ltering. A wavelet transformation based grayscale image CODEC IP core is proposed in [15]. The architec- ture achieves ef cient hardware utilization and lower hardware cost. Further, Sengupta et al. [16] have proposed protection of DSP cores using compiler based transformations. The current state of the art either do not offer resiliency against RE [14], [15] or may use key based logic locking [11], [12] for resiliency against RE. However, logic locking may incur design cost overhead in terms of area and latency. Secondly, deciding appropriate location for key inser- tion is not trivial and may require separate algorithm which may increase the complexity. Thirdly, key based logic lock- ing is vulnerable to Boolean Satis ability (SAT) attack, the protection against which may require complex block such as AES, which may again incur design overhead. However, enhancing complexity against RE attack through structural obfuscation does not incur the above limitations. Thus struc- tural obfuscation although being a passive mode of protection offers substantial resiliency against RE at zero design over- head compared to the key based active mode of protection. Our example JPEG CODEC IP core used in this paper not only makes the architecture unobvious through high-level transformation based structural obfuscation but also explores a low-cost design solution through PSO. IV. PROPOSED METHODOLOGY This section discusses the proposed methodology for obfus- cation of DSP core for CE systems as well as the low cost design space exploration system using PSO. We would also present the threat model and its solution. A. Proposed Obfuscation The proposed obfuscation methodology is capable to yield an obfuscated structure/architecture whose functionality is unobvious to an adversary. Through the proposed method an unsecured IP design, containing micro IP as well as the over- all macro IP, is structurally obfuscated through Tree Height Transformation (THT). THT is a compiler driven optimiza- tion that is useful for obfuscating an original DSP core design by transforming the height of the graph. It divides the critical path dependency into temporary sub-computations and eval- uates in parallel, thereby generating functionally equivalent yet structurally dissimilar graph elements. Following are the generic detailed steps of the proposed obfuscation: 1. Formulate the transfer function or mathematical repre- sentation of a DSP core. 2. Perform expansion of the formulated transfer function or mathematical representation of a DSP core. SENGUPTA et al.: LOW-COST OBFUSCATED JPEG CODEC IP CORE FOR SECURE CE HARDWARE 367 3. Derive the data ow graph (DFG)/control data ow graph (CDFG) corresponding to the DSP core. 4. Identify micro IPs within the macro IP corresponding to the above DFG/CDFG obtained. 5. Apply THT based structural obfuscation on each iden- ti ed micro IPs as well as the macro IP of the corresponding DFG/CDFG. 6. Feed the THT-driven obfuscated DFG/CDFG of the DSP core into the High-Level Synthesis (HLS) engine. 7. Finally, a structurally obfuscated DSP core is obtained. B. Proposed Design Space Exploration System for Low-Cost Obfuscated DSP Core The proposed approach integrates the obfuscation method- ology with a Particle swarm optimization design space explo- ration (DSE) optimization framework. PSO process: PSO is a population-based heuristic optimiza- tion that searches for an optimal solution iteratively. Each solution of the search-space is encoded as a particle and the tness of each particle is evaluated based on the tness func- tion. The velocity of each particle directs the movement of the particle. The particles move through the search-space by following the current global best gbest and its own best loca- tion lbest. After nding a better gbest or lbest the ith particle updates its velocity and position thus move towards the best solutions. More details are available in [6]. Bene ts of PSO: a) Ability to escape local minima and converge on global optima in most cases, b) ability to intro- duce stochasticity into the exploration process, c) preserves exploration-exploitation balance during searching low-cost solution. PSO-DSE is performed on obfuscated DSP core DFG/CDFG, in order to achieve a low-cost IP core version. In other words, for obtaining low cost obfuscated IP hardware, obfuscated DSP core DFG/CDFG, module library, PSO con- trol parameters and PSO terminating condition are fed as the inputs to the PSO-DSE block. Initialization of particle: Each particle (Pi) is a solution of design resources that can be expressed as: Pi = {N(R1), N(R2), . . . N(RD)} (1) where, N(R_D) is the number of resource type R_D. The particles are initialized based on uniform distribution over the search space and can be represented as follows [6]: Pn = (min(R1) + max(R1)) 2 , . . . (min(RD) + max(RD)) 2  (2) where, is a random integer between min value and max value of a particular resource type. Movement of particle using velocity: In the PSO-DSE process [6], each dimension (d) of a particle velocity (Vdi) is updated based on the following equation: V+ di = Vdi + b1r1  Rdlbi Rdi  + b2r2  Rdgb Rdi  (3) where, V+ di and Vdi are new and current velocity of ith particle in dth dimension respectively; Rdi is resource value/unrolling factor of ith particle in dth dimension; Rdlbi and Rdgb are the local best position and global best of ith particle in dth dimension. Fig. 2. 2D-DCT coef cient matrix. Fig. 3. Generic 8x8 matrix of input image. C. Threat Model and Problem Formulation 1) Threat Model: The proposed work by performing obfus- cation based architectural change, converts the design archi- tecture into a form whose functionality is not obvious to an adversary. Thus makes it harder to reverse engineer as it is harder for an adversary to discover the actual functionality. 2) Problem Formulation and Fitness Model: Design a low- cost, obfuscated, IP core. The tness of each particle based on area-delay trade-off can be evaluated through the following: Cf (Pi) = 1 ADSP T ADSP max + 2 DDSP T DDSP max (4) where, Cf(Pi) is the cost of the particle Pi; ADSP T and DDSP T indicate the total area and total execution delay of the obfus- cated DSP core IP design respectively; ADSP max and DDSP max indicate the maximum area and execution delay of the afore- mentioned design respectively; 1 and 2 are user de ned weight parameter for area and delay respectively, where the values lie between 0 to 1 (in proposed approach, equal weightage is assigned to both 1 and 2). V. PROPOSED METHODOLOGY ON JPEG CODEC IP CORE In this section we explain the application of the proposed methodology on JPEG CODEC IP core. Firstly, the overview of JPEG process is provided. Next we demonstrate the pro- posed method on the design of low-cost obfuscated JPEG compression IP core, followed by demonstration on the design of low-cost obfuscated JPEG decompression IP core. A. Overview of JPEG Process In JPEG compression/decompression, pre-processed image is taken as input. At rst an NxN or NxM gray scale image is converted into an NxN or NxM matrix. Each integer value 368 IEEE TRANSACTIONS ON CONSUMER ELECTRONICS, VOL. 64, NO. 3, AUGUST 2018 of the matrix represents the pixel intensity of a particular pair of co-ordinate (x,y) of the image. For 8-bit depth gray scale images the range is 0 to 255, where 0 indicates pure black and 255 indicates pure white. Next, the input matrix is then sub- divided into multiple non-overlapping 8x8 blocks of pixels. The generic 2D-DCT coef cient matrix T can be presented as shown in Fig. 2. As 2D-DCT can process an 8x8 block at a time, the input image is sub-divided into multiple non- overlapping 8x8 blocks of pixels. A generic pixel intensity of a 8x8 input image matrix M can be presented in the form of mij as shown in Fig. 3 where, i and j represent the row and column number respectively of the pixel inten- sity of the 8x8 input image block.2D-DCT coef cients and standard quantization matrix are also fed as inputs. Finally, as DCT can handle pixel value within the range of 128 to 127, each block is leveled off by subtracting 128 from each pixel intensity. The quantized pixel intensity data can be rep- resented as 8x8 2-dimensional matrix forms. Zigzag scanning is performed on this output data to convert it into 1-dimension array and then run-length encoding is applied to generate the bit stream data of the compressed image for nally storing it in a storage device. To decompress the image pixel intensities from the stored data, the stored bit stream representing com- pressed pixel data is rst decoded through run-length decoding and then through inverse zigzag scanning, its equivalent 2D image pixel intensity matrix is reconstructed. To perform JPEG image decompression, inverse quantization is applied on the compressed image pixel block by multiplying each element of block with the corresponding element of the quantization matrix (Q) to obtain de-quantized image pixel intensities. Next inverse DCT is applied on the de-quantized compressed image block for decompression. Inverse DCT of compressed image block is achieved by applying 2D-DCT coef cient matrix on the de-quantized image block. 2D-DCT coef cients and standard quantization matrix are also fed as inputs. B. Overview of Proposed Obfuscation Methodology in Compression Using the proposed obfuscation steps in Section IV-A and DSE engine process in Section IV-B, the proposed low-cost, obfuscated JPEG compression IP core is designed. The design process includes multiple steps (as shown in Fig. 6). Initially an unprotected (unsecured) JPEG compression application in the form of a Data Flow Graph (DFG) is accepted as an input. Next, resiliency in the form of structural obfuscation is provided to the unsecured DFG to obtain an obfuscated version. This obfuscated DFG is process through an optimiza- tion framework to obtain a low-cost hardware con guration (detail explained in Section IV-B earlier).Thus this low-cost hardware con guration is used to design an obfuscated dedi- cated hardware for JPEG compression IP core (IP core 1). The proposed obfuscated JPEG compression IP core uses levelized pixel intensity as input to generate the compressed image pixel intensity as output. Finally, to generate the compressed pixel intensities through proposed IP core, 2D-DCT coef cients and standard quantization matrix are also fed as inputs. C. Generating Non-Obfuscated JPEG CODEC IP Core in Terms of Data Flow Graph To perform DCT on an input image block, 2D-DCT coef - cient matrix (T) is hit on the input block (M) through on the following expression: X = D Ttrans (5) Where, D is calculated through D = T M (6) Elements of D matrix (d11,d12,. . . d88) indicates column wise transformed elements of input block. Further, elements of X matrix (X11, X12,. . . X88) indicates both row and col- umn wise transformed elements of input block. Thus, X is the corresponding discrete cosine transformed block of input image block M; Ttrans is the transpose of 2D-DCT coef cient matrix T . To convert the matrix relationship into a hardware function for dedicated IP core design, the pixels (mij) of the input image block (M) is transformed into compressed image pixel (Xij) (using (5)). For example, X11 which is the rst pixel of the compressed image is modeled as follows: X11 = (c4 d11 + c4 d12 + c4 d13 + c4 d14 + c4 d15 + c4 d16 + c4 d17 + c4 d18) (7) Where, d11, d12,. . . d18 is calculated as follows: d11 = c4 m11 + c4 m21 + c4 m31 + c4 m41 + c4 m51 + c4 m61 + c4 m71 + c4 m81 (8) d12 = c4 m12 + c4 m22 + c4 m32 + c4 m42 + c4 m52 + c4 m62 + c4 m72 + c4 m82 (9) Similarly, d18 = c4 m18 + c4 m28 + c4 m38 + c4 m48 + c4 m58 + c4 m68 + c4 m78 + c4 m88 (10) Similarly, other pixels of the block (M) are transformed where the input pixels remain same but the 2D-DCT coef- cients become different. Thus the structure of the equation remain same, however only the inputs will be different while computing different transformed image pixel intensities. An equivalent DFG corresponding to (7) denoting an unse- cured/unprotected (un-obfuscated) JPEG image compression is shown in Fig. 4, Each macro IP is designed using eight struc- turally equivalent micro IPs (name IP1-IP8); and each micro IP executes dij using (8)-(10). The un-obfuscated macro IP with one zoom in micro IP is also shown in Fig. 4. Each micro IP operation, addition operation and multiplication operation are indicated by purple, blue and orange node respectively. As shown in Fig. 4 the output of operation 135 generates the pixel intensity of the transformed image (X). Post DCT transformation, pixel intensities of 8x8 image block (X) obtained are then compressed through quantization. To achieve different quality level (ranging from 1 to 100), dif- ferent quantization matrix is used. Quality level 100 indicates less compression but higher quality image and quality level 0 indicates higher compression but less quality image. This is achieved through operation 136 performing the quantiza- tion on the transformed image pixel intensities (X) based on the corresponding element q of the quantization matrix (Q). This produces the nal output as quantized/compressed image pixel intensities (X ). Next, this un-obfuscated macro IP will be secured through high-level transformation based structural obfuscation in proposed approach which has been explained in next sub-section. SENGUPTA et al.: LOW-COST OBFUSCATED JPEG CODEC IP CORE FOR SECURE CE HARDWARE 369 Fig. 4. Non-obfuscated data ow graph of JPEG image compression for calculating rst pixel of the compressed image (X 11). Fig. 5. Obfuscated data ow graph of JPEG image compression for calculating rst pixel of the compressed image (X 11). D. Generating Obfuscated JPEG Compression IP Core After performing THT-based structural obfuscation on JPEG DFG, the number of nodes in the original structure that gets affected is 12 (out of 16 nodes shown in Fig. 4) for micro IP DFG. The nodes that have got affected are node number 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14 and 15, as for the aforesaid nodes either the input/ output connectivity to the resources changes or the number of resources per control step changes, result- ing into different datapath architecture and controller logic. Thus overall number of nodes affected in the macro IP is 102 nodes. This is because for every micro IP 12 nodes are affected and there are total 8 micro IPs in the entire obfus- cated graph. The additional 6 nodes that are affected are node number 130, 131, 132, 133, 134 and 135, as for the aforesaid Fig. 6. Obfuscated JPEG compression IP core. nodes either the input/ output connectivity to the resources changes or the number of resources per control step changes, resulting into a different datapath architecture and controller logic. The obfuscated macro IP with one zoom in obfuscated micro IP is shown in Fig. 5 where, each micro IP, adder and multiplier is represented through purple, blue and orange node respectively. Next phase of proposed design methodol- ogy is to generate a low-cost design for obfuscated macro IP core for JPEG compression via PSO-DSE process using HLS framework [6]. E. Overview of Proposed Design Obfuscation Methodology in Decompression The proposed low-cost, obfuscated JPEG decompression IP core is designed through multiple steps (as shown in Fig. 7). Similar to the proposed obfuscated JPEG compression IP core design process, the proposed low cost obfuscated JPEG decompression IP core design process also accepts an unpro- tected (un-obfuscated) JPEG decompression DFG as input. Similarly, as performed in compression of JPEG IP core, resiliency in the form of structural obfuscation is provided to the unsecured DFG to obtain an obfuscated decompression DFG. This obfuscated DFG is process through an optimiza- tion framework to obtain a low-cost hardware con guration. Thus this low-cost hardware con guration is used to design an obfuscated dedicated hardware for JPEG decompression IP core (IP core 2) is obtained. Finally, for generating the decom- pressed pixel intensities through proposed IP core 2, 2D-DCT coef cients and standard quantization matrix are fed as inputs. The detailed explanation of each step for proposed obfuscated JPEG decompression IP core hardware is explained in next sub-sections. F. Generating Obfuscated JPEG CODEC IP Core for Decompression in Terms of Data Flow Graph Similar to the JPEG image compression process, in case of performing decompression the compressed image is also seg- mented into multiple 8x8 blocks. Inverse DCT of compressed image block is achieved by applying 2D-DCT coef cient matrix on the de-quantized image block (X ) based on the 370 IEEE TRANSACTIONS ON CONSUMER ELECTRONICS, VOL. 64, NO. 3, AUGUST 2018 Fig. 7. Obfuscated JPEG decompression IP core. following expression: O = E T (11) Where, E is calculated through (12) E = Ttrans X (12) Elements of E matrix (e11, e12, . . . e88) indicates col- umn wise transformed elements of de-quantized image block. Further, elements of O matrix (o11, o12, . . . o88) indicates both row and column wise transformed elements of de- quantized image block. Thus O is the corresponding inverse DCT block of de-quantized image block X . To convert the matrix relationship into a hardware function for dedicated IP core design, the pixels (X ij) of the de-quantized image block (X ) is transformed into decompressed image pixel (oij) (using (11)) as shown in (12). For example for o11 which is the rst pixel of the decompressed image is presented as follows: o11 = (c4 e11 + c1 e12 + c2 e13 + c3 e14 + c4 e15 + c5 e16 + c6 e17 + c7 e18) (13) Where, e11, e12,. . . e18 is calculated as follows: e11 =  c4 X 11 + c1 X 21 + c2 X 31 + c3 X 41 + c4 X 51 + c5 X 61 + c6 X 71 + c7 X 81 (14) e12 =  c4 X 12 + c1 X 22 + c2 X 32 + c3 X 42 + c4 X 52 + c5 X 62 + c6 X 72 + c7 X 82 (15) Similarly, e18 =  c4 X 18 + c1 X 28 + c2 X 38 + c3 X 48 + c4 X 58 + c5 X 68 + c6 X 78 + c7 X 88 (16) Similarly, other pixels of the de-quantized image block (X ) are transformed through inverse DCT matrix where the input pixels remain the same however the 2D-DCT coef cients become different. It is to be noted that the structure and pattern of forward DCT (5) and inverse DCT (11) are same, but only the inputs are different during computation of decompressed image pixel intensity. An equivalent DFG corresponding to (13) denoting an unse- cured/unprotected (un-obfuscated) JPEG image decompression can be obtained. As performed for JPEG compression DFG, Fig. 8. Proposed hardware and software design ow using JPEG compression IP. obfuscation through tree height transformation can be per- formed on the un-obfuscated JPEG decompression DFG. Each micro IPs, as well as the complete macro IP, is structurally obfuscated through Tree Height Transformation. Similar to JPEG image compression DFG, an obfuscated JPEG decom- pression macro IP is designed using eight structurally equiva- lent micro IPs (name IP1-IP8), where each micro IP executes a part of (13). Note: for the sake of brevity, JPEG decom- pression DFG has not been included. Finally, de-levelization is performed on obfuscated DFG output pixel intensity of decompressed image by adding 128. Next phase of proposed design methodology is to gen- erate a low-cost design for obfuscated macro IP core of JPEG decompression through PSO-DSE process using HLS framework [6]. More details about PSO-DSE are available in the next Section. VI. PROPOSED IMPLEMENTATION OF JPEG CODEC IP CORE This section explains the proposed implementation. A. Proposed Design of Obfuscated JPEG Compression IP Fig. 8 shows the complete design setup for proposed JPEG compression process using proposed IP core. The IP core used is capable to accept an 8x8 block of a processed gray-scale image pixel intensity stored in a hardware queue along with 2D-DCT coef cients and standard quantization matrix. It per- forms transformation using 2D-DCT coef cient, quantize and round off the transformed result and nally generates the pixel intensities of the compressed image data (X ). As explained in Fig. 6 earlier, design resource con gura- tion of 3 adders and 3 multipliers obtained through PSO-DSE process is used for designing proposed low-cost obfuscated JPEG IP core. The obfuscated DFG shown in Fig. 5 is sched- uled in different control step (c.s.) based on As Soon As Possible (ASAP) algorithm using this resource con guration. Binding is performed on the scheduled DFG to map 136 opera- tions of JPEG compression DFG to 3 adders and 3 multipliers. The c.s of each operation and their corresponding mapped hardware is shown in Table I. After performing scheduling and SENGUPTA et al.: LOW-COST OBFUSCATED JPEG CODEC IP CORE FOR SECURE CE HARDWARE 371 Fig. 9. DSP representation of the proposed obfuscated JPEG compression IP core. binding the development of JPEG compression IP core system is obtained through HLS framework [6]. The system block diagram comprises into two parts, data-path and controller. Three 16-bit adders (Adder_A1, Adder_A2 and Adder_A3) and three 16-bit multipliers (Multiplier_M1, Multiplier_M2 and Multiplier_M3) along with ten 32:1 and two 16:1 mul- tiplexer, ve 1:32 and one 1:16 demultiplexer, 40 registers and 18 latches are used to design the complete data-path of the proposed IP core. All the resources are of 16-bits because both inputs and outputs are in 16 bits IEEE 754 half precision oating-point format. The datapath block diagram is shown Fig. 9. B. Proposed Design of Obfuscated JPEG Decompression IP Low-cost design resource con guration obtained through PSO-DSE process is used for designing proposed low-cost obfuscated JPEG decompression IP core (Fig. 7). In the pro- posed approach, a low cost design resource con guration comprising of 3 adders and 3 multipliers is obtained through PSO-DSE to design a low-cost obfuscated JPEG decompres- sion IP core. The obfuscated DFG (similar to Fig. 5) is scheduled in different c.s. based on ASAP algorithm based on the aforementioned resource con guration. Binding is per- formed on the scheduled DFG to map 136 operations of JPEG decompression DFG to 3 adders and 3 multipliers. After per- forming scheduling and binding, the development of data-path and controller of JPEG decompression IP core is performed. Along with three 16-bit adders and three 16-bit multipliers, ten 32:1 and two 16:1 multiplexer, ve 1:32 and one 1:16 demul- tiplexer, 40 registers and 18 latches are used to design the complete data-path of the proposed JPEG decompression IP core. The designed decompression IP core is capable of accepting an 8x8 block of compressed image pixel intensity along with 2D-DCT coef cients and standard quantization matrix. It is capable of performing inverse quantization fol- lowed by inverse transformation using 2D-DCT coef cient, to nally generate a levelized decompressed image pixel intensity value as output. C. Demonstration of End to End Process For demonstration, a two-dimensional 512x512 gray scale image shown in Fig. 10(a) is taken as the input in the form of a matrix. This input matrix is then sub-divided into multi- ple non-overlapping 8x8 blocks. Fig. 10(b) represents the nth 8x8 block of the input image which is compressed through our proposed compression IP core (shown in Fig. 10(c)). The output of proposed JPEG compression IP core produces DCT quantized image pixel intensity values. The DCT quantiza- tion image of the corresponding input image is shown in Fig. 10(d), where quantization is performed based on quan- tization matrix Q90. To reconstruct de-quantized image, the DCT quantized image (after multiplying with Q90 quantization matrix) as shown in Fig. 10(d) is again sub-divided into mul- tiple non-overlapping 8x8 blocks (shown in Fig. 10(e)). Each block of de-quantized image is then decompressed through our proposed JPEG decompression IP core, shown in Fig. 10(f) to generate 8x8 output blocks. Fig. 10(g) represents the nth 372 IEEE TRANSACTIONS ON CONSUMER ELECTRONICS, VOL. 64, NO. 3, AUGUST 2018 Fig. 10. Depiction of end to end process of JPEG image compression. TABLE I SCHEDULING AND BINDING OF OPERATIONS FOR OBFUSCATED JPEG IP CORE 8x8 block of the output image. After combing all 8x8 out- put blocks of decompressed image, the output reconstructed image of size 512x512 is generated, as shown in Fig. 10(h). VII. EXPERIMENTAL RESULTS Standard 512x512 gray scale test images [17] and NASA images [18] are used as image dataset to generate com- pressed/decompressed images through the proposed IP cores. Both the proposed IP cores are implemented in standard syn- thesis tool. The FPGA device utilization summary of proposed IP cores is reported in Table II. The comparison of proposed low-cost obfuscated JPEG CODEC IP core with an obfus- cated JPEG CODEC IP core (without optimization) in terms of design area, latency and cost is shown in Table III (note: TABLE II DEVICE UTILIZATION SUMMARY OF PROPOSED IP CORES W.R.T. FPGA TABLE III COMPARISON BETWEEN NON-OPTIMIZED OBFUSCATED JPEG CODEC IP CORE WITH PROPOSED LOW-COST OBFUSCATED IP CORE IN TERMS OF AREA, LATENCY AND COST design cost is calculated using eqn (4) which is a weighted function of normalized area and normalized delay for obfus- cated design. Thus it does not have any unit). Non-optimized obfuscated JPEG CODEC IP core indicates obfuscated JPEG CODEC design generated without involving PSO-DSE (i.e., without optimization). Thus it incurs more design overhead due to lack of optimization framework during designing. The NanGate library is used to evaluate both the area and the latency of IP core design [19]. It can be observed from Table III that the proposed JPEG CODEC IP core achieves reduction of greater than 5% in design cost compared to the non-optimized obfuscated JPEG. This is due to the tree height transformation applied on the JPEG CODEC data ow graph followed by integration of particle swarm optimization DSE framework. Tree height transformation in proposed methodology drastically reduces the length of the critical path of the DFG thus minimizing schedule delay. This impacts reduction of cost. Subsequently this transformed DFG is fed into PSO-DSE which iteratively prunes the design space and explores an optimal low cost design resource. As these are novel solutions to reduce the design cost and never applied during JPEG CODEC IP core SENGUPTA et al.: LOW-COST OBFUSCATED JPEG CODEC IP CORE FOR SECURE CE HARDWARE 373 TABLE IV COMPARISON BETWEEN NON-OBFUSCATED JPEG CODEC IP CORE WITH PROPOSED LOW-COST OBFUSCATED JPEG CODEC IP CORE design before, hence these two layers of optimizations are not performed by synthesis tools. Since the proposed CODEC achieves reduction of design cost/overhead thus it has been called low-cost JPEG CODEC IP core . Further, Table IV reports the comparison between proposed low-cost obfuscated JPEG CODEC IP core with a non-obfuscated JPEG CODEC IP core in terms of design area, latency, cost and Strength of Obfuscation (SoO). The SoO metric is given as [16]: SoO = ai/aT i (17) where ai is the number of modi ed nodes of the DFG due to proposed obfuscation using THT; aiT is the total number of nodes before applying obfuscation using THT technique. The SoO metric indicates how strong an obfuscated JPEG CODEC design is concealed in terms of structural identity. The more the design is obfuscated, higher is the complexity in discover- ing the functionality through the architecture, thus minimizing chances of RE. As shown in Table IV, SoO of 76% is achieved through the proposed approach compared to standard non- obfuscated JPEG CODEC IP. Further, as shown in this table, the change (reduction) in gates due to proposed obfuscation is 10,064. This indicates massive structural transformation at gate level of JPEG CODEC IP core architecture due to trans- formation in functional resources, multiplexers, demultiplexers and registers. This massive transformation makes the archi- tecture/structure of JPEG IP core un-obvious to an adversary in terms of functionality. An adversary would nd it dif cult to discover the actual functionality of the design structure. Total six images are selected from datasets [17], [18] to report the compression ef ciency obtained through proposed JPEG CODEC IP core. Table V reports the storage size, reduc- tion percentage, Mean Square Error (MSE) and Peak Signal to Noise Ratio (PSNR) of compressed image for quantiza- tion value 90 (Q90). JPEG properties have only been reported in table V to validate (establish) that the designed obfus- cated JPEG IP core achieves the desired capability of strong compression ef ciency. Though approaches [11] and [13] offer IP core protection but [11] is key-based functional obfuscation for combinational circuits (does not employ structural obfuscation and target DSP cores); while [13] is electronics signature based protection for protecting authors rights through detection of cloned copies. However it does not aim to complicate RE as well as does not target structural obfuscation of DSP core. Since [11] and [13] are very different from the proposed method, thus it has not been experimentally compared. TABLE V STORAGE SIZE, REDUCTION PERCENTAGE, MSE AND PSNR OF COMPRESSED IMAGE FOR Q90 (IMAGES 1 TO 6 HAVE BEEN EXTRACTED FROM [17] AND [18]) VIII. CONCLUSION AND FUTURE WORK This paper proposed a low-cost obfuscation for JPEG CODEC IP core. Future works aims to amplify the SoO of pro- posed approach by including stronger structural obfuscation in the form of multi-level transformation in different abstraction levels. We also aim to integrate functional obfuscation with structural obfuscation during DSP core synthesis. REFERENCES [1] R. K. Krishnamurthy et al., (Jan. 13, 2018). Energy and Cybersecurity Constraints on Consumer Electronics. [Online]. Available: http://www.icce.org/expert-panels/ [2] J. Dofe and Q. Yu, Novel dynamic state-de ection method for gate- level design obfuscation, IEEE Trans. Comput.-Aided Design Integr. Circuits Syst., vol. 37, no. 2, pp. 273 285, Feb. 2018. [3] S. P. Mohanty, Everything you wanted to know about Internet of Things, IEEE CE Society DL, 2017. [Online]. Available: https:// cesoc.ieee.org/images/ les/pdf/Mohanty_IEEE-DL_IoT.PDF [4] Q. Tang, M. Groba, E. Juarez, C. Sanz, and F. Pescador, Real-time power-consumption control system for multimedia mobile devices, IEEE Trans. Consum. Electron., vol. 62, no. 4, pp. 362 370, Nov. 2016. [5] L. Li and H. Zhou, Structural transformation for best-possible obfus- cation of sequential circuits, in Proc. IEEE Int. Symp. Hardw. Orient. Security Trust (HOST), Austin, TX, USA, 2013, pp. 55 60. [6] A. Sengupta, S. Bhadauria, and S. P. Mohanty, TL-HLS: Methodology for low cost hardware trojan security aware scheduling with optimal loop unrolling factor during high level synthesis, IEEE Trans. Comput.-Aided Design Integr. Circuits Syst., vol. 36, no. 4, pp. 655 668, Apr. 2017. [7] F. Pescador, G. Maturana, M. J. Garrido, E. Juarez, and C. Sanz, An H.264 video decoder based on a latest generation DSP, IEEE Trans. Consum. Electron., vol. 55, no. 1, pp. 205 212, Feb. 2009. [8] B. Shakya, N. Asadizanjani, D. Forte, and M. Tehranipoor, Chip editor: Leveraging circuit edit for logic obfuscation and trusted fabrication, in Proc. IEEE/ACM Int. Conf. ICCAD, Austin, TX, USA, 2016, pp. 1 8. [9] D. Roy and A. Sengupta, Low overhead symmetrical protection of reusable IP core using robust ngerprinting and watermarking during high level synthesis, Future Gener. Comput. Syst., vol. 71, pp. 89 101, Jun. 2017. [10] J. L. Wong, D. Kirovski, and M. Potkonjak, Computational forensic techniques for intellectual property protection, IEEE Trans. Comput.- Aided Design Integr. Circuits Syst., vol. 23, no. 6, pp. 987 994, Jun. 2004. [11] R. S. Chakraborty and S. Bhunia, RTL hardware IP protection using key-based control and data ow obfuscation, in Proc. 23rd Int. Conf. VLSI Design, 2010, pp. 405 410. [12] Y. Lao and K. K. Parhi, Obfuscating DSP circuits via high-level trans- formations, IEEE Trans. Very Large Scale Integr. (VLSI) Syst., vol. 23, no. 5, pp. 819 830, May 2015. [13] E. Castillo, U. Meyer-Baese, A. Garcia, L. Parrilla, and A. Lloris, IPP@HDL: Ef cient intellectual property protection scheme for IP cores, IEEE Trans. Very Large Scale Integr. (VLSI) Syst., vol. 15, no. 5, pp. 578 591, May 2007. [14] J. Yang, G. Zhu, and Y.-Q. Shi, Analyzing the effect of JPEG compres- sion on local variance of image intensity, IEEE Trans. Image Process., vol. 25, no. 6, pp. 2647 2656, Jun. 2016. [15] A. Sengupta, D. Roy, S. P. Mohanty, and P. Corcoran, A framework for hardware ef cient reusable IP core for grayscale image CODEC, IEEE Access, vol. 6, pp. 871 882, 2018. 374 IEEE TRANSACTIONS ON CONSUMER ELECTRONICS, VOL. 64, NO. 3, AUGUST 2018 [16] A. Sengupta, D. Roy, S. P. Mohanty, and P. Corcoran, DSP design pro- tection in CE through algorithmic transformation based structural obfus- cation, IEEE Trans. Consum. Electron., vol. 63, no. 4, pp. 467 476, Nov. 2017. [17] Dataset of Standard 512512 Grayscale Test Images. Accessed: Nov. 23, 2017. [Online]. Available: http://decsai.ugr.es/cvg/CG/base.htm [18] NASA Image and Video Library. Accessed: Dec. 2017. [Online]. Available: https://images.nasa.gov/n#/ [19] (2017). NanGate 15 nm Open Cell Library. Accessed: Dec. 2017. [Online]. Available: http://www.nangate.com/?pageid=2328 Anirban Sengupta (M 09 SM 17) is a Faculty Member (Associate Professor appointment approved) in computer science and engineering with the Indian Institute of Technology Indore. He has authored over 150 publications. He is an IEEE Distinguished Lecturer of IEEE CE Society. He is currently a Senior Editor of the IEEE Consumer Electronics Magazine. Dipanjan Roy (S 16) is a Research Scholar in computer science and engineering with the Indian Institute of Technology Indore. He was a Software Development Engineer with Amazon Development Center, Bengaluru. Saraju P. Mohanty (M 04 SM 08) is a Professor with the Department of Computer Science and Engineering, University of North Texas. He has authored 250 peer reviewed publications and three books. He is an IEEE Distinguished Lecturer of IEEE CE Society. He is the Editor-in-Chief of the IEEE Consumer Electronics Magazine. Peter Corcoran (F 10) holds the Personal Chair in electronic engineering with the College of Engineering and Informatics, NUI Galway. He has co-authored over 300 technical publications and co-invented over 300 granted U.S. patents. He is the Founding Editor of the IEEE Consumer Electronics Magazine.