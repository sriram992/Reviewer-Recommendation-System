See discussions, stats, and author profiles for this publication at: https://www.researchgate.net/publication/338539232 Investigation of Crack Properties Using Image Processing: An User Interface Chapter January 2020 DOI: 10.1007/978-981-15-1404-3_8 CITATIONS 2 READS 430 4 authors, including: Some of the authors of this publication are also working on these related projects: 3D Nonlinear Modeling of Buried Continuous Pipeline Subjected to Ground Compression View project Sandbox technique Ramappa Temple View project Venkata Dilip Kumar Pasupuleti Mahindra University cole Centrale School of Engineering 49 PUBLICATIONS 55 CITATIONS SEE PROFILE All content following this page was uploaded by Venkata Dilip Kumar Pasupuleti on 13 May 2020. The user has requested enhancement of the downloaded file. Investigation of Crack Properties Using Image Processing: An User Interface Sravya Nedunuri, Nihitha Thota, Venkata Dilip Kumar Pasupuleti and Prafulla Kalapatapu Abstract This research work focuses on processing the images of concrete walls to identify cracks with the help of a Graphic User Interface (GUI) created using MATLAB Guide. The developed GUI gives the length, width and type of the crack as outputs to an input image of a concrete wall. It uses image processing techniques to arrive at the output. The scope of this paper is limited to cracks that do not have any branches. This is being developed primarily to minimize the human error in identifying cracks in various buildings. The images are processed by rst converting them into grayscale images and then into binary images. The images used in our case study are taken from Mahindra Ecole Centrale college campus buildings. The results obtained are veri ed with the manual inspection of the cracks. The accuracy of length is 92.947% and the accuracy of width is 78.09%. Keywords Cracks Image processing Length and width of the crack Crack detection GUI Cracks on concrete walls 1 Introduction Cracks occur on all types of concrete buildings irrespective of the age of the building. Theyaretheearliestindicationsoffailureinaconcretestructure.Generally,engineers use manual methods to analyze cracks, which involve, measuring and sketching the crack. The drawbacks of these methods are that they totally depend on the knowledge S. Nedunuri N. Thota V. D. K. Pasupuleti (B) P. Kalapatapu College of Engineering, Mahindra cole Centrale, Hyderabad, Telangana, India e-mail: venkata.pasupuleti@mechyd.ac.in S. Nedunuri e-mail: sravya14223@mechyd.ac.in N. Thota e-mail: nihitha14188@mechyd.ac.in P. Kalapatapu e-mail: prafulla.kalapatapu@mechyd.ac.in Springer Nature Singapore Pte Ltd. 2020 K. Ganesh Babu et al. (eds.), Emerging Trends in Civil Engineering, Lecture Notes in Civil Engineering 61, https://doi.org/10.1007/978-981-15-1404-3_8 81 82 S. Nedunuri et al. of the engineer and are prone to human errors. Today, with the advancement in technology, high-rise buildings, huge dams, etc. are being built. The cracks formed on these structures cannot be manually analyzed. To overcome this problem, we are proposing a technique which can give length and width of the crack when an image of the crack is given as input. Cracks occur in various shapes and sizes. They can be straight, toothed, non- uniform width and so on. They can also differ in their orientation, some cracks can be vertical, some horizontal and some diagonal. There are many causes for the occurrence of the cracks, but, the Indian Standards code book (SP25) speci es three main causes, which are: size, damage caused and cause of occurrence (Fig. 1). Based on the size, SP25 classi es the cracks as follows: If the width of the crack is less than 1 mm, then it is a thin crack. If the width is between 1 and 2 mm then it is a medium crack. If the width is greater than 2 mm then it is a wide crack. Based on damage caused, the cracks are classi ed as Structural and Non-Structural Cracks. Structural cracks are formed due to faults in design or faults in construction practices. These are harmful to the health of the structure. These cracks should be addressed as soon as possible. Non-structural cracks are formed due to internally induced stresses in the materials used. These cracks are not harmful to the structure but may become harmful if not treated on time. They can also allow water seepage into the interior of the building and that in turn can cause corrosion of steel. Fig. 1 Classi cation of cracks Investigation of Crack Properties Using Image Processing 83 The causes for the formation of cracks as prescribed by the Indian Standard SP25 are: moisture changes, thermal variations, elastic deformations, creep, and movement due to chemical reactions, foundation movement, and settlement of soil and vegetation growth in the concrete walls/foundation [1]. Cracks formed due to moisture changes are called shrinkage cracks while the cracks formed due to thermal variations are called shear cracks (Fig. 2). In this study, we have worked on thin, medium and wide cracks which are the cracks based on size. In our future study, we will be working on cracks based on damage and cause of occurrence by improving our current processing method. The primary reasons for the study of cracks are: i. Safety: Cracks are indicative of structural stability. They are the preliminary signs of a forthcoming failure of an important structural component. Observing them in their early stages is necessary to prevent casualties. ii. Investment Protection: When a structure is built, it is expected to remain intact as long as it is intended. Therefore, to ensure that happens, monitoring the health of the structures using cracks as an indication serves as a measure to protect the investment. iii. Minimize repair costs: When non-structural cracks are taken care of at an early stage, the reinforcement is not corroded and other chemical reactions which are Fig. 2 Shear crack in our campus building 84 S. Nedunuri et al. harmful to the health of the structure are prevented. This results in the reduction of the repair/maintenance costs of the building. iv. Assess urgency of the repair: By studying the extent of the crack and its type, the severity of the damage to the building can be predicted. This can help the engineers in assessing the urgency of repair. The scope of this paper is limited to cracks that have no branches. The platform being used is MATLAB. A GUI has been developed to make it easier for the user to give inputs. The input given is an image of a concrete wall. The GUI processes it and calculates the length, width and type of the crack as outputs. The dimensions of the image (in pixels) are measured and the dimensions of the concrete wall captured in the image are also measured beforehand. 2 Background Moon et al. [2] used a neural network to develop an automatic crack detection system. Their work analyzed the concrete surface and recognized the cracks. The authors aimed to develop an algorithm that allows anyone to tune the parameters easily without the need for a systems engineer. In the rst step, to distinguish between the cracks and the background image, morphological operations were performed. The existence of crack was determined in the second step. To automate the image classi cation, they used back-propagation neural network. The ef ciency with which the crack is being recognized is 92% for non-crack images and 90% for images with a crack [2]. Doihara [3], in their paper, used hierarchical image processing technique to detect cracks and length, width and distribution of crack to assess the deterioration of a concrete structure. The algorithm that measures the cracks uses images of different resolutions to derive the shape and width of the crack. The recognition rate is 66% for cracks of width more than 0.1 mm with 0.08 mm Root Mean Square [3]. Yang et al. [4], introduced an image analysis method to minimize the requirements for pen marking to capture thin cracks in reinforced concrete structures. Their study included two procedure types: experimental procedure and image analysis. Author s proposed method is most suitable for laboratory tests but it can be used in the actual sites as well. The limitation to use it on-site is that it needs good lighting conditions when the images are being taken [4]. Yamaguchi et al. [5] in their paper introduced a fast crack detection method for large-size concrete surface images using percolation-based image processing which is ef cient and of high-speed even for the digital image (of 10 megapixels size) while preserving the accuracy of crack detection. To reduce computational time, they proposed termination and skip-added procedures. The authors in their work ef ciently reduced the computational cost and the accuracy of crack detection performance is considered comparable to the original percolation process [5]. Investigation of Crack Properties Using Image Processing 85 Huang et al. [6] presented a novel approach for crack detection of concrete struc- tures in images. Their method is composed of three steps. In the rst step, the image is converted into a grayscale image using an edge of the image. An image lter is developed using Sobel s lter for detecting cracks. In the second step, a suitable threshold is used in a binary image and all pixels are classi ed into two categories: background and foreground. In the third step, after elimination of residual noise using Sobel s ltering, the major cracks are detected using Otsu method. Author s method had clear and accurate crack detection in images. Their results demonstrated that the proposed method is relatively improved than the other widely used techniques [6]. Fujita et al., have developed a method for crack detection. The method follows two pre-processing techniques and one processing technique for noise reduction in an image. After that subtraction pre-processing for irregular illumination is carried out. In the pre-processing for noise reduction, a Hessian matrix is used to distinguish crack line from background. Otsu s technique is used for thresholding [7]. Chen et al. have used a semi-automatic technique to detect and analyze cracks. The algorithm requires the selection of node points, then noise removal and thinning processes are carried out. The crack route is traced using a reference line obtained by joining the initially selected node points. The crack width is calculated using DOG function. Multi-temporal image processing is done to improve ef ciency [8]. Ito et al. nd the area of the crack for analysis. They are performing shadow cor- rection operations to improve accuracy in low light images. The image rst undergoes preliminary thresholding where it is converted into a binary image. It then undergoes further thresholding and thinning processes. The crack is tracked between two edge points and the direction and area of the crack are calculated. Branches of a crack are analyzed as separate cracks [9]. Prasanna et al. use canny edge detection algorithm to classify images. Support Vector Machines (SVM) algorithm with linear kernel function was then used. Curve- tting was done for pixels whose intensity was below a xed percentage of the average block intensity. To identify feature vectors, histogram plots are used along the detected curves. The paper mainly focuses on cracks in bridges [10]. Lee et al. are using technique based on image processing to measure cracks. The technique is composed of two steps. In the rst step, cracks are detected using binarization and shape analysis. In the second step, crack analysis is done by prepro- cessing, which includes boundary, thinning, and labeling processes. Within limited testing, the accuracy of the detection and crack analysis is better with the proposed method than with conventional method [11]. Nishikawa et al. have used genetic programming which combines several simple image lters into a tree structure to detect cracks on concrete. They used techniques to address issues of brightness. The crack s width and length are estimated along with the orientation of the crack [12]. 86 S. Nedunuri et al. 3 Methodology The GUI is being developed using Graphical User Interface Development Environ- ment (GUIDE) in MATLAB software. To visualize the cracks, the image is com- pressed to dimensions 500 500 pixels. This is taken as the input image to GUI. This input image is converted into a grayscale image. The grayscale image is again converted into a binary image. This image will have only 1 and 0 as values in the pixel matrix. 1 implies white color and 0 is black color. Fig. 3 shows the ow diagram for the procedure followed. The program traces the 0s to arrive at the length and width of the crack. It works by looking for 0s in each row. The assumption we made is that the size of each pixel is 1 1 mm square. It checks for all neighbors of an element if a zero is found. If the next zero is in the next row, in the vertically opposite direction, it adds +1 to the length. If it is found in the diagonally opposite in the next row (both left and right), is added to the length. If the next zero is in the same row, then it checks all neighbors of the next element in the same manner. All the above values are summed and multiplied with a length factor. Length of wall (in picture)/500 = Length Factor (1) where 500 is the number of pixels in the image in the vertical direction. The length of the crack is calculated from both sides to reduce the percentage of error. The maximum of the two values is displayed as output. To calculate the width of the crack, the algorithm looks for the number of consecutive zeros and sums these values over all the rows. The width of the crack is calculated in each row and then the summation of these values is divided by the number of rows. This value is then multiplied with the width factor which is same as the above. Width of wall (in picture) /500 = Width Factor (2) Depending on the width values, the type of the crack is determined using the guidelines given in SP25. If the width of the crack is less than 1 mm then it is a thin crack. If it is between 1 and 2 mm, it is a medium crack and above 2 mm is a wide crack. Fig. 3 Procedural ow diagram Investigation of Crack Properties Using Image Processing 87 4 Case Studies Case 1: Mahindra Ecole Centrale building is shown in Fig. 4a. A crack was observed on the outer surface of the side wall building. The crack is shown closely in Fig. 4a. By manually measuring, we got the length as 19.1 mm, width as 1 mm and type of the crack is thin. Case 2: Cafeteria building in Mahindra Ecole Centrale campus is shown in Fig. 4b, a crack was observed on the wall on front side. A close-up of the crack is also shown. By manually measuring, we got the length as 27.3 mm, width as 4.6 mm and type of the crack is wide. Case 3: Cafeteria building in Mahindra Ecole Centrale campus (Fig. 4c). A crack was observed on the outer surface of the wall. The crack is also shown closely in Fig. 4c. By manually measuring, we got the length as 33.1 mm, width as 1.5 mm and type of the crack is medium. Fig. 4 The location of the crack is shown for better understanding: a Crack one. b Crack two. c Crack three 88 S. Nedunuri et al. Fig. 5 Image processing for crack one Fig. 6 Image processing for crack two 5 Results The case study images shown in Fig. 4a-c were given as input to the GUI for processing cracks. The outputs obtained in the GUI are shown in Figs. 5, 6 and 7. 6 Analysis Table 1 gives the obtained values for each case study image while Table 2 gives the actual values of each case study image obtained through manual inspection along with the error values. The lengths of the cracks obtained as outputs were almost close to the original length of the crack with an error of 7.053% on average. The lengths obtained for all images were lesser than the original values while the width was not Investigation of Crack Properties Using Image Processing 89 Fig. 7 Image processing for crack three Table 1 Results obtained in GUI Case (crack) Length of crack (mm) obtained Width of crack (mm) Type of crack One 18.3003 0.9258 thin Two 24.9471 6.2971 wide Three 30.3264 1.1784 medium Table 2 Actual values Case Actual length of Actual Actual Width Actual (crack) crack (mm) Error of crack (mm) Error One 19.1 0.0418 1 0.0742 Two 27.3 0.0861 4.6 0.3689 Three 33.1 0.0837 1.5 0.2144 that accurate. The maximum error while calculating width was obtained in case two images shown in Fig. 6 which is detected to have a width of 6.29 mm while the actual width is only 4.6 mm. The error in width calculation is 21.91% on an average. The accuracy in calculating the length is 92.947% and the accuracy in calculating the width is 78.09%. 7 Conclusion Our main aim is to make a user-friendly GUI that can detect a crack on the concrete wall and give its length, width, and type as outputs. We converted the original image 90 S. Nedunuri et al. into a binary image after compressing it. The procedure we are implementing calcu- lates the length and width of the crack from the binary image. It also gives the type of crack along with length and width as outputs. The error in calculating length is 7.053%. The error in calculating width is 21.91%. In almost all images, the lengths are a little lesser than the original values. The widths obtained are also lesser than the actual values with an exception of crack two. The errors can be minimized by implementing more sophisticated procedures. Our current attempts at noise reduction were converting into grayscale and compressing the image into 500 500 pixels. This has reduced the noise but it is not fully ef cient. To overcome the above shortcomings and to improve the accuracy of our algorithm that uses Deviation of Gaussian (DOG) to calculate the width of the crack and to calculate the length, the work of Liang-Chienchen et al. [8] is being considered. References 1. BIS. (1984). SP25: Handbook on causes and prevention of cracks in building, Bureau of Indian Standards, New Delhi. 2. Moon, H., & Kim, J. (2011). Intelligent crack detecting algorithm on the concrete crack image using neural network. Proceedings of the 28th ISARC, pp. 1461 1467. 3. Doihara, T. (1993). Crack Measuring System Based on Hierarchical Image Processing Technique. International Archives of Photogrammetry and Remote Sensing, 29, 155 155. 4. Yang,Y.S.,Yang,C.M.,&Huang,C.W.(2015).Thincrackobservationinareinforcedconcrete bridge pier test using image processing and analysis. Advances in Engineering Software, 83, 99 108. 5. Yamaguchi, T., & Hashimoto, S. (2010). Fast crack detection method for large-size concrete surface images using percolation-based image processing. Machine Vision and Applications, 21(5), 797 809. 6. Talab, A. M. A., Huang, Z., Xi, F., & HaiMing, L. (2016). Detection crack in image using Otsu method and multiple ltering in image processing techniques. Optik-International Journal for Light and Electron Optics, 127(3), 1030 1033. 7. Fujita, Y., Mitani, Y., & Hamamoto, Y. (2006, August). A method for crack detection on a concrete structure. In 18th International conference on pattern recognition (ICPR 06) (Vol. 3, pp. 901 904). IEEE. 8. Chen, L. C., Shao, Y. C., Jan, H. H., Huang, C. W., & Tien, Y. M. (2006). Measuring system for cracks in concrete using multitemporal images. Journal of Surveying Engineering, 132(2), 77 82. 9. Ito, A., Aoki, Y., & Hashimoto, S. (2002, November). Accurate extraction and measurement of ne cracks from concrete block surface image. In IEEE 2002 28th Annual Conference of the Industrial Electronics Society. IECON 02 (Vol. 3, pp. 2202 2207). IEEE. 10. Prasanna, P., Dana, K., Gucunski, N., & Basily, B. (2012, April). Computer-vision based crack detection and analysis. In Sensors and smart structures technologies for civil, mechanical, and aerospace systems 2012 (Vol. 8345, p. 834542). International Society for Optics and Photonics. 11. Lee, B. Y., Kim, J. K., Kim, Y. Y., & Yi, S. T. (2007, August). A technique based on image processing for measuring cracks in the surface of concrete structures. In Proceedings of the 19th International Conference on Structural Mechanics in Reactor Technology (smirt-19). 12. Nishikawa, T., Yoshida, J., Sugiyama, T., & Fujino, Y. (2012). Concrete crack detection by multiple sequential image ltering. Computer-Aided Civil and Infrastructure Engineering, 27(1), 29 47. View publication stats