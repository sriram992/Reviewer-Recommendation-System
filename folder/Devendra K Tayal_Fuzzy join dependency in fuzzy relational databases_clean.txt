Abstract The join dependency provides the basis for obtaining lossless join decomposition in a classical relational schema. The existence of Join dependency shows that that the tables always represent the correct data after being joined. Since the classical relational databases cannot handle imprecise data, they were extended to fuzzy relational databases so that uncertain, ambiguous, imprecise and partially known information can also be stored in databases in a formal way. However like classical databases, the fuzzy relational databases also undergoes decomposition during normalization, the issue of joining the decomposed fuzzy relations remains intact. Our effort in the present paper is to emphasize on this issue. In this paper we define fuzzy join dependency in the framework of type-1 fuzzy relational databases & type-2 fuzzy relational databases using the concept of fuzzy equality which is defined using fuzzy functions. We use the fuzzy equi-join operator for computing the fuzzy equality of two attribute values. We also discuss the dependency preservation property on execution of this fuzzy equi- join and derive the necessary condition for the fuzzy functional dependencies to be preserved on joining the decomposed fuzzy relations. We also derive the conditions for fuzzy join dependency to exist in context of both type-1 and type-2 fuzzy relational databases. We find that unlike the classical relational databases even the existence of a trivial join dependency does not ensure lossless join decomposition in type-2 fuzzy relational databases. Finally we derive the conditions for the fuzzy equality to be non zero and the qualification of an attribute for fuzzy key. Keywords Fuzzy - equi join, fuzzy functions, fuzzy join dependency, type-1 fuzzy relational database, type-2 fuzzy relational database. I. INTRODUCTION HE classical relational databases cannot deal the situation when the data to be populated is imprecise in nature, as these databases were designed primarily for the efficient storage and convenient retrieval of a large amount of precise data. They focus on describing precise information and take care of only well defined and unambiguous data. However in real world applications, the data are often partially known (incomplete) or imprecise for e.g. instead of specifying the age of a boy Ram as 21years (or more importantly when we just Manuscript received June 30th, 2006. (P. C. Saxena is a Professor with School of Computer and Systems Sciences,Jawaharlal Nehru University, Delhi, India (e-mail: premchand_sxna@ yahoo.com). D.K. Tayal is an Assistant Professor (IT) in Jaypee Institute of Information Technology University, Noida, U. P., India (phone: 91-011-27392941, e-mail: tayaldk02@rediffmail.com). have an incomplete information about the exact age of Ram, but it is sure that Ram is a young boy) we may simply say that Ram is young . Because of the 1st Normal Form property of a classical relational database, no attribute value may contain the values like young or old . Similarly a table in a relational database can store the data as to which college student is studying which subject, but cannot store the value that up to what degree the college student likes that subject. Analogously, if the college student has opted for multiple subjects but he does not like each of these subjects exactly, the 1st Normal form of a classical relational database will disallow this information to be represented as a value of a tuple. Also, sometimes a relation itself is a collection of such tuples which belong to it partially. For an instance if we are interested in storing the information about the Endangered Species , some of which are partially endangered , less endangered , more endangered etc, the classical relational data model will not solve the purpose. Thus the representational capability of a relational database simply fails in representing imprecise (fuzzy) data and therefore the fuzzy logic based extensions to database management systems were proposed. However, the relational database theory is intimately connected to the study of data dependencies (like functional dependency, multi-valued dependency & join dependency etc.) as the data dependencies represent the constraints on data and therefore they must satisfy every relational state of the database. The concept of functional dependency in relational databases was thus extended to fuzzy functional dependency [1, 2] as this dependency was believed to capture a large portion of semantics of the real world. Further since the functional dependencies were not able to represent all the constraints, multi-valued dependency was also extended in fuzzy framework and some authors [3-7] proposed their version of fuzzy multi-valued dependency. However the join dependency still represents a more powerful constraint. The set of join dependencies associated with a relational schema R determines by definition exactly those database schemas that can represent a relation schema R without loss of information [8, 9]. Therefore the join dependency also needs to be extended to the fuzzy framework. Since normalizing a relational schema necessarily needs the decomposition, therefore the concept of lossless join decomposition is crucial, which gives rise to existence of join dependency. Because of Fuzzy Join Dependency in Fuzzy Relational Databases P. C. Saxena, and D. K. Tayal T International Journal of Electrical and Computer Engineering 2:5 2007 329 the great importance of join dependency in relational databases, it seems appropriate to study in fuzzy framework the properties of these join dependencies in isolation from other dependencies and thus gives the motivation for this paper. The objective of this paper is to extend the concept of join dependency to the framework of type-1 and type-2 fuzzy relational databases and discuss the results holding in the fuzzy framework. The paper is organized as follows: Section I introduces the preliminaries and basic notions. In Section II, we briefly discuss the most common fuzzy relational databases available in the literature and introduce type-1 and type-2 fuzzy relational databases which we deal in this paper. In section III we introduce the concept of fuzzy functions and the fuzzy equality based upon it. Using the definition of fuzzy equality we discuss the fuzzy functional dependency (ffd) in type-1 & type-2 fuzzy relational databases. Section IV and V briefly discuss the fuzzy Projection & fuzzy join operators which are used to define the fuzzy join dependency. In section VI we study the conditions for dependency preservation property of the ffd. Finally in section VII the fuzzy join dependency is introduced and the conditions for lossless join decomposition are proposed. II. FUZZY RELATIONAL DATABASES Fuzzy databases were developed to capture various types of imprecise information occurring in the real world. They extend the classical databases in two areas: (a) for storing and updating information that is imprecise in nature (b) for processing the imprecise queries. Moreover, the imprecise values in a database system can be broadly classified into two types: (1) imprecise attribute values in a tuple (2) partial membership of a tuple in a relation. Fuzzy databases can very well incorporate both of these of impreciseness. Out of the various approaches proposed in the fuzzy database literature to represent impreciseness in attribute values, we now discuss some of the significant ones. Broadly two approaches have been most popular. First is the similarity based approach, which characterizes the impreciseness by using linguistic terms e.g. poor, fair, good etc. and the degree of similarity between a pair of linguistic terms is characterized by a similarity matrix. However in similarity relations some aspects of max-min transitivity were observed to cause difficulty in modeling the relationship between the domain elements [11]. Even though an extension was added to it to handle fuzzy numbers, the similarity based approach still heavily depends on discrete values. The fuzzy relational model was extended by replacing the similarity matrix with proximity relations (non- transitive) on scalar domains. Raju & Majumdar have also proposed resemblance relations based models treated in [1, 4]. The second approach is based on Zadeh s possibility theory [3] which uses possibility distribution as a value of an attribute to capture the impreciseness of the first type. The second type of impreciseness i.e. the partial membership of a tuple in a relation allows a tuple to be a partial member of a relation, for e.g. the animals which are considered somewhat endangered are partial members of the Endangered-Species relation. A tuple with a partial membership in a relation is referred as weighted tuple [1, 10, 11]. The possibility based approach described above is believed to be more general and popular; the important reason being that it handles all types of imprecise information. We now provide the basic notations and concepts in two possibility based fuzzy relational data models which we treat in this paper. The models are known as type-1 & type-2 fuzzy relational data models [10].While introducing them; we will show how the two models capture all types of impreciseness in a better way. Let n U .... .......... 2 U , 1 U be n universes, a fuzzy relation r is a fuzzy subset of n U .... .......... 2 U 1 U and is characterized by the n-variant membership function ]1,0 [ n U .... .......... 2 U 1 U : r . Where r denotes the membership grade of the tuple and takes the values between 0 and 1. Adhering to the notations of classical relational database theory, a relation schema R in fuzzy relational data model is defined as a finite set of attribute names { n A ... .......... 2 A , 1 A } and is denoted as 2 A , 1 R(A ) n ...A .......... or simply by R. An instance of relation R is referred as r. Corresponding to each attribute name i A , n i 1 , is a set dom( i A ), called the domain of i A , however the domain of i A may be a fuzzy set or a set of fuzzy subsets. In the database theory, a fuzzy relation r on a relation scheme R( n A ... .......... 2 A , 1 A ) is defined to be a fuzzy subset of ) 2 dom(A ) 1 dom(A ) n dom(A ... .......... . Depending on the complexity of dom( i A ), i =1,2..n , the fuzzy relational data model are classified into two categories[10] type-1 fuzzy relational data model type -2 fuzzy relational data model Similar to the classical relations, a fuzzy relation r is represented as a table with an additional column for )t( r denoting the membership value of the tuple t in r. As a notational convenience, only those tuples which have )t( r > 0 are shown in the table and for all the tuples missing in the table, it is obvious that )t( r =0. A. Type-1 Fuzzy Relational Data Model A type-1 fuzzy relation may be considered as a first level extension of classical relations, where we are able to capture impreciseness in the association among the entities. In type-1 fuzzy relations, dom ( i A ) may be a classical subset or a fuzzy subset of i U , e.g. consider a relational schema R(N,J,X,S) International Journal of Electrical and Computer Engineering 2:5 2007 330 of highly experienced and high salaried employees in the appropriate universes[1]. Assume that the universe of discourse X U for the experience is the set of integers is in the range 0-30 and S U , the universe of discourse of the salary is the set of integers in the range 10,000-1,00,000, then an instance of highly salaried employees can be given as: The above relation shows that the possibility of occurrence of an employee namely John who is an Engineer, having an experience of 8 years and drawing a salary of Rs. 60,000 is 0.67 on a scale of 0 to 1. Similar interpretation is valid for other tuples. In general for any attribute i A of a relation schema, let the membership function of dom( i A ) be denoted by i A , for i=1,2 n ; then ) n A ( dom .... )......... 2 A ( dom ) 1 A ( dom is a fuzzy subset of n U .... .......... 2 U 1 U U = .Hence a type-1 fuzzy relation r is also a fuzzy subset of U with the membership function r .Also for all U ) n u ......... 2 u , 1 u ( , r satisfies )1( )) n (u n A ... )........ 2 (u 2 A ), 1 (u 1 A min(( ) n .........u 2 u , 1 (u r In other words ) n .........u 2 u , 1 (u r is a fuzzy measure of association among a set of domain values } n u ......... 2 u , 1 u { for sake of explanation, let us take in the above example 1 U =dom( 1 A )= Name , 2 U =dom( 2 A )=Job and 3 U =dom( 3 A )=Experience , 4 U =dom( 4 A )=salary Also suppose that the membership function of high- experience is defined as 10 x for 1 10 x for 1 /4) | 10 x | (1 (x) Expereince High > = + = and the membership function of High salary is defined as 60000 s for 1 60000 s for 1 /20000) | 60000 s | (1 (x) salary High > = + = Let 1 u = John, 2 u =Engineer, 3 u =8, 4 u =60000 then (1) gives: 1 ) 1 u ( 1 A = (As John is a crisp member) 1 ) 2 u ( 2 A = (As Engineer is a crisp member of Job) = ) 3 u ( 3 A (8) Experience High = 67 . 3 / 2 1 ) 4 / 2 1( 1 ) 4 /| 10 8 | 1( = = + = + = ) 4 u ( 4 A (60000) Salary High = 1 1 ) 20000 /| 60000 60000 | 1( = + Hence membership grade according to (1) is expressed as min (1, 1, .67, 1) = .67 Therefore the tuple (John, Engineer, Experience, salary) in inserted in the table with a membership values of the tuple as 0.67. Similarly the other tuples of the relations are inserted with their respective membership grades. B. Type 2 Fuzzy Relational Data Model Although the type-1 fuzzy relations enable us to represent impreciseness in the association among the data values, its role in capturing the uncertainty in data values is rather limited [10]. For e.g. in a type-1 fuzzy relational model for Employee viz R(Name, Job, Experience, Salary) one is not permitted to specify the salary of John to be in range $30,000- 40,000 or experience of some employee Jack to be low . So what about answering queries with imprecise values? The type-2 fuzzy relations provides further generalization by allowing dom( i A ) to be even a set of fuzzy sets. By enlarging dom( i A ) , type-2 relations represent a wider type of impreciseness in data values which can be considered a second level generalizations of classical relations. As in type 2 fuzzy relational data model , for any attribute i A , dom( i A ) may be considered as a set of fuzzy sets in i U , therefore a tuple ) n a ......... 2 a , 1 a ( t = in .... )......... 2 dom(A ) 1 dom(A = D ) n dom(A becomes a fuzzy subset of n U .... .......... 2 U 1 U U = with, (2) )] n (u n a .. )......... 2 (u 2 a ), 1 (u 1 a [( min ) n .........u 2 u , 1 (u t = where i i U u , for i=1,2 ..n. Since (2) holds for all i i U u , i=1, 2 ..n and using the definition of a fuzzy relation, a type- 2 fuzzy relation r is characterized as a fuzzy subset of D. On applying the definition of fuzzy subset, the membership function ]1,0 [ D : r must satisfy the following condition: ) 3 ( )} n u ( n a . .......... )..... 2 u ( 2 a ), 1 u ( 1 a [min{ max ) n u .... 2 u,1 u ( )t( r Where ) a ......... a , a( t n 2 1 = D Example 1: Consider a fuzzy relation schema [9] EMPLOYEE(Name, Age, Department, salary, Expertise- Domain) in a UNIVERSITY RESEARCH CENTRE (Table I), which contains the information about name, age, the department where an employee works, his status of salary and his areas of expertise. In the EMPLOYEE relation, Name Job Experience Salary John Engineer 8 60,000 0.67 Ashok Manager 9 70,000 0.80 International Journal of Electrical and Computer Engineering 2:5 2007 331 dom(Name) and dom(department) are assumed to be crisp sets while dom(Age), dom(salary) and dom(Expertise- Domain) are sets of fuzzy sets in the universes UAge, U salary and U ED. The first tuple specifies that possibility of a person namely "Dass aged 56 years working in Maths department, having low salary with areas of expertise including Vector Analysis, Modern Algebra and Linear Algebra up to the level of 0.7, 0.8 and 0.6 respectively is 0.7. Similar interpretations can be made for other tuples and the membership functions can be given by: ) 4 ( ) y ( low 1 000 , 60 y for 1 000 , 60 y for 1 |) 60000 y | 000 , 20 1 1( ) y ( high = > = + = salary U y where , TABLE I EMPLOYEE Name Age Department Expertise Domain t1 Dass t2 Jain t3 Arya t4 Roy 56 {0.7/53, 1/54, .08/55} {.05/54, 0.5/55} 58 Maths Mgmt Comp Engg Physical sciences {0.7/Vector Analysis,.8/Modern Algebra,.6/Linear Algebra} Risk Management Networking {0.8/Magnetism, 0.7/Fluid Dynamics} 0.7 0.9 0.6 0.7 In Table I, it can be noted that the values of the attribute in a tuple contains fuzzy sets like High (Salary). The important issue here is of computing the equality of two attributes values since unlike classical databases equality cannot be directly computed in fuzzy databases. In fuzzy databases a comparison of two fuzzy sets is required to compute the fuzzy equality, so it becomes essential to devise a mechanism to evaluate the fuzzy equality between two fuzzy sets. In this paper we will use the fuzzy equality based on fuzzy functions introduced in section III. III. FUZZY FUNCTIONS AND FUZZY EQUALITY The representation of data dependencies in relational database model needs comparison of the attribute values of a relation and fuzzy databases are no exception. In this section we devise a methodology to compute the fuzzy equality of two attribute values to compute the equality of attribute values occurring in a type-2 fuzzy relational schema. This methodology holds well for a type-1 fuzzy relational model also. We find that the equality measures like resemblance relations [1, 2, 15], and conformance [7] etc. are highly dependent on the semantics of the attribute values, the important reason being that they are defined differently for every attribute domain. For instance if a fuzzy relation has n attributes, then n different resemblance relations have to be defined. On the other side, in this paper we will be using a general measure of the fuzzy equality based on the concept of fuzzy function [18,19].This approach does not require the computation of different resemblance relations /conformance measure for each attribute domain. The approach followed by us in this paper will thus relieve the database designer from indulging in the hectic and error prone process of defining these equality measures, which is sometimes controversial also. We now introduce the concept of fuzzy functions and the fuzzy equality based upon it. Let A and B be two sets. A binary relation f on A B is a fuzzy subset of A B, characterized by the membership function f : A B [0, 1]. Let A E and B E denote the fuzzy equality on A and B respectively. Then f is called as a fuzzy function from A to B [18], if (F1) for each x A, there exists a y A such that 0 y) (x, f > (F2) for all 2 1 x , x A and for all 2 1 y , y B, ) y , y ( E ) x , x ( E ) y , x ( ) y , x ( 2 1 A 2 1 A 2 2 f 1 1 f Again suppose n A .......... 1 A A = and m 1 B .......... B B = where each i A , i=1 ..n and j B , j=1 ..m are sets and f: X Y is a function (as we will be considering the set [0, 1] to be a totally ordered set throughout this paper so that the infimum i.e. can be taken to be equivalent to minimum ) then the fuzzy equality on A is defined in a manner ) y ,x ( E A = } ) y , x ( E { min i i A ] n ,1[ i i For all (x,y) A A ,where i A E is a fuzzy equality on i A . B E can be defined in a similar manner. To obtain the fuzzy equality over the tuples or the projection over the tuples, the above notion of fuzzy equality is generalized to Cartesian product of sets as follows: If n 1 A .......... A A = where each i A , i =1,2 n is a set , then ) x ...... x , x ( X n 2 1 = and ) y ...... y , y ( Y n 2 1 = are equal iff ix = iy , i=1,2 .n that is X=Y, for all i=1,2 .n . Accordingly the corresponding graded function, A E : A A [0, 1] can be defined as E4) ) y ,x ( E A = } ) y , x ( E { min i i A ] n,1[ i i Denoting the interval [0, 1] by I and all the fuzzy subsets of a crisp set by X I , Let I(A, B)={(x X : ) x ( ) x ( B A }be a crisp set, for all A, B X I and denoting its characteristic function by ) B , A (I ,we observe that A B 1 )} x ( { ) B , A (I X x = A / B 0 ) x ( { ) B , A (I X x = Demirci [18] defined the mappings * ~ , * : X I X I I International Journal of Electrical and Computer Engineering 2:5 2007 332 as follows )}) x ( { ( )] B , A ( ~ [ )}] B , A ( ~ [ ) B , A (I X x * = where )] A , B ( ~ [ )] B , A ( ~ [ )] B , A ( [ * * * = )} x )( B A {( )] B , A ( ~ [ c X x = and Ac is the complement of fuzzy set A. A is the membership function of a set A and ) x ( 1 ) x ( A Ac = , for all x X. The real number )] A , B ( ~ [ )] B , A ( ~ [ )] B , A ( [ * * * = X I B , A ; shows the degree of equality to which a fuzzy set A is equal to a fuzzy set B. Thus the mapping X X * I I : I is a fuzzy equality on X I . Consequently definition of fuzzy equality is extended to tuples of fuzzy sets as follows: Let i X , i =1, 2, .. n be sets and i A , i B be fuzzy sets in i X I .Let the fuzzy equality on i X I be i X I E that is )] A , B ( ~ [ )] B , A ( ~ [ )] B , A ( E [ * * i i I i X = . Similarly the fuzzy equality X X I I I: E X [0, 1], where n 2 1 X X X X I ... .......... I I I = is defined as: ) B , A ( E )) B ...... B , B ( ), A ...... A , A (( E i i I i n 2 1 n 2 1 I i X X = for all ) B ...... B , B ( ), A ...... A , A ( n 2 1 n 2 1 X I . Thus we can say that if R= { n 2 1 A ...... A , A } be a relation scheme, a fuzzy relation r over R is a fuzzy subset of n 2 1 A dom ........ A dom A dom . The membership function of r is denoted as r . A tuple t = ( n 2 1 a ...... a , a ) in 2 1 A dom A dom ........ n A dom is thus associated with the grade of membership r (t) in r. i.e. r ={ r (t)/t : t 2 1 A dom A dom ........ n A dom }. Further let ( k 2 1 i ...... i, i ) and ( m 2 1 j ...... j, j ) denote two subsequences of (1,2 ..n)and let } A .......... A , A { Y , } A .......... A , A { X m 2 1 k 2 1 j j j i i i = = , and A dom .......... A dom A dom X dom k 2 1 i i i = m 2 1 j j j A dom .......... A dom A dom Y dom = ; then the fuzzy relation r induces the binary fuzzy relation over XY , which is a fuzzy subset of dom X dom Y given by }'t ] Y ["t and t ] X ["t : ) "t( r { "t inf )'t,t( r and } Y dom X dom )'t,t( : )'t,t /( )'t,t( r { XY r = = = = It implies that whenever there is a set of tuples "t (i.e. more than one tuple is present) such that t ] x [ t " = and ' " t ] y [ t = ,where t dom X and 't dom Y , then the infimum over all such "t must be taken to compute the grade ) t,t( ' r . We simplify the notation and denote fuzzy equality as defined above on dom i A , for an attribute i A , i=1,2 ..n by i A E and not by i A dom E . In this paper we will be using the symbols * & i A E interchangeably to denote fuzzy equality over an attribute i A .Similarly when X = { k 2 1 i i i A .......... A , A } is a subset of R, a fuzzy equality on k 2 1 i i i A dom .......... A dom A dom is denoted by X E . Example 2: Let us consider an example similar to as in [20].Let R={A,B,C,D} be a type -2 fuzzy relation scheme and r be a fuzzy relation over R containing three tuples 3 2 1 t, t, t defined as follows: where A is a classical set and 3 2 1 b , b , b domB I are fuzzy sets and D d , d 2 1 where D is an ordinary set. = = u x if 0 domA u,u x if 1 ) x ( a 1 ) a,a( EdomA = Let }, v , v { domB 2 1 = let the membership function of 2 1 b , b and 3 b be = = = 2 1 2 2 1 1 b v x , v x if 0 domB v , v x if 7.0 domB v , v x if 1 ) x ( 1 = = = 2 1 2 2 1 1 b v x , v x if 0 domB v , v x if 1 domB v , v x if 6.0 ) x ( 2 = = = 2 1 2 2 1 1 b v x , v x if 0 domB v , v x if 1 domB v , v x if 3.0 ) x ( 3 Now for the pair of tuples 1t and 2t , let us calculate ) b , b ( E 2 1 domB Then x { ) b , b (I 2 1 = ) x ( ) x ( : domB 2 1 b b }which is calculated as For : v x 1 = 1 ) v ( 1 b1 = and 6.0 ) v ( 1 b2 = So ) x ( 1 b / ) x ( 2 b for 1 v x = For : v x 2 = 7.0 ) v ( 2 b1 = and 1 ) v ( 2 b2 = So ) x ( 1 b ) x ( 2 b for 2 v x = A B D t1 a t2 a t3 a b1 b2 b3 d1 d1 d2 0.5 0.6 0.35 International Journal of Electrical and Computer Engineering 2:5 2007 333 For : v x , v x 2 1 ) x ( 1 b = ) x ( 2 b =0 So ) x ( 1 b ) x ( 2 b Thus x { ) b , b (I 2 1 = ) x ( ) x ( : v x and v x , v 2 1 b b 1 1 2 = }=dom B { 1 v } Now )] b , (b ~ [ 2 1 = )} x ( b b { 2 c 1 domB x = )} x )( b ) b 1 {( 2 1 domB x = )} x ( )) x ( 1 {( 2 1 b b domB x : v x for 1 = 6.0 ) 6.0 0 ( ) 6.0 )1 1 {( )} v ( )) v ( 1 {( 1 b 1 b 2 1 = = = For : v x 2 = 1 )1 3.0 ( )1 ) 7.0 1 {( )} v ( )) v ( 1 {( 2 b 2 b 2 1 = = = For : v x , v x 2 1 1 ) 0 )1 1 {( )} x ( )) x ( 1 {( 2 1 b b = = Therefore )] b , (b ~ [ 2 1 = 6.0 1 1 6.0 = , Similarly )] b , (b ~ [ 1 2 =0.7 Now, by the definition of ) b , b (I 2 1 , / = 2 1 2 1 ) b , b (I domB x b b if 0 b b if 1 )} x ( { 2 1 Therefore )} x ( { ) b, b (I domB x 2 1 = )} x ( { )} x ( ) x ( : domB x { domB x 2 b 1 b which is given by ) v x , v x ( ) v x ( ) v x ( 2 1 )} x ( 2 b ) x ( 1 b : 2 v x , 1 v x { 2 )} 2 v ( 2 b ) 2 v ( 1 b : domB x { 1 )} 1 v ( 2 b ) 1 v ( 1 b : domB x { = = ) v x , v x ( ) v x ( ) v x ( 2 1 } 0 0 : domB : 2 v x , 1 v x { 2 1 6.: domB 2 v { 1 6. 1: domB 1 v { = = = = 0 1 1 0 = = Hence [ 3.0 0 6.0 )}) x ( { ( )] b , b ( ~ [ )] b , b ( ~ ) b, b (I domB x 2 1 2 1 * 2 1 = = = [ 7.0 0 7.0 )}) x ( { ( )] b , b ( ~ [ )] b , b ( ~ ) b, b (I domB x 1 2 1 2 * 1 2 = = = So, ) b , b ( E 3 1 domB = 7.0 3.0 3.0 = Similarly ) b , b ( E and ) b , b ( E 3 1 domB 3 2 domB can be calculated as follows: 3.0 )] b , (b ~ [ 3 2 = 6.0 )] b , b ( ~ [ 2 3 = And ,0 )} x ( { ) b , b (I domB x 3 2 = similarly ,1 )} x ( { ) b , b (I domB x 2 3 = [ 3.0 0 3.0 )}) x ( { ( )] b , b ( ~ [ )] b , b ( ~ ) b, b (I domB x 3 2 3 2 * 3 2 = = = [ 1 1 6.0 )}) x ( { ( )] b , b ( ~ [ )] b , b ( ~ ) b , b (I domB x 2 3 2 3 * 2 3 = = = Therefore )] b , b ( [ 3 2 * = 3.0 1 3.0 )] b , b ( ~ [ )] b , b ( ~ [ ) b , b ( E 2 3 * 3 2 * 3 2 domB = = = Similarly )] b , b ( [ 2 1 * = 6.0 ) b , b ( E 2 1 domB = So we conclude that ) b , b ( 3 1 * = 3.0 ) b , b ( E 3 1 domB = ) b , b ( 3 2 * 2.0 ) b , b ( E 3 2 domB = And 6.0 ) b , b ( E 2 1 domB = In this way the equality of the fuzzy sets which occur as the value of the attributes can be computed using fuzzy functions. The fuzzy equality of two fuzzy sets will help us in computing the equality of two tuple values for an attribute. A. Fuzzy Equality of Normal and Subnormal Sets We have seen in section II that an attribute value of a tuple in a type-2 fuzzy relation schema can be a fuzzy set. The height h(A)[11] of a fuzzy set A is the largest membership grade obtained by any element in that set i.e. h(A)= A x )}, (x supremum{A . The fuzzy set A is called normal when h(A) = 1 and it is called subnormal when h(A)< 1 [11]. It is obvious that a normal/subnormal fuzzy set can occur as an attribute value. However subnormal and normal fuzzy sets show different properties in obeying fuzzy equality. Since the fuzzy join attribute may require computing the fuzzy equality of two subnormal/ normal fuzzy sets, we focus on these properties in this section. Lemma 1: If A and B are two fuzzy subnormal fuzzy sets defined over a set X , the fuzzy equality of A and B cannot be equal to 0 i.e. )] B , A ( [ * > 0 always . Proof: Let the set X is given by X= } a .... a , a , a , a , a { l 5 4 3 2 1 . Suppose that the two fuzzy sets A and B defined over X are both subnormal. Let A= } a m a m a m { 3 3 2 2 1 1 + + and 3 a 3 n { B = } 5 a 5 n + ,where i m ; i=1,2,3 denotes the membership of ia in the fuzzy set A and j n ; j=3,5 denotes the membership of ja in the fuzzy set B. It can be easily noted that 0 < j i n , m < 1 (since both the fuzzy sets are subnormal and by convention any member of a fuzzy set with membership value equal to 0 is not shown in the set). Now using the definition of fuzzy equality )] A , B ( ~ [ )] ] B , A ( ~ [ )] B , A ( [ * * * = and thus we conclude that the fuzzy equality of two fuzzy sets A and B can be equal to 0 only when either of )] A , B ( ~ [ or )] ] B , A ( ~ [ * * (or both) is equal to 0. We International Journal of Electrical and Computer Engineering 2:5 2007 334 will prove that none of them can be equal to 0. We will only provide a proof for 0 )] ] B , A ( ~ [ * here, as the proof for 0 )] A , B ( ~ [ * can be constructed on similar guidelines. For proving that )] ] B , A ( ~ [ * >0, we note that by definition ) 5 ( )}) x ( ) B , A (I { X x ( )] B , A ( ~ [ )}] B , A ( * ~ [ = so )] ] B , A ( ~ [ * can only be equal to 0 only when both the )] B , A ( ~ [ and )}) x ( { ( ) B , A (I X x become equal to 0. Considering )}) x ( { ( ) B , A (I X x , we find that it can be equal to 0 only when some X x such that ) x ( ) x ( B A > . If no such x exists, we have nothing to prove. So let us assume that an element X 'x such that )'x ( )'x ( B A > so that in (5), 0 )}) x ( { ( ) B , A (I X x = . Now X x , let us consider the value of )} x )( B A {( )] B , A ( ~ [ c X x = . Here two cases arise: Case 1: ) x ( 0 ) x ( B A = = Then 1 0 ) 0 1( ) x )( B A ( c = = Case 2: At least one of ) x ( or ) x ( B A is greater than 0 Let us assume that 0 m ) x ( A > = and 0 ) x ( B = so that 0 ) m 1( ) x )( B A ( c = , but since m>0 so (1-m) > 0 so that 0 ) x )( B A ( c > .Hence for any value of X x , we have 0 ) x )( B A ( c > , so that ) 6 ( 0 )} x )( B c A {( X x > Using (5) and (6) we obtain the result that the fuzzy equality of two subnormal fuzzy sets cannot be equal to 0. We now obtain the conditions when two non-subnormal fuzzy sets are not fuzzily equal. Lemma 2: Let A and B be two fuzzy sets defined over the same domain, with at least one of them normal .If any member of the normal fuzzy set having the membership value 1 has the membership value 0 in the other fuzzy set , then 0 )] B , A ( [ * = . Proof: The proof can easily be obtained using the proof of Lemma 1. In Lemma 1, let X 'x be any element such that 1 )'x ( A = and 0 )'x ( B = . Since X 'x here, such that ) 0 )'x ( ( )) 'x ( 1( B A = > = , so )}) x ( { ( ) B , A (I X x is necessarily 0. We are thus left with to show that 0 )] B , A ( ~ [ = .Now here it is clear that all the elements belonging to domain of X do not have membership equal to 0 because of existence of X 'x with 1 )'x ( A = , thus for this element 'x , we have 0 0 0 0 )1 1( )'x )( B A ( c = = = Hence = )] B , A ( ~ [ )} x )( B A {( c X x =0. Using the definition of )] ] B , A ( ~ [ * , we have that it comes to be equal to 0, making 0 )] B , A ( [ * = . B. Fuzzy Equality over Different Domains Since it is necessary to include different type of domains viz classical sets & fuzzy sets (in type-1 fuzzy relations) and classical sets & set of fuzzy subsets(in type -2 fuzzy relations ) to correctly represent the impreciseness inhibited , the issue of equality of two values of tuples corresponding to an attribute is quite crucial . Sometimes we have to compute equality of a crisp value to: a crisp value, a fuzzy set or to even a set of fuzzy subsets. To compute the fuzzy equality over different domains, the authors define the fuzzy equality of two values in [21] as follows. Definition 1 [21]: Let 2 1 t and t be any two tuples of a fuzzy relation R. Let A be any attribute of R and let ] A [ t and ] A [ t 2 1 denote the values of the tuples 2 1 t and t for the attribute A, then fuzzy equality of ] A [ t and ] A [ t 2 1 can be calculated as: ]) A [ t ], A [ t( E 2 1 ]) A [ t, ] A [ t( 2 1 = = = = = = = ) 7 ( function dependent domain a is ]) A [ 2 t, ] A [ 1 t( A E where ; subsets fuzzy of set a is ) A ( dom and values crisp are ] A [ 2 t and ] A [ 1 t if ]) A [ 2 t, ] A [ 1 t( A E subsets fuzzy are ] A [ 2 t and ] A [ 1 t both and subsets fuzzy of set a is ) A ( dom if ]) A [ 2 t, ] A [ 1 t( * subset fuzzy a is ] A [ 1 t and value crisp is ] A [ 2 t and subsets fuzzy of set a is ) A ( dom if ]) A [ 2 t( ] A [1t subset fuzzy a is ] A [ 2 t and value crisp is ] A [ 1 t and subsets fuzzy of set a is ) A ( dom if ]) A [ 1 t( ] A [ 2 t ] A [ t ] A [ t and set fuzzy a is dom(A) if 0 ] A [ t ] A [ t and set fuzzy a is dom(A) if 1 ] A [ t ] A [ t and set ordinary an is dom(A) if 0 ] A [ t ] A [ t and set ordinary an is dom(A) if 1 2 1 2 1 2 1 2 1 Thus, definition 1 allows us to calculate the fuzzy equality of two values occurring in the same domain. It will thus help us in calculating the fuzzy equality of two values which are used in defining the fuzzy functional dependency and fuzzy join operator. However we realize that while obtaining the fuzzy join of two type-2 fuzzy relations, it may be case that although joining attribute from one relation and the joining attribute from another relation may be defined over the same universe, but one is simply a crisp set while another is a set of fuzzy subsets or that while joining two type-1 fuzzy relations one attribute is a crisp set while another attribute is a fuzzy set defined over the same set as the previous attribute. In [21] the authors define the fuzzy join compatibility to resolve the above mentioned issues as follows: Definition 2 [21]: Two set of attributes X( n 2 1 A ....... A , A ) and Y( n 2 1 B ....... B , B ) belonging to two fuzzy relations (either both type-1 or type-2) are said to be fuzzy- join compatible if International Journal of Electrical and Computer Engineering 2:5 2007 335 they have the same degree n, and if for .n i 1 , either ) B ( dom ) A ( dom i i = or ) A ( dom i = fuzzy set over ) B ( dom i or ) B ( dom i i I ) A ( dom = ; i.e. the set of fuzzy subsets over domain of Bi . Thus the fuzzy-join compatibility checks the compatibility of the domains of the two sets of attributes X and Y in the fuzzy environment. Thus if we want to join two sets of attributes, then they must have to be fuzzy-join compatible. C. Fuzzy Functional Dependency Using Fuzzy Equality The integrity constraints in relational database systems can be broadly classified into two groups [10]-- (1) Domain Dependency This restricts admissible domain values of attributes, e.g. age of an employee is less than 62 years . (2) Data Dependency which requires that if some tuples in the database fulfill certain equalities, then either some other tuples must also exist in the database, or some values of the given tuples must be equal. Among these two types of dependencies, data dependencies have received wider attention as they have greater impact on design of database systems. The functional dependency is the most common and widely attended data dependency. Some authors [2, 10, 11] have defined functional dependencies in fuzzy relational databases relational database. The authors have defined the fuzzy functional dependency in type-1 & type-2 fuzzy relational databases as follows [20]: Definition 3 [20]: A fuzzy relation r over a relation scheme R = { n 2 1 A ...... A , A } satisfies a fuzzy functional dependency (ffd) X  Y where X, Y R, if XY r is a fuzzy partial function i.e. for all X dom t, t 2 1 with 0 ) t, t( E 2 1 X and for all Y dom t, t ' 2 ' 1 (8) )' 2 t,' 1 (t Y E ) 2 t,1 (t X E )' 2 t, 2 (t r[XY] )' 1t,1 (t r[XY] For further elaboration of the fuzzy functional dependency and its examples, [20] may be referred. IV. FUZZY PROJECTION OPERATOR The projection operation plays an important role in the theory of lossless join decomposition in classical relational databases. Using the duplicity elimination property of the projection operation, tuples which are identical in a fuzzy relation are collected and the tuple with the highest membership grade in the fuzzy relation is kept and the others are discarded. The same role of projection operation is also extended to fuzzy relational databases. Raju & Majumdar[1] define the fuzzy projection as : Definition 4 [1]: Let r be an instance of a fuzzy relation schema R ) A . .......... A , A ( n 2 1 , and let ) i ..... i, i( k 2 1 be a subsequence of (1, 2 n). The fuzzy projection )r( P r i R i = is a k-ary fuzzy relation in .......... ) dom(A ) dom(A 2 1 i i ) dom(A ki with the membership function ir given by }t ] R [ t|) t( { max )t( i r r r t r r i = = (9) where r t is a tuple of r and t ) k i A ( dom . .......... ) 2 i A ( dom ) 1i A ( dom . Thus the tuples of ir are the restrictions of the tuples of r, as in case of classical relations. The max operator ensures that if more than one tuple in r, say r St , has the same restriction t on i R , then the projection ir contains only one tuple and its membership value is the maximum of the grades of the tuples in tS . In case of classical relations, the grades have binary values, and therefore the above condition simply leads to duplicate removal. V. FUZZY JOIN OPERATOR The very issue of joining two fuzzy relations has also been treated by few researchers in the past. Raju & Majumdar[1] have defined a cylindrical extension based join operator in fuzzy relational databases as follows: Let sr ......... 2r,1r are a fuzzy relational database for relational schemes, ik i .......A 1i A i R = , where i=1,2 ..s having membership function ir .Let s 1 i i R = =( n A ......... 2 A ,1 A ). Then the join of fuzzy relations sr ......... 2r,1r denoted by r is a fuzzy relation over n U ......... 2 U 1 U . The membership function of r is defined by )] n a ......... 2 a ,1 a ( sr ),....... n a ......... 2 a ,1 a ( 1r min[( ) n a ......... 2 a ,1 a ( r = , where ) n a ......... 2 a ,1 a ( ir is the cylindrical extension of ) i k ia ......... 1ia ( ir . However the above fuzzy join operator holds well only in case of type-1 fuzzy relational databases as it requires that all the values of the fuzzy relations must be crisp values and none of them can be a subnormal/normal fuzzy set. It does not provide any provision for calculating the fuzzy equality of two fuzzy sets on the basis of which an equi-join can be operated; therefore the cylindrical extension based join operator cannot work for type-2 fuzzy relational databases. To overcome this difficulty the authors have proposed a fuzzy equi-join operator [21] which fits well for both type-1 and type-2 fuzzy relational databases. For an elaboration of the fuzzy equi-join operator [21] may be referred. In the next sections we will use this fuzzy equi-join operator to study the Join dependency and Dependency preservation property in type-1 and type-2 fuzzy relational databases. International Journal of Electrical and Computer Engineering 2:5 2007 336 VI. DEPENDENCY PRESERVATION POLICY Every relational database undergoes decomposition during the process of normalization. It is therefore necessary for a decomposition to obey the lossless join property, because it guarantees that any decomposed relation can be recovered from its projections. Another important property of a decomposition of relation schema R into ) k R ......... 2 R ,1 R ( = is that the set of dependencies F for R be implied by the projection of F onto the s'i R . We say that a decomposition preserves a set of dependencies F, if the union of all the dependencies in ) F ( i R , for i=1, 2 k logically implies all the dependencies in F. The necessity for to preserve F is that the dependencies in F can be viewed as integrity constraints for the relation R and integrity constraints must never be relaxed/avoided otherwise the inconsistencies are bound to occur. If the projected dependencies do not imply F, then we should not represent R by ) k R ......... 2 R ,1 R ( = otherwise we may find that the current value of s'i R represents a relation R that does not satisfy F, even if had the lossless join property with respect to F. Alternatively every update to one of the s'i R would require a join to check that the constraints were not violated [22]. We therefore propose below a necessary condition for the dependencies to be preserved on joining two fuzzy relations using fuzzy equi join. Theorem 1:- The dependency preservation property is obeyed in a type-2 fuzzy relational database only if the all the value of the joining attributes are atomic. Proof) Let R and S be two type-2 fuzzy relations and 1F and 2 F be two sets of fuzzy functional dependencies satisfied by R and S respectively. Let ir & js be the joining attributes of the two fuzzy relations respectively. Let Q be the joined fuzzy relation i.e. Q = R JOINf S. Let r, s, q denote the instances of the R, S and Q respectively. Now, since a type-2 fuzzy relation schema may contain a crisp value (atomic) or a fuzzy set as a value of an attribute therefore depending on the domain of the attributes of R and S the following two cases exist. Case I: All the values of the joining attributes are atomic (crisp) Since a fuzzy set is non-atomic , this case is possible only when ,the domain of both the joining attributes are classical sets .This leads to case I in the fuzzy join operator[21].We will show that q satisfies 2 1 F F .Consider a ffd f: XY in 2 1 F F . On the contrary assume that q does not satisfy f. Then by definition of ffd, there exists two tuples 1t and 2t in q such that 0 ] t, t[ E 2 1 X and ) 10 ( ]) X [ 2 t ], X [ 1 t( Y E ]) X [ 2 t ], X [ 1 t( X E ]) Y [ 2 t ], X [ 2 t(] XY [ q ]) Y [ 1 t ], X [ 1 t(] XY [ q > Let r kt and s kt denote the projection of kt over the attributes of r and s respectively, where k=1, 2. Now from (10), 0 ) t( k q > , k=1,2 and Using (3) and (9) , we have ) t( r k q >0 and ) t( s k q >0. Also ] XY [ t ] XY [ t k r k = and similarly ] XY [ t ] XY [ t k s k = (11) It can be noted that if any of the attributes X or Y or both is the joining attribute , then because of the atomicity of the values of the joining attributes , the binary equality values will hold (otherwise if none of the attributes X or Y is the joining attribute, the conclusion will be trivial) . Now since f 2 1 F F , thus f belongs to 1F (or 2 F ) let us assume that f 1F , then both the attributes X and Y must belong to R. Considering the values of the two tuples 1t and 2t in r and using the equation (10), we derive a contradiction that the ffd f: XY does not hold in r. Hence q satisfies 2 1 F F . Case II: The values of the joining attributes are non atomic This case exists when the join is executed by computing the fuzzy equality of two fuzzy sets. We will show that q may or may not satisfy the ffds in 2 1 F F . Consider a ffd f: XY in 1F , then obviously 2 1 F F f .We will show that q may not satisfy f. Now since f is satisfied in r (as it belongs to 1F ), thus by the definition of a fuzzy functional dependency, two tuples 2 1 T & T in r with 2 2 1 1 t ] X [ T , t ] X [ T = = and ' t ] Y [ T 1 1 = ' t ] Y [ T & 2 2 = and 0 ) t, t( E 2 1 X such that the inequality )' t,' t( E ) t, t( E )' t, t( )' t, t( 2 1 Y 2 1 X 2 2 ] XY [r 1 1 ] XY [r (12) holds. Using LHS of the inequality (10) we have 0 ) T ( 1 r and 0 ) T ( 2 r . Let us assume that the relation r is joined with relation s on the attributes Y and Z respectively where both Y and Z are defined over same universe of discourse. Let domain of Y is a set of fuzzy subsets with each fuzzy set containing more than one element but domain of Z is a classical set. Since the values of the joining attribute Y is non- atomic in nature (as it may contain a fuzzy set), it can be easily verified that due to incorporation of non-atomic values as the value of attribute Y, a fuzzy set occurring as a value of a Y in a tuple is fuzzily equal to more than one different values of Z (a crisp set). This is in contrast with the classical relational database. Hence in fuzzy relational databases, one tuple value of Y (a fuzzy set) can be joined with more than one value tuple values of Z , because more than one values of attribute Z in s can be partially equal to Y. The joined relation thus contains as many tuples as the number of values of Z which are partially equal to Y (note that in a classical relational database, one value of an attribute cannot be joined with distinct values of another attribute). Also, it is not International Journal of Electrical and Computer Engineering 2:5 2007 337 relevant to call them as spurious tuples because these multiple tuples represent the constraint actually holding on the fuzzy relations r and s. Without loss of generality, let q 1 T & q 2 T be any two tuples in the relation q such that 0 ) T ( q 1 q > and 0 ) T ( q 2 q > and 0 ]) X [ T ], X [ T ( E q 2 q 1 X but 0 )'' t,'' t( E 2 1 Y = , where '' t1 and '' t 2 denotes the values of Y in two tuples q 1 T & q 2 T .Now from construction, ]) X [ T ], X [ T ( E )'' t,'' t( E q 2 q 1 X 2 1 Y < always. Now 0 ]) Y [ T ], X [ T ( q 1 q 1 ] Y , X [ q & 0 ]) Y [ T ], X [ T ( q 2 q 2 ] Y , X [ q (by construction, otherwise these two tuples would not have been present in the relation q). Considering the inequality (12), we find that since 0 )'' t,'' t( E 2 1 Y = , LHS / RHS, which shows that the ffd does not hold in q. Thus we see that the fuzzy functional dependencies may not be preserved in joining two type-2 fuzzy relations. We next provide an example to this effect. Example 3: Let R and S be two type-2 fuzzy relations given by R(A,B) and S(C,D)where domain of A is a classical set given by dom(A)= } a, a, a , a { 4 3 2 1 and domain of B is a set of fuzzy subsets defined over } b , b , b , b , b { 5 4 3 2 1 .The fuzzy relation S has domain of C as an ordinary set with dom(C)= } b , b , b , b , b { 5 4 3 2 1 and D is a set of fuzzy subsets defined over } d , d , d { 3 2 1 . The relational instance r and s of fuzzy relations R and S are given in Tables II (A) and II (B) respectively. TABLE II (A) TYPE-2 FUZZY RELATION R (A,B) A B t1 a1 t2 a2 a3 a4 {0.1/b1+0.7/ b2} {0.3/ b1 + 0.4/ b2 + 0.5/ b3+0.6/ b4} {0.3/ b1+0.6/ b2} {0.1/ b1+0.3/ b3+0.7/ b5 } 0.4 0.7 0.5 0.67 TABLE II (B) TYPE-2 FUZZY RELATION S (C,D) A B a1 a2 {0.1/b1+0.7/ b2} {0.3/ b1 + 0.4/ b2 +0 .5/ b3+0.6/ b4} 0.4 0.7 Let 1t and 2t be two tuples of R as shown in Table II (A). Let ] B [ t1 = } b 7. 0 b 1. 0 { 2 1 + is denoted by 1 B and ] B [ t 2 = } b 6. 0 b 3. 0 { 2 1 + is denoted by 2 B . Then x { ) B , B (I 2 1 = ) x ( ) x ( : domB 2 1 B B }which is calculated as For : b x 1 = 1. ) b ( 1 B1 = and 3.0 ) b ( 1 B2 = , so ) b ( ) b ( 1 B 1 B 2 1 for 1 b x = For : b x 2 = 7.0 ) b ( 2 B1 = and 6.0 ) b ( 2 B2 = , so ) b ( ) b ( 21 B 2 B 2 1 / for 2 b x = Similarly ) b ( ) b ( 3 B 3 B 2 1 for 3 b x = , ) b ( ) b ( 4 B 4 B 2 1 for 4 b x = and ) b ( ) b ( 5 B 5 B 2 1 for 5 b x = . Hence, } b , b , b , b { ) B , B (I 5 4 3 1 2 1 = , similarly } b , b , b , b { ) B , B (I 5 4 3 2 1 2 = Now )] B , (B ~ [ 2 1 = )} x )( B B {( 2 c 1 domB x = )} x )( B ) B 1 {( 2 1 domB x = )} x ( )) x ( 1 {( 2 1 B B domB x : b x for 1 = 9.0 ) 3.0 9.0 ( ) 3.0 )1.0 1 {( )} b ( )) b ( 1 {( 1 B 1 B 2 1 = = = : b x for 2 = 6.0 ) 6.0 3.0 ( ) 6.0 ) 7.0 1 {( )} b ( )) b ( 1 {( 2 B 2 B 2 1 = = = For : b x 3 = 1 ) 0 ) 0 1 {( )} b ( )) b ( 1 {( 3 B 3 B 2 1 = = For : b x 4 = 1 ) 0 ) 0 1 {( )} b ( )) b ( 1 {( 4 B 4 B 2 1 = = For : b x 5 = 1 ) 0 ) 0 1 {( )} b ( )) b ( 1 {( 5 B 5 B 2 1 = = Therefore )] b , (b ~ [ 2 1 = 6.0 1 1 1 6.0 9.0 = . Also )] B , B ( ~ [ 1 2 = )} x ( )) x ( 1 {( 1 2 B B domB x : b x for 1 = 7.0 )1.0 7.0 ( )1.0 ) 3.0 1 {( )} b ( )) b ( 1 {( 1 B 1 B 1 2 = = = : b x for 2 = 7.0 ) 7.0 4.0 ( ) 7.0 ) 6.0 1 {( )} b ( )) b ( 1 {( 2 B 2 B 1 2 = = = For : b x 3 = 1 ) 0 ) 0 1 {( )} b ( )) b ( 1 {( 3 B 3 B 1 2 = = For : b x 4 = 1 ) 0 ) 0 1 {( )} b ( )) b ( 1 {( 4 B 4 B 1 2 = = For : b x 5 = 1 ) 0 ) 0 1 {( )} b ( )) b ( 1 {( 5 B 5 B 1 2 = = Therefore )] B , (B ~ [ 1 2 = 7.0 1 1 1 7.0 7.0 = Therefore )} x ( { ) B , B (I domB x 2 1 = 0 1 1 1 0 1 = Similarly )} x ( { ) B , B (I domB x 1 2 = 0 1 1 1 1 0 = Now by definition of ) b , b ( I 2 1 , / = 2 1 2 1 ) b, b (I b b if 0 b b if 1 )} x ( { 2 1 Hence [ 6.0 0 6.0 )}) x ( { ( )] B , B ( ~ [ )] B , B ( ~ ) B , B (I domB x 2 1 2 1 * 2 1 = = = [ 7.0 0 7.0 )}) x ( { ( )] B , B ( ~ [ )] B , B ( ~ ) B , B (I domB x 1 2 1 2 * 3 2 = = = Therefore 7.0 7.0 6.0 )] B , B ( ~ [ )] B , B ( ~ [ )] B , B ( [ 1 2 * 2 1 * 2 1 * = = = Using the above computations we find that the inequality (8) is satisfied for the two tuples t1 and t2 since International Journal of Electrical and Computer Engineering 2:5 2007 338 ]) B [ 2 t ], B [ 1 t( B E ]) A [ 2 t ], A [ 1 t( A E ]) B [ 2 t ], A [ 2 t(] AB [r ]) B [ 1t ], A [ 1 t(] AB [r (= 0.4 0.5 1 0.6) TABLE III AN INSTANCE OF FUZZY JOINED RELATION Q= R JOINF S A B D 1 a 1 b } 2 d 3. 0 1 d 1. 0 { + 0.1 1 a 2 b } 2 d / 5.0 { 0.4 2 a 1 b } 2 d 3. 0 1 d 1. 0 { + 0.3 2 a 2 b } 2 d / 5.0 { 0.3 2 a 3 b } 3 d 7. 0 1 d 3. 0 { + 0.5 4 a 1 b } 2 d 3. 0 1 d 1. 0 { + 0.3 4 a 2 b } 2 d / 5.0 { 0.5 4 a 1 b } 2 d 3. 0 1 d 1. 0 { + 0.3 4 a 3 b } 3 d 7. 0 1 d 3. 0 { + 0.3 Similarly (8) can be verified for any two tuples of r. Thus we conclude that the ffd X Y holds on r. We will now show that ffds may not be preserved on executing the fuzzy- join operator. Note that the attributes B of Rand C of S are defined over the same domain and therefore are fuzzy-join compatible. Let Q be the result of applying the fuzzy equi join operator on R and S. Let q denotes a relation instance of Q (Table III). Let 1F and 2 F denote the set of ffds holding on R and S respectively. Since the ffd f: A B holds in r of R, so 2 1 F F f . We will prove that the f does not hold on q. Now consider the two tuples 1t = )1.0,} d 3. 0 d 1. 0 {, b , a( 2 1 1 1 + and 2t = ) 4.0 }, d / 5.0 {, b , a( 2 2 1 Here 1.0 ]) B [ t ], A [ t( 1 1 ] AB [ q = , 4.0 ]) B [ t ], A [ t( 2 2 ] AB [ q = and 1 ]) A [ t ], A [ t( E 2 1 A = but 0 ]) B [ t ], B [ t( E 2 1 B = Hence the ffd A B does not hold in q and consequently the ffd A B does not hold in 2 1 F F . However consider another fuzzy relation schema ) D ,' C ('S given below where the domain of ' C is the set of fuzzy subsets defined over } b , b , b , b , b { 5 4 3 2 1 and D is a set of fuzzy subsets defined over } d , d , d { 3 2 1 . 'S ' C D } 1 b / 4.0 { } 2 d 3. 0 1 d 1. 0 { + 0.4 } 2 b / 5. 0 { } 2 d / 5.0 { 0.5 } 3 b / 8 {. } 3 d 7. 0 1 d 3. 0 { + 0.6 Let ' Q denotes the fuzzy join of R with 'S i.e ' Q = R JOINf 'S and let 'q be a relational instance of ' Q given in (Table IV). It can be easily verified that the ffd A B holds in ' Q . Thus we conclude that in order to preserve the fuzzy functional dependencies in joining of two type-2 fuzzy relations, the fuzzy join must be executed over atomic values. Only the attributes which have their domain as ordinary sets can guarantee to provide the atomic values of the tuples. VII. FUZZY JOIN DEPENDENCY In this section we define the fuzzy join dependency in context of type-1 & type-2 fuzzy relational databases. The join dependency in a classical relational database verifies the lossless join decomposition of a relation schema. We try to achieve the same results in context of fuzzy relational databases. Definition 5:- Given a type-1 or type-2 fuzzy relational schema R, Consider the following set of its projections [ n R .......... 2 R ,1 R ]. The relation schema R satisfies the fuzzy join dependency denoted as FJD[ n R .......... 2 R ,1 R ],if the only if the fuzzy equi join of the projection i R on R , n i 1 ,is equal to R i.e. f JOIN ) R ( n R P ......... f JOIN ) R ( 2 R P f JOIN ) R ( 1 R P R = where f JOIN denotes the fuzzy equality operator In the above definition, it can be noted that the fuzzy Join dependency holds iff the result of the fuzzy equi join of the decomposed fuzzy relations recovers to the original fuzzy relation. TABLE IV 'q , A RELATIONAL INSTANCE OF ' Q = R JOINF 'S A B D 1 a } 1 b 1. 0 { } 2 d 3. 1 d 1. 0 { + 1.0 1 a } 2 b 5. 0 { } 2 d / 5.0 { 4.0 2 a } 1 b 3. 0 { } 2 d 3. 1 d 1. 0 { + 3.0 2 a } 2 b 4. 0 { } 2 d / 5.0 { 4.0 2 a } 3 b 5. 0 { } 3 d 7. 1 d 3. 0 { + 5.0 1 a } 1 b 3. 0 { } 2 d 3. 1 d 1. 0 { + 3.0 1 a } 2 b 5. 0 { } 2 d / 5.0 { 5.0 4 a } 1 b 1. 0 { } 2 d 3. 0 1 d 1. 0 { + 1.0 4 a } 3 b 3. 0 { } 3 d 7. 0 1 d 3.0 { + 3.0 Theorem 2: Let R be a type-1 fuzzy relation schema which is decomposed into n number of relation schemas n 2 1 R ..... R , R . If either R R i = , for some i=1, 2 .n or every i R is a super-key of R then the fuzzy join dependency denoted by FJD( n 2 1 R ..... R , R ) holds on R. Proof- Let r be a relational state of R. Since R is a type-1 fuzzy relation schema, it cannot have the domain of any attribute as set of fuzzy subsets. So, non-atomic values cannot appear as value of some attribute in a tuple. Let us discuss the two cases separately. International Journal of Electrical and Computer Engineering 2:5 2007 339 Case 1: Suppose some k R (k [1, n]) such that R Rk = Let n 2 1 A ..... A , A be the set of attributes such that i i R A = and i A )r( P i R = , .n ..... 2,1 i = According to the definition of fuzzy projection, the projection )r( P r i R i = is an s-ary fuzzy relation in the domain ) A ( .......... ) A ( s 1 i i . Also the membership function ir is given by }t ] R [ t|) t( { max )t( i r r r t r r i = = Let 1t and 2t be the only two tuples of R such that ] A [ t ] A [ t i 2 i 1 = (if more than two tuples exist, the proof can be provided in a similar way). Let us denote it by ] A [t i , then using the definition of projection, ) 13 ( )) t( ), t( ( )t( 2 R 1 R R i = Now since R R k = , joining of i R with k R will give rise to no additional tuple in i f k k R JOIN R ' R = , because k R will be joined with i R on equality of ] A [ t i 1 with ] A [t i and ] A [ t i 2 with ] A [t i . Now Since the fuzzy relation schema R was a type-1 fuzzy relation schema, both the values ] A [ t i 1 ( respectively ] A [ t i 2 ) and ] A [t i will be crisp values and the fuzzy equality value will be equal to 1 because of the derivation of ] A [t i from ] A [ t i 1 ( respectively ] A [ t i 2 ) and on every other tuple the value of fuzzy equality will be 0. The only point remains to be seen is the membership value of the tuple 1t and 2t in the fuzzily joined relation ' R k . Now according to the definition of fuzzy equi-join, the membership values of the tuple 1t in the fuzzily joined relation schema ' R k is given by ) )) t( ), t( (( ), t( ( )t( 2 R 1 R 1 R R JOIN R i A * i A i f k = = ) t( 1 R Similarly the membership value of 2t in ' R k is given by ) )) t( ), t( (( ), t( ( )t( 2 R 1 R 2 R R JOIN R i A * i A i f k = = ) t( 2 R Hence, the membership values of the tuples 1t and 2t in the fuzzily joined relation ' R k come out to be the same value as previous one. Since i R was any arbitrary chosen projection of R, the fuzzy join of n 2 1 R ..... R , R will give rise to R. Hence r )) r( n R P .. )......... r( 2 R P ), r( 1 R P ( f JOIN = And the fuzzy join dependency holds. In classical relation databases the join dependency has been referred as trivial join dependency when Ri = R for some i. Case 2: Every Ri is a super-key of R Since every Ri is a super-key of R , it implies that every Ri contains key(it can be noted that R may contain more than one key of R viz. a primary key and several candidate keys , but we are talking in the notion that every Ri is superset of the same key. Using the property of a key, we observe that since every Ri is a super-key of R, unlike case1 no two tuples 1t and 2t of R can exist such that ] A [t ] A [ t ] A [ t i i 2 i 1 = = .Hence for any tuple T belonging to relation state r of R such that ] A [t ] A [ T i i = and we have ]) A [t( ]) A [ T ( i R i R i = . Rest of the argument can be given similar to as in case 1 and conclude that the FJD holds. In the next theorem we derive the conditions for the fuzzy join dependency to hold in type-1 fuzzy relational schemas. Theorem 3: Let r denotes a relational instance of a type-2 fuzzy relation R such that the key of R does not contain any attributes with domain as set of fuzzy subsets .Let n 2 1 R ..... R , R denote its fuzzy projections .If Ri is a super-key of R ,then the fuzzy join dependency (FJD): r )) r( n R P .. )......... r( 2 R P ), r( 1 R P ( f JOIN = holds on R. Proof: Since every Ri is a super-key of R, therefore Ri will be fuzzily joined with Rj )j i( on the key attribute. Since the key attributes will be having the crisp values as the values of the tuples, therefore the fuzzy join will be lossless. So that the fuzzy join dependency (FJD) )r( 2 R P ), r( 1 R P ( f JOIN r )) r( n R P. .......... = holds (by case 2 of Theorem 2). Again the atomicity plays a crucial role in joining two relations. Since the attributes with domain as a set of fuzzy subset can have non atomic tuple values, therefore joining two tuples on non-atomic values may give rise to a lossy join. The problem when the key attribute can have domain as a set of fuzzy subsets can be dealt only after removing the redundancy between two tuples (by fixing a minimum threshold value as a key always results in non-redundant tuples)and is not addressed in this article. It can be noted that in case of a type-2 fuzzy relation schema the FJD is not guaranteed to hold even if the trivial join dependency is holding on the relation as projection R on n 2 1 R ..... R , R may not guarantee propagation of key in every i R and since there may exist a case when two projection i R & j R )j i( are joined on an attribute having domain as set of fuzzy subsets (non-atomic values) and thus may result in a lossy join. VIII. CONCLUSION In this paper we have proposed a multi-relational data dependency called the fuzzy join dependency to verify the lossless join property of the decomposed relations. We observed that the subnormal/normal fuzzy sets may occur as value of an attribute in a type-2 fuzzy relational schema and the fuzzy equality of two subnormal/normal fuzzy sets may be zero/non-zero. We studied the conditions for such equality International Journal of Electrical and Computer Engineering 2:5 2007 340 over different domains. The fuzzy join dependency was defined on the basis of fuzzy equi-join operator. We conclude that atomicity of the attribute value is a necessary condition for the dependency preservation property of the ffds. In last we obtain the conditions for obtaining the lossless join of the decomposed schemas. We found that the non-atomic fuzzy sets such as Low which frequently occur as value of attributes are responsible for the lossy join. However, since in a type-2 fuzzy relational schema the occurrence of non-atomic sets is inevitable, therefore care must be taken while joining two schemas that they must not be joined over such attributes which contain values as non-atomic fuzzy sets. IX. ACKNOWLEDGMENT We thank the School of Computer & Systems Sciences, Jawaharlal Nehru University and Jaypee Institute of Information Technology University, for providing us the resources to conduct this research. We also thank all the researchers whose contribution to the field of fuzzy databases has helped us to give this paper the present shape. REFERENCES [1] K.V.S.V.N. Raju, A.K. Majumdar, The study of joins in fuzzy relational databases, Fuzzy sets and systems , 21(1987), 19-34. [2] P. C. Saxena & B.K.Tyagi, Fuzzy Functional Dependencies & independencies in extended fuzzy relational data models , 69(1995), 65- 89. [3] Bhattacharjee T.K and Mazumdar A.K, Axiomatisation of fuzzy multivalued dependencies in a fuzzy relational data model, Fuzzy sets and systems , 96(1988), 343 352. [4] Jyoti S , Babu M. Syam, Multivalued dependencies in fuzzy relational databases and lossless join decomposition, Fuzzy sets and systems , 88(1997),315-332. [5] Liu Wei Yi, Fuzzy data dependencies and implications of fuzzy data dependencies, Fuzzy Sets and systems , 92(1997), 341-348. [6] P.C.Saxena & D.K.Tayal, Multivalued dependencies in type-2 fuzzy relational data models using fuzzy functions , communicated to Iranian Journal of Fuzzy Systems. [7] S zat Mustafa & Adnan Yazici, A complete axiomatization for fuzzy functional dependencies and multivalued dependencies in fuzzy database relations, Fuzzy sets and systems , 117(2001), 161-181. [8] Edward Sciore, A complete axiomatisation of full join dependencies , Journal of ACM, 29(2) (1982), 323-393. [9] K.P.Tan , A less costly constraints checking for join dependency , In Proceedings of the Tenth International Conference on Very Large Data Bases , Singapore , August 1984. [10] K.V.S.V.N.Raju , A.K.Majumdar, Fuzzy functional dependencies and lossless join decomposition of fuzzy relational databases , ACM Transactions Database systems,13(2)(1988),129-166. [11] F.E.Petry, Fuzzy Databases Principles and Applications , Kluwer Academic publishers, USA 1996. [12] Ma Z.M , Zhang W.J , Ma W.Y , Mili F, Data Dependencies in extended Possibility based Fuzzy Relational Databases , International Journal of Intelligent Systems,17(2002),321-332. [13] Chen G.Q ,Kerre E.E, Vandenbulcke J, A computational Algorithm for FFD closure and a complete axiomatization of fuzzy functional dependency (FFD) , Int J Intelligent systems , 9(1994) ,421- 439. [14] Chen G.Q, Kerre E.E., Vandenbulcke J, Normalization based on fuzzy functional dependency in a fuzzy relational data model, J information systems , 21(3)(1996),299-310. [15] Dubois Didier & Prade H, Generalised Dependencies in fuzzy data bases , Journal of American Society for Information Science, 49(3),219- 235. [16] Prade Henri & Testamale C, Generalising database relational algebra for the treatment of the incomplete or uncertain information and vague queries , Info Science, 34(1984),115-143. [17] Umano M, FREEDOM O: A fuzzy database system, In fuzzy information and Decision Processes. , M M Gupta, E Sacnhez , Eds North Holland , Amsterdam 1982,339-347. [18] Mustafa Demirci, Fuzzy functions and their fundamental properties, Fuzzy sets and systems , 106(1999) ,239-246. [19] M. Sasaki, Fuzzy functions, Fuzzy sets and systems , 55(1993),295- 301. [20] P.C.Saxena & D.K.Tayal, Normalisation in type-2 fuzzy relational data model based on fuzzy functional dependency using fuzzy functions , communicated to Journal of Intelligent and Fuzzy Systems [21] P C Saxena & D K Tayal, Fuzzy Join operator in fuzzy relational databases , In Proc: National Conference on Energy, Communication and Computer Systems, February 2-4, Delhi, India [22] Desai B C, Introduction to Database Systems , Galgotia Publications, 1999. P. C. Saxena was born in Delhi, India and acquired a degree of M.Sc. (Operational Research) and Ph.D. (Operational Research) from University of Delhi in 1970. He is a member of various professional bodies including IEEE. He is also a referee on the panel of various reputed national and international journals including the International Journal of Fuzzy Sets and Systems. He is currently a professor and Ex-Dean in School of Computer and Systems Sciences, Jawaharlal Nehru University, India and worked earlier as a lecturer in University of Delhi, India. He has published more than 75 papers in International Journals of high repute. Prof. Saxena is a member of various professional bodies like Computer Society of India, Institute of Electrical and Electronic Engineers, India etc. Devendra K. Tayal was born in 1977 in Delhi, India. He has acquired the degrees of B.Sc.(H)(Maths), M.Sc.(Maths), M.Tech. (Computer Engg) & Ph.D. from Jawaharlal Nehru University, Delhi, India in 2006. He is an Assistant Professor in Department of Computer Engg, Jaypee Institute of Information Technology University, Noida, UP, India. He also worked as a lecturer in University of Delhi for about three years. Mr. Tayal has published about a dozen papers in Fuzzy Logic and Software Engg .His areas of interest include Theory of Computation, Algorithms, Software Engg., Database Management Systems, Data Mining and Fuzzy Logic. International Journal of Electrical and Computer Engineering 2:5 2007 341