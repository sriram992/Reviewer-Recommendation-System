SULABH TYAGI, et al.: ROLE OF TRUST IN DISTRIBUTED AGILE SOFTWARE DEVELOPMENT TEAMS - A LIGHT WEIGHT SYSTEMATIC LITERATURE REVIEW DOI: 10.21917/ijms.2018.0102 748 ROLE OF TRUST IN DISTRIBUTED AGILE SOFTWARE DEVELOPMENT TEAMS - A LIGHT WEIGHT SYSTEMATIC LITERATURE REVIEW Sulabh Tyagi1, Ritu Sibal2 and Bharti Suri3 1,2Department of Information Technology, Netaji Subhas Institute of Technology, India 3School of Information and Communication Technology, Guru Gobind Singh Indraprastha University, India Abstract Agile software development is being adopted in distributed environment to reduce cost and to increase scalability of software projects. With agile development teams working in distributed environments, challenges are often faced related to trust and cohesiveness among agile team members. This paper presents the light weight systematic review for investigating the role of trust in distributed agile software development projects. The results are limited to articles published in peer reviewed conferences, scientific journals and books published between 2006 and 2017. The synthesis of articles has been made through classifying the studies based on research method, publication channel and publication year. Our results sheds lights on different studies related to trust related issues in distributed agile software development teams. Keywords: Agile Software Development, Peer Reviewed Conferences, Journals, Books 1. INTRODUCTION Agile software development methods are gaining widespread popularity across the globe, and many software organizations are using agile software development in the distributed set up. In distributed environment, agile team members are often distributed across multiple cities within the same or different countries. Different cultural backgrounds, ethnicities and time differences add on to the geographical distances for weakening the cohesiveness of agile teams. Moreover, Use of agile practices in distributed environment is gaining popularity across the globe, mainly because it helps in reducing manpower cost and also reduces time to market. To gain the maximum from both of these approaches, software organizations are using combination of agile software development in distributed set up. Software organizations are constantly scaling their agile practices beyond countries and continents [1]. The most crucial element on which teams gel in an agile setup is the existence of trust amongst its team members [2]. Trust act as a cohesive force in agile software development teams, irrespective of the fact whether the team is collocated or distributed. The agile manifesto proactively emphasizes on existence of good interpersonal relationships, trust amongst team members and continuous customer collaboration over contract negotiation [3]. This study explores the role of trust in distributed agile software development teams by performing the light weight review of literature related to trust in distributed agile environment. This paper is divided into seven sections. Section 1 provides brief overview about distributed agile software development and trust. Section 2 gives the background to agile methods, distributed software development and trust. In section 3, our research method and protocol was discussed. Section 4 presents results from our systematic literature review. Section 5 discuss the results and future work. Section 6 presents the limitations of this study and the last section concludes the paper. 2. BACKGROUND In this section, we provide a brief overview of the agile software development, distributed agile software development and trust. 2.1 AGILE SOFTWARE DEVELOPMENT Agile software development is based on iterative and incremental style of development. Agile software development is not a methodology in itself rather it is an umbrella term for several agile methodologies that includes Scrum, Extreme Programming (XP), Crystal, Dynamic Systems Development Method (DSDM), Lean Development, and Feature-Driven Development (FDD). Each of these methodologies is driven by the vision and core values of agile manifesto. Agile Manifesto [4] states that agile software development should focus on four core values: Individuals and interactions over process and tools. Working software over comprehensive documentation Customer collaboration over contract negotiation Responding to change over following a plan Agile software development methods are known to give prominence on continuous feedback, social interaction and collaboration among agile team members. Scrum and XP are considered to be the most widely adopted agile software development methodologies [5]. 2.2 DISTRIBUTED AGILE SOFTWARE DEVELOPMENT When software development teams are distributed across different cities, different countries, different continents then they are termed as distributed software development (DSD) teams. Global software development (GSD) is often used interchangeably for DSD. Today, many software organizations are using agile methods in DSD set up to take the benefits from both of these approaches [6]. Adopting and practicing agile practices like collaboration, face to face communication, daily stand up meetings and sprint retrospective meetings have become a challenging task in distributed environment [7]. Collaboration and face to face communication are two biggest problems when agile methods are adopted in GSD setup [8]. Vax et al. [9] reported different challenges of DSD in agile setup ISSN: 2395-1664 (ONLINE) ICTACT JOURNAL ON MANAGEMENT STUDIES, MAY 2018, VOLUME: 04, ISSUE: 02 749 pertaining to face to face communication, language barriers, cultural differences and lack of trust. According to [10] distributed agile teams pose many challenges that slowed down software development processes. Strategies are suggested to overcome problems related to different time zones and cultures for distributed agile teams. 2.3 TRUST Trust has been studied across many disciplines such as the psychology [11], social sciences [12], management [13] and others. But there seems to be no acknowledged definition of the term trust as researchers in different disciplines have different views comprising many different dimensions. Hence, there is no generally accepted definition of trust. This situation makes it difficult to work with a difficult concept like trust [14]. Hasnain et al. [30] depicted the complexity of studying and understanding the trust as described by Jinwei and Fox [15]. Trust is the psychological state in which the trust or believes that the trustee behaves as expected in a specific context, based on evidence of the trustee s competence and goodwill; the trust or is willing to be vulnerable to that belief. Here, the trustor and trustee are the developers and project managers in a team and the competence is the capability of the developer to do the development work announced at the stand-up and goodwill is the good intention of the developer to do that development work [30]. It is important to investigate the role of trust among agile teams especially when agile teams are operating in distributed environment. 3. REVIEW METHOD This review has been developed through several stages: First review protocol was developed, and then an inclusion and exclusion criterion has been established, a search for relevant studies has been performed, followed by data extraction and synthesis. In the rest of this section, we describe the details of these stages and the methods used. 3.1 RESEARCH QUESTIONS While deciding to conduct a systematic review in this area, we set up following research questions. RQ1: What is reported in the current peer-reviewed research literature regarding the role of trust in distributed or global agile software development? To answer this question, current research literature needs to be explored on the selected databases. RQ2: What kind of studies has been published in this area? To answer this question, the results of the systematic review had to be synthesized and analyzed comprehensively. 3.2 REVIEW PROTOCOL DEVELOPMENT Review protocol was developed by following the guidelines and procedures provided by Kitchenham et al. [16]. Our research questions, search strategy, inclusion and exclusion criteria, data extraction, and synthesis are based on this protocol. 3.3 DATA SOURCES AND SEARCH STRATEGY We have searched some major electronic databases to identify the relevant papers in the field of our current area of research. The following electronic databases were used: IEEE Xplore Springer Link In addition to above databases, we also hand searched all the volumes of the following conference proceedings: XP Our systematic literature review process along with the number of studies identified at each stage is shown in Fig.1. In stage 1, the titles, abstracts, and keywords of the articles in the included electronic databases and conference proceedings were searched using the following search terms: Trust AND Agile AND distributed software development Trust AND Scrum AND distributed software development Trust AND XP AND distributed software development Trust AND Agile AND global software development Trust AND Scrum AND global software development Trust AND XP AND global software development Boolean OR operator was used to combine all above search terms, which ensured that the research article had to include any one of these terms in order to get retrieved. So the search string combination was: 1 OR 2 OR 3 OR 4 OR 5 OR 6 This search strategy fetched us the total of 3334 articles. 3.4 INCLUSION AND EXCLUSION CRITERIA Based upon our search strategy, total n = 3334 articles were fetched from the selected databases at stage 1. At stage 2, titles of all the 3334 articles from stage 1 were examined to determine their relevance to the current systematic review. Studies not related to agile software development were excluded from this stage. Articles with titles that were not in scope of our study were excluded at this stage. At this total of 2470 Articles were excluded. At stage 3, abstracts of the remaining 864 articles were checked for their relevance to our focus area i.e. role of trust in distributed agile software development. To reduce the single researcher bias, abstracts of all 864 articles were divided among three authors in such a way that each abstract should be reviewed by at least two authors independently to check the relevancy with respect to the focus area of this study. After multiple discussions, all the authors consensually selected 139 articles for detailed review for the next stage. At stage 4, all the authors assessed the remaining 139 articles independently to check the rigor, relevance and credibility as per the criteria proposed by the Critical Appraisal Skills Programme (CASP) [17] [18]. After series of reviews total 122 articles were excluded and remaining 16 articles were selected in the final list of papers for data extraction and synthesis. 3.5 DATA EXTRACTION AND SYNTHESIS Data was extracted from each of the 16 primary plus secondary studies and collected in MS Excel (See Appendix 1). The items of the excel sheet form were planned in line with our SULABH TYAGI, et al.: ROLE OF TRUST IN DISTRIBUTED AGILE SOFTWARE DEVELOPMENT TEAMS - A LIGHT WEIGHT SYSTEMATIC LITERATURE REVIEW 750 objectives of our study and to answer the research questions by analyzing the extracted data form. We studied the full text in detail from each and every paper to extract the required data such as agile software development methodology, agile project distribution and research method used in the study. Each paper was studied in depth which helps us in classifying the content of the studied paper with respect to research method employed, database source (Journal or Conference), publication year, study context and findings. Fig.1. Different stages of study selection process 4. RESULTS We identified 16 studies that mentioned the role of trust in distributed agile software development in one way or another. Fourteen are primary studies [6] [8] [19]-[29] and two are secondary studies [30] [31]. In the following section we discuss the primary studies classified based on different research methods used, database sources and year of publication. 4.1 CLASSIFICATION BASED ON THE TYPE OF THE STUDY Selected primary studies are categorized on the basis of the type of research method . We also discuss the role of trust in agile software development in distributed or global set up. Primary studies classified on the basis of research method are shown in Table.1. The Table.1 shows the number along with the percentage of publications corresponding to research methods used. Single Case Study: Korkala et al. [21] conducted the single case study in a large global distributed software company using agile development methods from past two years. This study found that the customer was not involved in the implementation due to the lack of trust and its impact on information sharing among distributed team members. Another significant work is done by McHugh et al. [24] in one of the large multinational financial services organization. They reported the role of agile practices like daily stand up, sprint planning meeting and sprint retrospective meeting in building trust among agile team members in distributed set up. Multiple Case Study: Hole and Moe [20] reported that trust is important in distributed agile software development projects to reduce the need of standardization and direct supervision. Ramesh et al. [6] described the need of trust in forming high performing and cohesive teams in distributed agile environments. Trust is seen as a key enabler in building cohesive agile teams in globally distributed environment. Passivaara and Lassenius [8] performed multiple case study on four distributed scrum projects. They also reported different benefits of frequent visits and multiples communication modes in developing the trust among distributed team members. Experience Report: One of the significant study described the difficulty in fostering team bonding and collaboration with the distributed teams with little or no face to face interaction. This further leads to the problems related to trust and communication at My Yahoo. Wildt and Prikladnik [26] presented their experience of a global multinational company while transitioning from distributed and traditional to distributed and agile environment. For a smoother transition to distributed agile environment, scrum master must know to deal with the distance, trust and cultural diversity issues. Moe et al. [19] reported the challenges of virtual teams related to the lack of communication, time zone difference and difficulty in building and maintaining trust while enabling knowledge sharing. Grounded Theory: Maximum number of studies close to forty percent employed the grounded theory as the research method as shown in table 1. One of the important studies by Dorairaj et al. [22] investigated the role of trust in developing effective communication among team members in distributed agile environment. Another study by Dorairaj et al. [23] reported the role of trust in promoting team interaction between distributed agile teams. Hoda et al. [25] discussed the role of organizational culture in building the environment of trust between agile team members and senior management in order to facilitate them to become self- organizing. Trust is the key factor in distributed agile teams, trust is crucial in determining the success or failure of distributed agile projects [27]. Dorairaj et al. [28] argues that trust is a crucial ingredient for blending agility with distributed software development. Trust among distributed team members is important to bridge spatial, temporal and socio cultural distances, it s important for them to work together as one team. Trust fuels team performance and contribute in building an effective and cohesive team. In a study [29] some key reasons were presented for the lack of trust and its adverse effects in distributed agile teams. Published Literature Review: Hasnain and Hall [30] presented the cut down literature review to investigate the role of trust in agile software development methods. In this study authors have suggested that importance of trust cannot be neglected agile teams whether Stage 1 Apply search strategy and obtain relevant strategies from selected database sources Obtain final list of primary and secondary studies for data extraction and synthesis Exclude studies on the basis of abstract Exclude studies on the basis of titles Stage 2 Stage 3 Stage 4 n=3334 n=864 n=139 n=16 ISSN: 2395-1664 (ONLINE) ICTACT JOURNAL ON MANAGEMENT STUDIES, MAY 2018, VOLUME: 04, ISSUE: 02 751 collocated or distributed. Moreover they admitted that this literature review is not comprehensive to determine the role of trust in agile teams. Authors also suggested other researchers to pursue research on this topic to investigate the role of trust in agile methods. Another system review study by Jalali and Wohlin [31] is based on use of agile practices in global software engineering. According to [31] major difficulties when agile practices are used in global software engineering projects are related to communication, trust, culture and different time zones. Although both of these studies contribute through systematic literature review in their own way but they did not provide the comprehensive outlook on the role of trust in agile software development in distributed or global software development set up. Classification on studies based on the publication channel and year of publication. The Table.2 provides the brief overview of the studies based on the publication channel and year of publication. It is evident from the Table.1 that maximum numbers of studies have been published under XP conference with thirty eight percent followed by studies published in ICGSE with thirteen percent. Most of the studies were published in conferences with sixty nine percent, while twelve percent were published in scientific journals. As far as the year of publication is concerned, we found two studies on distributed agile software development related to trust in 2008. Since then there is a steady increase in studies related to trust in distributed or global agile software development set up, one study published in 2009, four in 2010, three in 2011, two in 2012, one in 2013, one in 2016 and one in 2017. This shows the importance of trust in distributed agile software development environment. 5. DISCUSSION The present literature review identified significant number of studies that shed light on the role of trust in agile software development teams in distributed or global set up and provides answer to our RQ.1. Systematic literature review conducted by Hasnain et al. [30] did not provide any comprehensive picture on role of trust in agile development projects. They reported that trust is one of the very significant factors among agile teams and if there is no trust between the team members there would be more rules. However, the present study provides comprehensive overview on the studies related to the role of trust in distributed agile environment. Some of the studies reported different challenges faced by agile teams working in distributed environment that includes lack of face to face communication, different cultural background, linguistic barriers, and different time zones. Moe et al. [19] identified key factors like poor socialization among team members, missing face to face interactions and unpredictability in communication as causes for lack of trust in global software development teams. In absence of trust, team members give more importance to individual goals than team goals which often resulted in team conflicts and poor team performance. To provide answer to our RQ.2, this study attempts to classify the published literature on the basis of research method , publication channel and publication year to provide insight on the type of work performed on the role of trust in distributed agile software development. Majority of the reported research work is from XP 20XX international conference on agile software development followed by the international conference on global software engineering. Year 2010 has the highest number of publications with almost thirty one percent followed by eighteen percent in the year 2011. This steady growth in the number of publications since 2008 reflects the popularity and importance of the research on the topic of trust in distributed agile software development. Table.1. Classification of studies by research method Primary Study Research method Number Percentage S3, S7 Single Case Study 2 14 S1, S2, S11 Multiple Case Study 3 22 S4, S9, S13 Experience Report 3 22 S5, S6, S8, S10, S13, S14 Grounded theory 6 42 Total 14 100 Table.2. Classification of studies (Primary + Secondary) based on the publication channel and year of publication Publication channel Publication type Publication year Number Percentage EuroSPI Conference 2008 1 6 Agility Across Time and Space Book 2010 2 13 European Journal of Information Systems Journal 2017 1 6 XP 200X Conference 2008, 2009, 2010, 2011 X2, 2012 6 38 Empirical Software Engineering Journal 2010 1 6 Information System Development Book 2011 1 6 ICGSE Conference 2010, 2016 2 13 Agile Conference Conference 2013 1 6 EASE Conference 2012 1 6 Total 16 100 6. LIMITATION The major concern with the systematic literature review study is the reliability. To reduce the research bias in the selection of the studies, all the three authors were involved in the study selection stages to address the reliability threats by mutual SULABH TYAGI, et al.: ROLE OF TRUST IN DISTRIBUTED AGILE SOFTWARE DEVELOPMENT TEAMS - A LIGHT WEIGHT SYSTEMATIC LITERATURE REVIEW 752 discussion and consensus. Inclusion and exclusion criteria were formed jointly as discussed in section 3 of this study. To address conclusion validity, we collected data mainly from two databases first is IEEE Xplore and other is Springer link and also hand searched all the proceedings of XP 20XX conferences. The publication year for searching the studies was selected from 2006 to 2017, to accommodate maximum number of relevant publications from the selected databases. We acknowledge the fact that this study may not present the exhaustive list research studies in the area of trust in distributed agile software development due to limited number of database sources used to collect the data. Furthermore, findings from this study may be slightly different from other similar studies; however, they accurately characterize the contexts studied. 7. CONCLUSION Today, majority of the software organizations are adopting agile methods in distributed or global software development set up. Team members are distributed across multiple geographic locations that pose several challenges related to communication and trust. To investigate the role of trust in distributed agile software development teams, we performed a lightweight systematic literature review and identified total 3334 studies from our search criteria, out of which 16 were found relevant to our research. Fourteen research studies were primary while remaining two were secondary studies. Classification of the research studies was based on the research method used by the study and the publication channel along with the year of the publication. Majority of the studies had used grounded theory as the research method. XP 20XX conference had the highest number of the published articles that were related to the role of trust in distributed agile software development teams. It has been found that trust is one of the key factor for building cohesiveness, communication and collaboration among agile team members in distributed or global development environment. The researchers and practitioners may utilize this study to understand different issues related to trust and to explore different strategies to build trust among agile team members in distributed software development projects. However, our study provides light weight review on the studies related to the role of trust in agile software development in distributed environment. This study consolidated the findings mainly from the two database sources, IEEE Xplore and Springer Link; therefore we encourage other researchers to conduct a similar review with wide range of database sources. REFERENCES [1] 7th Annual State of Agile Development Survey-Version One, Available at: http://www.versionone.com/pdf/7th- Annual-State-of-Agile-Development-Survey.pdf/, Accessed on 2017. [2] G. Asproni, Motivation, Teamwork, and Agile Development , Agile Times, Vol. 4, pp. 1-9, 2004. [3] J. High Smith, Agile Software Development Ecosystem , 1st Edition, Addison Wesley Professional, 2002. [4] M. Fowler and J. High Smith, The Agile Manifesto , Software Development, Vol. 9, No. 8, pp. 28-35, 2001. [5] B. Fitzgerald, G. Hartnett and K. Conboy, Customizing Agile Methods to Software Practices at Intel Shannon , European Journal of Information System, Vol. 15, No. 2, pp. 200-213, 2006. [6] B. Ramesh, C. Lan, M. Kannan and X. Peng, Can Distributed Software Development be Agile? , Communications of the ACM, Vol. 49, No. 10, pp. 41-46, 2006. [7] T. Lehtinen, R. Virtanen, J. Viljanen, M. Mantyla and C. Lassenius, A Tool Supporting Root Cause Analysis for Synchronous Retrospectives in Distributed Software Teams , Information and Software Technology, Vol. 56, No. 4, pp. 408-437, 2014. [8] M. Paasivaara and C. Lassenius, Could Global Software Development Benefit from Agile Methods? , Proceedings of IEEE International Conference on Global Software Engineering, pp. 109-113, 2006. [9] M. Vax and S. Michaud, Distributed Agile: Growing a Practice Together , Proceedings of International Conference on AGILE, pp. 310-314, 2008. [10] C. Young and H. Terashima, How Did We Adapt Agile Processes to Our Distributed Development? , Proceedings of International Conference on AGILE, pp. 304-309, 2008. [11] A. Costa and N. Anderson , Measuring Trust in Teams: Development and Validation of a Multifaceted Measure of Formative and Reflective Indicators of Team Trust , European Journal of Work and Organizational Psychology, Vol. 20, No. 1, pp. 119-154, 2010. [12] D. Gambelta, Trust: Making and Breaking Cooperative Relations , BlackWell Publisher, 1990. [13] K. Blios, Trust in Business to Business Relationship: on Evaluation of its Status , Journal of Management Studies, Vol. 36, No. 2, pp. 197-215, 1999. [14] A.M. Babar, M.J. Verner and T.P. Nguyen, Establishing and Maintaining Trust in Software Outsourcing Relationships: An Empirical Investigation , Journal of Systems and Software, Vol. 80, No. 9, pp. 1438-1449, 2007. [15] J. Huang, Trust Judgement in Knowledge Provenance , Proceedings of 16th International Workshop on Database and Expert Systems, pp. 524-528, 2005. [16] B.A. Kitchenham et al., Preliminary Guidelines for Empirical Research in Software Engineering , IEEE Transactions on Software Engineering, Vol. 28, No. 8, pp. 721-734, 2002. [17] T. Greenhalgh, How to Read a Paper , 2nd Edition, BMJ Publishing Group, 2001. [18] T. Dyba and T. Dingsoyr, Empirical Studies of Agile Software Development: A Systematic Review , Information and Software Technology, Vol. 50, No. 9-10, pp. 833-859, 2008. [19] B. N. Moe and D Smite, Understanding a Lack of Trust Global Software Teams: a multiple-Case Study , Software Process: Improvement and Practice, Vol. 13, No. 3, pp. 217-231, 2008. [20] S. Hole and N.B. Moe, A Case Study of Coordination in Distributed Agile Software Development , Proceedings of European Conference on Software Process Improvement, pp. 189-200, 2008. [21] M. Korkala, M. Pikkarainen and K. Conboy, Distributed Agile Development: A Case Study of Customer Communication Challenges , Proceedings of International ISSN: 2395-1664 (ONLINE) ICTACT JOURNAL ON MANAGEMENT STUDIES, MAY 2018, VOLUME: 04, ISSUE: 02 753 Conference on Agile Processes and Extreme Programming in Software Engineering, pp. 161-167, 2009. [22] S. Dorairaj, J. Noble and P. Malik, Effective Communication in Distributed Agile Software Development Teams , Proceedings of International Conference on Agile Software Development, pp. 102-116, 2011. [23] S. Dorairaj, J. Noble and P. Malik, Understanding Team Dynamics in Distributed Agile Software Development , Proceedings of International Conference on Agile Software Development, pp. 47-61, 2012. [24] O. Mchugh, K. Conboy and L. Mang, Using Agile Practices to Build Trust in an Agile Team: A Case Study , Proceedings of International Conference on Information Systems Development, pp. 503-516, 2011. [25] R. Hoda, J. Noble and S. Marshall, Supporting Self- organizing Agile Teams , Proceedings of International Conference on Agile Software Development, pp. 73-77, 2011. [26] D. Wildt and R. Prikladnicki, Transitioning from Distributed and Traditional to Distributed and Agile: An Experience Report , Proceedings of International Conference on Agile Software Development, pp. 167-171, 2011. [27] S. Dorairaj, J. Noble and P. Malik, Understanding the Importance of Trust in Distributed Agile Projects: A Practical Perspective , Proceedings of International Conference on Agile Software Development, pp. 172-177, 2010. [28] S. Dorairaj, J. Noble and P. Malik, Agile Software Development with Distributed Teams: Agility, Distribution and Trust , Proceedings of International Conference on Agile Software Development, pp. 1-10, 2013. [29] S. Dorairaj, J. Noble and P. Malik, Understanding Lack of Trust in Distributed Agile Teams: A Grounded Theory Study , Proceedings of International Conference on Agile Software Development, pp. 81-90, 2012. [30] E. Hasnain and T. Hall, Investigating the Role of Trust in Agile Methods Using a Light Weight Systematic Literature Review , Proceedings of International Conference on Agile Processes and Extreme Programming in Software Engineering, pp. 204-207, 2008. [31] S. Jalali and C. Wohlin, Agile Practices in Global Software Engineering - A Systematic Map , Proceedings of 5th International Conference on Global Software Engineering, pp. 45-54, 2010. Appendix 1: Data Extraction Form - General 1. Database source: (IEEE Xplore, Springer Link, XP 20XX). 2. Date of data extraction. 3. Year of publication: (2006- 2017). 4. Author s detail. Number of authors. Affiliation. 5. Agile methodologies. XP, Scrum, Lean, Kanban. 6. Project distribution. Type of project distribution: (Locally distributed, globally distributed, virtual team, offshore). 7. Type of study. Single case study. Multiple case study. Grounded theory study. Ethnographic study. Quantitative or survey. Experience report. SLR. Action research. 8. Research paper published in: (Journal, conference, book section, workshop). 9. Findings of the study.