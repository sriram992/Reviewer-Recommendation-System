See discussions, stats, and author profiles for this publication at: https://www.researchgate.net/publication/320558120 DNS Spoo ng in Local Networks Made Easy Conference Paper October 2017 DOI: 10.1109/ANTS.2017.8384122 CITATIONS 12 READS 6,093 3 authors, including: Some of the authors of this publication are also working on these related projects: Novel Application Layer Denial-of-Service Attacks and their Detection View project Nikhil Tripathi Indian Institute of Technology Indore 17 PUBLICATIONS 284 CITATIONS SEE PROFILE Mayank Swarnkar Indian Institute of Technology (Banaras Hindu University) Varanasi 19 PUBLICATIONS 197 CITATIONS SEE PROFILE All content following this page was uploaded by Nikhil Tripathi on 11 January 2018. The user has requested enhancement of the downloaded file. DNS Spoo ng in Local Networks Made Easy Nikhil Tripathi, Mayank Swarnkar and Neminath Hubballi Discipline of Computer Science and Engineering, School of Engineering Indian Institute of Technology Indore {phd1401101002, phd1401101001, neminath}@iiti.ac.in Abstract Domain Name System (DNS) is a central protocol of the internet and provides a way to resolve domain names to their corresponding IP addresses. Due to its working, it is one of the most critical protocols being used in the internet. However, DNS is known to be vulnerable to a popular attack called DNS poisoning. Fortunately, DNS poisoning has become dif cult to launch due to introduction of techniques like source port and query identi cation value randomization. In this paper, we propose a targeted DNS spoo ng attack that exploits a vulnerability present in DHCP server-side IP address con ict detection technique. We show that the proposed attack is easier to launch and requires minimal bandwidth as compared to previously known attacks. We also discuss how proposed attack can target even a single victim client also without affecting other clients. We test the effectiveness of proposed attack in a real network setup and report the results. Further, we discuss how known detection and mitigation techniques are unable to detect the attack. I. INTRODUCTION Domain Name System (DNS) [18] is one of the critical protocols for ef cient working of internet applications. It pro- vides a way to match a domain name to its corresponding IP address, thus, mitigating the need of remembering IP address of a web server. DNS is also said to be a database of resource records as it maintains not only the host name to IP mapping but also other records such as nameserver, mail exchanger, etc. However, this protocol is vulnerable to attacks like DNS cache poisoning [16], DNS ampli cation attacks [17] and DNS query ood [25]. These attacks either compromise the con dentiality and integrity of end users by altering their traf c or cause Denial-of-Service (DoS) by targeting availability of resources. Various tools and techniques [5], [7] are available in the wild to launch such attacks. However, with the release of security xes [6], [1], it has become quite dif cult for a malicious entity to poison DNS cache of nameservers. Moreover, DNS ampli cation and query ood attacks require a large amount of malicious client s bandwidth and thus can be detected easily. Also, various third party vendors such as Cloud are [2] provide DoS/DDoS mitigating solutions for smooth business running of enterprises. In this paper, we propose a targeted DNS spoo ng attack that aims to deceive end clients instead of poisoning DNS server s cache. The proposed attack exploits a loophole present in DHCP server-side IP address con ict detection scheme [12], [14], [21]. RFC 2131 [12] mentions that before offering an IP, a DHCP server should probe it to make sure no other client is using it. A malicious client can exploit this vulnerability by sending fake replies to such probes due to which the DHCP server becomes unable to offer IP address and other network con guration parameters to victim client. At the same time, malicious client offers the desired network con guration parameters and thus, victim client ultimately starts using these parameters for further communication. This nally allows malicious client to alter or redirect the victim client s traf c as and when required. We show later in Section III-B how proposed attack is easier to launch and more effective as compared to previously known DNS attacks. Rest of the paper is organized as follows. In Section II, we describe the working of DHCP and DNS protocols and some popular attacks against DNS protocol. The proposed targeted DNS spoo ng attack and its comparison with pre- viously known attacks is discussed in Section III. We present experimental details and results in Section IV. In Section V, we discuss some known detection and mitigation techniques. Finally, the paper is concluded in Section VI. II. BACKGROUND In this section, we brie y discuss how an end client uses DHCP and DNS protocols in order to communicate with other entities, e.g. a web server. We also discuss previously known attacks against DNS protocol in this section. A. DHCP and DNS protocols As soon as a client joins a network, it obtains IP address and other network con guration parameters from DHCP server(s) equipped within the network. The messages exchanged be- tween a client and DHCP server while obtaining IP address and other network parameters are shown in Figure 1. These network parameters include local DNS server s IP address also. In case client requires to resolve a domain name into corresponding IP address, it sends a DNS query to the DNS server. On client s behalf, this server communicates with one of the thirteen root nameservers and other authoritative nameservers in order to resolve the required domain name. This process of domain name resolution is shown in Figure 2. B. Attacks against DNS protocol DNS is vulnerable to three popular types of attacks. In this subsection, we brie y describe each of these attacks. 1) Kaminsky DNS Cache Poisoning: Dan Kaminsky pro- posed an approach to hijack the authority nameserver records [16] by rst forcing the victim nameserver to Fig. 1: IP Address Allocation Process ISP s Recursive Nameserver 2 3 4 5 IP for abc.com Refer to next server Root server Client 1 IP for abc.com 6 7 8 IP= 1.2.3.4 GTLD Nameserver Authoritative Nameserver for abc.com Fig. 2: Domain Name Resolution trigger a DNS resolution query for a target domain and then sending forged DNS responses so that victim nameserver accepts the response assuming it is sent by authoritative nameserver for the target domain. However, to launch the attack, malicious client needs a prior knowledge of which port number and query identi ca- tion value is currently in use by nameserver. Thus, if both 16 bit port number and 16 bit query identi cation value is randomized, it becomes extremely dif cult for malicious client to guess correct combination before the victim nameserver reaches the genuine authoritative nameserver. 2) DNS Ampli cation Attack: DNS ampli cation [17] is typically a DDoS ooding attack where malicious client makes use of several zombies to generate small DNS queries with forged source IP addresses. These queries are meant to generate large volume of network traf c as DNS response messages are comparatively much larger than the DNS query messages. This large volume of network traf c is directed towards the victim in order to consume its resources. This attack makes use of open DNS resolvers in order to re ect and amplify the network traf c. Since this attack generates a large amount of DNS response traf c on the victim host, various cloud based techniques [2] are able to detect and mitigate this attack as soon as DNS traf c crosses a prede ned threshold. 3) DNS Query Flooding: This attack [25] is somewhat similar to the DNS ampli cation attack as it is also a type of DDoS attack. However, to launch this attack, malicious client oods the victim nameserver using a large number of DNS queries so that it is not able to resolve genuine clients DNS queries. Since this attack also generates large volume of DNS traf c, it can easily be detected if DNS traf c crosses a prede ned threshold. III. PROPOSED TARGETED DNS SPOOFING In this section, we propose the targeted DNS spoo ng attack and discuss its working. We also discuss how the proposed attack is different and more effective from the previously known attacks against DNS protocol. We use the notations shown in Table I to describe the attack. TABLE I: Notations IP OFFERED GENUINE IP address selected by genuine DHCP server to be offered to client IP OFFERED MALICIOUS IP address offered by malicious client to victim client MAC MALICIOUS MAC address of malicious client IP SERVER DHCP server s IP address MAC SERVER DHCP server s MAC address ARP REQ ARP Request ARP REPLY ARP Reply ICMP REQ ICMP Ping Request ICMP REPLY ICMP Ping Reply DN Domain Name being queried FAKE WEB SERVER IP IP address of web server hosting fake web page REAL WEB SERVER IP IP address of web server hosting DN A. Attack Description We consider a network topology similar to the one shown in Figure 3. In this network, there are four entities namely a DHCP server, a malicious client, a victim client and a switch connecting all these devices. Various messages exchanged between these entities during attack are elaborated below: 1) DHCPDISCOVER Message by Victim Client: As soon as victim client joins the network, it broadcasts a DHCPDISCOVER message in order to locate DHCP server(s) within the network. 2) ARP REQ/ICMP REQ Probe by DHCP Server: Once a DHCP server receives DHCPDISCOVER message sent in previous step, it broadcasts either an ARP probe or ICMP probe depending on its implementation to check if IP address, IP OFFERED GENUINE, chosen to offer is already in use. If DHCP server is designed to send ARP REQ, source MAC, source IP, destination MAC and target IP are set to MAC SERVER, IP SERVER, ff:ff:ff:ff:ff:ff and IP OFFERED GENUINE respec- tively. In case DHCP server is designed to send DHCP Server Switch Wired Backbone Malicious Client Victim Client 1 1 1 2 2 2 3 3 4 4 5 5 6 6 7 8 8 9a 6 9a 9b 9c Internet ISP s Recursive DNS Server 9b 9c 9d 9d Fake Web Server Genuine Web Server Fig. 3: Attack Description ICMP REQ, it sends an ICMP REQ with source and destination IP addresses as IP SERVER and IP OFFERED GENUINE respectively. 3) ARP REP/ICMP REP Reply by Malicious Client: If DHCP server sends ARP REQ, malicious client responds back with a fake ARP REP having its source MAC, source IP, destination MAC and target IP addresses as MAC MALICIOUS, IP OFFERED GENUINE, MAC SERVER and IP SERVER respectively. If DHCP server sends ICMP REQ, malicious client responds back with a fake ICMP REP having its source IP and destination IP as IP OFFERED GENUINE and IP SERVER respectively. Due to this reply, DHCP server is not able to offer IP OFFERED GENUINE and thus, it selects next available IP address from the pool to offer it to victim client. DHCP server continuously tries to offer an IP address unless it receives the DHCPREQUEST message1 broadcasted by the victim client in 5th step. 4) DHCPOFFER Message by Malicious Client: After sending fake probe reply in previous step, malicious client immediately offers an IP address, IP OFFERED MALICIOUS, to victim client by sending a DHCPOFFER message. IP OFFERED MALICIOUS belongs to the same IP address pool range as con gured on genuine DHCP server. 5) DHCPREQUEST Message by Victim Client: As soon as victim client receives DHCPOFFER message, it sends a DHCPREQUEST message to malicious client in order to request to use IP OFFERED MALICIOUS. Since DHCPREQUEST message is a broadcast message, gen- uine DHCP server also receives it. This message informs genuine DHCP server to stop trying to offer an IP 1DHCPREQUEST message is usually broadcasted by a client in order to inform other DHCP servers within the network that it has been offered an IP address from one of the DHCP servers and other servers must now stop offering IP address to it. address to victim client as it has already been offered an IP address from malicious client. 6) DHCPACK Message by Malicious Client: In re- sponse to the DHCPREQUEST message sent by vic- tim client in previous step, malicious client sends a DHCPACK message con rming the allocation of IP OFFERED MALICIOUS to victim client. Other net- work con guration parameters like default gateway s and DNS server s IP address is also sent in this DHC- PACK message. In order to receive traf c (including DNS queries) coming from and going to victim client, malicious client claims its own IP address as default gateway s and DNS server s IP address. 7) IP Address and Other Network Parameters Con gura- tion by Victim Client: As soon as victim client re- ceives DHCPACK message sent by malicious client in previous step, it con gures its interface with IP OFFERED MALICIOUS and other network param- eters. 8) DNS Query by Victim Client: To resolve a domain name, DN, to corresponding IP address, victim client sends a DNS query with the destination IP address as that of malicious client. 9) DNS Response by Malicious Client: Malicious client checks the category to which DN belongs. a) If DN belongs to nancial or commercial category, malicious client sends forged DNS response so as to redirect victim client to FAKE WEB SERVER IP hosting website exactly similar to DN. b) If it is a simple search engine or educational insti- tution website, malicious client forwards the DNS query to genuine ISP s DNS server for resolution. This is because there is no incentive for malicious client to send forged DNS responses for domains belonging to a search engine or any educational institution. c) ISP s DNS server resolves the query by communi- cating with other DNS servers2 and returns the re- solved IP address, GENUINE WEB SERVER IP, to malicious client. d) Malicious Client nally sends the DNS response back to victim client so as to redirect it to GEN- UINE WEB SERVER IP hosting genuine web- site. B. Comparing Targeted DNS Attack with Other DNS based Attacks Our proposed attack is effective and easier to launch as compared to other DNS based attacks in following way: The proposed targeted DNS spoo ng attack does not in- volve usage of several thousands of computers (zombies) as required in case of DNS ampli cation attack. More- over, proposed attack is much more stealthier than DNS ampli cation attack and DNS query ooding attack as the proposed attack sends just few fake probe responses to DHCP server. This traf c is almost negligible to the traf c generated in case of DNS ampli cation attack and DNS query ooding attack. Kaminsky DNS cache poisoning also generates comparatively large amount of DNS traf c while guessing the correct query identi cation value and source port number that victim nameserver is using. Kaminsky DNS cache poisoning targets a nameserver due to which all those clients which are using the targeted nameserver are affected due to wrong domain name resolution. However, attack proposed in this paper can target even a speci c client also instead of targeting all the clients within the network. In Section III-D, we discuss how malicious client can target a speci c client instead of targeting all the clients at the same time. DNS servers, these days, use source port number and query identi cation value randomization to communicate with root servers and other nameservers. Thus using Kaminsky DNS cache poisoning, it is extremely dif cult to guess the correct source port and query identi cation value before victim nameserver reaches the genuine au- thoritative nameserver. However, there is no such limita- tion in case of proposed attack. C. Comparing Targeted DNS Spoo ng Attack with Rogue DHCP Server based DNS Spoo ng DNS spoo ng can also be performed by con guring a rogue DHCP server [8] within the network and offering IP addresses and other network con guration parameters to victim clients from this server. In this method, since genuine DHCP server is not stopped from offering an IP address, it also sends a DHCPOFFER message to victim client. This leads to a race condition between malicious client s and genuine DHCP server s DHCPOFFER message. As a result, DNS spoo ng is possible only if rogue DHCP server s offer reaches to victim 2For sake of simplicity, we do not show ISP s DNS server s interaction with other nameservers for domain resolution. client earlier than genuine DHCP server s offer. Since it is not always possible, victim client is able to con gure geuine network con guration parameters. This leads to failure of DNS spoo ng attack. Moreover, various detection techniques like [8], [20] raise an alarm in case more than one DHCPOFFER messages are received for a DHCPDISCOVER message. Tar- geted DNS spoo ng attack, on the other hand, prevents the genuine DHCP server from offering IP address due to which no race condition occurs. Thus, DNS spoo ng can be launched effectively without any issue using the proposed method. As a result, the victim client is easily redirected to the desired web server. D. Targeting a Speci c Client Using targeted DNS spoo ng, malicious client can target a speci c client also without affecting other clients. To do so, malicious client rst captures the DHCPDISCOVER message sent by the client to be targeted. Since this message is the broadcast one, malicious client also receives this message. On receiving this message, malicious client sniffs probe request to capture the probe sent by DHCP server for precautionary checking of IP address usage. As soon as malicious client receives the probe, it immediately sends back a probe response to prevent DHCP server from offering IP address to target client. Malicious client further offers IP address and other network parameters to victim client, thereby, completing the attack procedure. In this way, malicious client can easily target a speci c client as well. IV. EXPERIMENTS AND DISCUSSION In order to demonstrate the execution of proposed attack, we created a network setup similar to the one shown in Figure 4. There were few entities within the network setup, a malicious client, few victim clients and a D-Link DIR-600M router having built-in DHCP server. The server was con gured with a pool of 14 IP addresses ranging from 192.168.0.1 to 192.168.0.14. The server used ARP requests3 for probing in order to detect IP address con ict. Depending on the DHCP software implementation, ICMP requests can also be used for probing purpose. Table II shows different DHCP servers and the probe types they use to detect IP address con icts. The malicious and victim clients were running Ubuntu 16.04 and Windows 7 Service Pack 1 operating systems respectively. We con gured an ISC DHCP server [4] on malicious client to offer IP address and other network con guration parameters to victim client. The address pool on this server was also ranging from 192.168.0.1 to 192.168.0.14 so that victim client could communicate with other on-link devices without any issue. However, this DHCP server was con gured to allot malicious client s IP address as default gateway s and DNS server s IP address to victim client. Moreover, we executed two C programs on malicious client in order to launch the proposed attack. First program was used to sniff ARP requests coming from DHCP server s source IP address and also to send 3The vendors of router implemented the DHCP software to use ARP requests instead of ICMP for probing purpose. Internet Router with Built-in DHCP Server WAN Port Malicious Client Victim Clients Fig. 4: Network Setup TABLE II: Different DHCP Servers and the Probe Types Vendor Probe Type Netgear N150 Router (inbuilt DHCP) ARP Request D-Link DIR-600M N150 Router (inbuilt DHCP) ARP Request ISC DHCP server ICMP Ping Request Microsoft Windows Server 2008 ICMP Ping Request spoofed ARP replies. These two modules were implemented as two threads. One thread executed the snif ng module while other thread generated spoofed ARP replies. Second program was used to send either fake or correct DNS response depending on the domain type. To do so, we implemented three threads in this program. First and second threads were used to sniff DNS queries from victim client and send fake DNS responses respectively while third thread was used to communicate with ISP s DNS server for resolving the victim client s DNS query and also to send genuine DNS response back to victim client. Using this setup, we launched the proposed attack by targeting upto 5 victim clients at a time. We created 5 scenarios such that only one victim client is targeted in rst scenario, two victim clients in second scenario and so on. We should notice that malicious client requires at least three messages to target a victim client. These messages are DHCPOFFER, DHCPACK and a fake DNS reply. Along with these messages, malicious client also needs to send fake probe replies to prevent genuine DHCP server from offering an IP address to victim client. From our experiments, we observed that DHCP server could perform maximum of three trials to offer IP address to victim client before it receives DHCPREQUEST message broadcasted by victim client. Thus to prevent DHCP server from offering the IP address, malicious client requires to send upto three fake probe replies. Figure 5 shows the 5 9 14 20 25 0 5 10 15 20 25 30 1 2 3 4 5 Number of Messages Number of Victim Clients Fig. 5: Number of Messages required to Target Different Number of Clients Were you really trying to visit this page?;-) +~~htt~p:/_fi_iti._ac._i~~~-e~I - - - Fig. 6: Victim Host redirected to Another Web Server number of messages to be sent by malicious client in order to target different number of victim clients. Figure 6 shows the screen capture of one of the victim clients that tried to access the domain www.iiti.ac.in. However, it was redirected to another sample web server hosted by us on internet. Thus, we can notice that the proposed attack can successfully deceive a victim client by launching targeted DNS spoo ng attack. V. DETECTION AND PREVENTION In this section, we discuss some popular detection and miti- gation techniques which are relevant to DNS poisoning attack. We also name few known techniques to detect unauthenticated DHCP messages and IP con icts in a local network. A. Mitigating DNS Cache Poisoning Attack To detect forged DNS response, DNSSEC [9] was proposed that involves digitally signing the DNS responses to authenti- cate and protect their integrity. However, DNSSEC does not provide end-to-end encryption due to which techniques like man-in-the-middle can still make victim clients connect to ma- licious hosts [10]. Moreover, DNSSEC signi cantly increases the computational burden, space usage and huge consumption of bandwidth due to large DNS responses. This increased bandwidth consumption due to large responses also opens door for DNS ampli cation attack [10]. Due to these reasons, DNSSEC is still not deployed widely on the internet. Various other cryptographic techniques [15] are proposed to prevent DNS poisoning attacks, however, the limitations like involve- ment of computationally expensive tasks still exist which hinder their wider adoption. In [19], authors proposed an entropy-based detection scheme that can detect the poisoning attack only if a single DNS cache server is attacked. Another technique [23] can detect the distributed DNS poisoning as well. These approaches are based on the assumption that the IP entropy sequences are stationary under normal cases. However, this assumption does not hold true for different time periods of a day [24]. In another work [24], authors proposed a detection method for the case that the sequence of entropy is non-stationary and follows a dynamic behaviour. In particular, authors rst modeled the entropy sequence by a state space equation and then used kalman lter for the detection purpose. Few other schemes [26], [13] are proposed which monitors the DNS traf c on DNS resolvers. All these techniques are proposed in order to detect attacks that involve poisoning DNS cache at server side. However, we target the client itself where the DNS query originates. As a result, the resultant DNS traf c received at server side possesses similar characteristic as that of normal DNS traf c. Thus, it is dif cult to detect the proposed attack using these techniques. B. Detecting Unauthenticated DHCP messages and IP Con- icts Cryptographic techniques [11] can prevent identity spoo ng based attacks but they are rarely implemented due to imple- mentation complexity. DHCP Snooping [3] lters DHCPOF- FER and DHCPACK coming from an untrusted interface of switch, however, they are ineffective in wireless networks. Authors in [14], [22] proposed schemes to detect IP address con icts by comparing normal DHCP traf c pro le with the pro les generated in different time windows. Since the proposed attack does not result into high DHCP traf c, it is dif cult to detect the attack using these techniques. VI. CONCLUSION DNS has been a critical protocol of the internet architecture since last three decades. Vulnerabilities in the protocol are ex- tensively researched in order to make the protocol more robust. Due to this, attacks like DNS poisoning and DNS ampli cation has become dif cult to launch and can be detected easily. In this paper, we proposed a targeted DNS spoo ng attack that exploits vulnerability present in DHCP server-side IP address con ict detection technique. We showed that the proposed attack is easier to launch and much stealthier as compared to previously known attacks. We discussed how known detection and mitigation strategies are ineffective to counter the attack. We hope that this work will motivate researchers in the security community to develop robust detection and mitigation techniques in order to detect the proposed attack and overall make DNS a secure protocol. REFERENCES [1] An Illustrated Guide to the Kaminsky DNS Vulnerability. http://unixwiz.net/techtips/iguide-kaminsky-dns-vuln.html. [2] Cloud are, Inc. https://www.cloud are.com/. [3] DHCP Snooping. http://www.cisco.com/c/en/us/td/docs/switches/lan/ catalyst6500/ios/12-2SX/con guration/guide/book/snoodhcp.html. [4] ISC DHCP. https://www.isc.org/downloads/dhcp/. [5] Saddam. https://github.com/OffensivePython/Saddam. [6] Secure the Server Cache Against Names Pollution. https://technet.microsoft.com/en-us/library/cc772349(v=ws.11).aspx. [7] Tsunami - DNS Ampli cation Attack Tool. https://www.infosec- ninjas.com/tsunami. [8] M. Agarwal, S. Biswas, and S. Nandi. Discrete Event System Frame- work for Fault Diagnosis with Measurement Inconsistency: Case Study of Rogue DHCP Attack. IEEE/CAA Journal of Automatica Sinica, PP(99):1 18, 2017. [9] R. Arends, R. Austein, M. Larson, D. Massey, and S. Rose. Protocol Modi cations for the DNS Security Extensions. RFC 4035, 2005. [10] A. Cowperthwaite and A. Somayaji. The Futility of DNSSec. In Annual Symposium Information Assurance (ASIA), 2010. [11] K. de Graaf, J. Liddy, P. Raison, J. Scano, and S. Wadhwa. Dynamic Host Con guration Protocol (DHCP) Authentication using Challenge Handshake Authentication Protocol (CHAP) Challenge, 2013. US Patent 8,555,347. [12] R. Droms. Dynamic Host Con guration Protocol. RFC2131, 1997. [13] A. Herzberg and H. Shulman. Unilateral Antidotes to DNS Poisoning. Security and Privacy in Communication Networks, pages 319 336, 2012. [14] N. Hubballi and N. Tripathi. A Closer Look into DHCP Starvation Attack in Wireless Networks. Computers & Security, 65:387 404, 2017. [15] M. A. Hussain, H. Jin, Z. A. Hussien, Z. A. Abduljabbar, S. H. Abbdal, and A. Ibrahim. Enc-DNS-HTTP: Utilising DNS Infrastructure to Secure Web Browsing. Security and Communication Networks, 2017, 2017. [16] D. Kaminsky. Its the End of the Cache As We Know It. In Black Hat Conference, 2008. [17] D. C. MacFarland, C. A. Shue, and A. J. Kalafut. The Best Bang for the Byte: Characterizing the Potential of DNS Ampli cation Attacks. Computer Networks, 116:12 21, 2017. [18] P. Mockapetris. Domain Names - Implementation and Speci cation. RFC 1035, 1987. [19] Y. Musashi, M. Kumagai, S. Kubota, and K. Sugitani. Detection of Kaminsky DNS Cache Poisoning Attack. In 2011 4th International Conference on Intelligent Networks and Intelligent Systems, pages 121 124, 2011. [20] R. Spacil, J. Ikonen, and J. Porras. Forcing Usage Rules in Public Wireless LANs. In 27th Annual IEEE Conference on Local Computer Networks, 2002. Proceedings. LCN 2002., pages 415 420, 2002. [21] N. Tripathi and N. Hubballi. Exploiting DHCP Server-side IP Address Con ict Detection: A DHCP Starvation Attack. In 2015 IEEE Inter- national Conference on Advanced Networks and Telecommuncations Systems (ANTS), pages 1 3, 2015. [22] N. Tripathi and N. Hubballi. A Probabilistic Anomaly Detection Scheme to Detect DHCP Starvation Attacks. In 2016 IEEE International Conference on Advanced Networks and Telecommunications Systems (ANTS), pages 1 6, 2016. [23] H. Wu, X. Dang, L. Wang, and L. He. Information Fusion-based Method for Distributed Domain Name System Cache Poisoning Attack Detection and Identi cation. IET Information Security, 10:37 44, 2016. [24] H. Wu, X. Dang, L. Zhang, and L. Wang. Kalman Filter based DNS Cache Poisoning Attack Detection. In 2015 IEEE International Conference on Automation Science and Engineering (CASE), pages 1594 1600, 2015. [25] S. T. Zargar, J. Joshi, and D. Tipper. A Survey of Defense Mechanisms Against Distributed Denial of Service (DDoS) Flooding Attacks. IEEE Communications Surveys & Tutorials, 15(4):2046 2069, 2013. [26] B. Zdrnja, N. Brownlee, and D. Wessels. Passive Monitoring of DNS Anomalies. In Proceedings of the 4th International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment, DIMVA 07, pages 129 139. Springer-Verlag, 2007. View publication stats