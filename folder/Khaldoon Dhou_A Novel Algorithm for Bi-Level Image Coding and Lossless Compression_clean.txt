A Novel Algorithm for Bi-Level Image Coding and Lossless Compression based on Virtual Ant Colonies Matthew Mouring1, Khaldoon Dhou2 and Mirsad Hadzikadic3 1KPIT Extended PLM, Raleigh, NC, U.S.A. 2Department of Mathematics and Computer Science, University of Missouri, St. Louis, U.S.A. 3Department of Software and Information Systems, University of North Carolina at Charlotte, U.S.A. Keywords: Ant Colonies, Pheromone, Proximity, Binary Images, Arithmetic Coding. Abstract: Ant colonies emerged as a topic of research and they are applied in different elds. In this paper, we develop an algorithm based on the concept of ant colonies and we utilize if for image coding and compression. To apply the algorithm on images, we represent each image as a virtual world which contains food and routes for ants to walk and search for it. Ants in the algorithm have certain type of movements depending on when and where they nd food. When an ant nds food, it releases a pheromone, which allows other ants to follow the source of food. This increases the likelihood that food areas are covered. The chemical evaporates after a certain amount of time, which in turn helps ants move to cover another food area. In addition to the pheromone, ants use proximity awareness to detect other ants in the surrounding, which can help ants cover more food areas. When an ant nds food, it moves to that location and the movement and coordinates are recorded. If there is no food, an ant moves randomly to a location in the neighborhood and starts searching. We ran our algorithm on a set of 8 images and the empirical results showed that we could outperform many techniques in image compression including JBIG2. 1 INTRODUCTION In reality, ants are good at identifying the nearest path to the food and readjust to variations in their surroun- dings (Beckers et al., 1992). It is well known that an ant drops a chemical while searching and ants choose to follow a route which has a high concentration of the chemical. This nature of movement and commu- nication in an ant colony explains how ants search and identify the sources of food in a short amount of time. This behavior of ants helped researchers solve many real-life problems and has been explored by scien- tists from different perspectives. Mullen et al. (2009) reviewed the literature of ant colony algorithms and their applications. A classical example is applying the structure of ant colonies to the traveling salesman problem (Maniezzo, 1992). This work was subject to further exploration and development in many elds of research (Gambardella and Dorigo, 2015; Dorigo and Gambardella, 2016; Neto and Godinho Filho, 2013). For example, chemicals released by ants when they nd a source of food were helpful in nding out the optimum routes for evacuation during a tsunami (For- cael et al., 2014). Similarly, Li et al. (2008) used an ant colony algorithm to shorten the time of coding, which reduced the amount of searching. In the same vein, Jaferzadeh et al. (2009) developed a method for fractal image compression which forces ants to move to certain regions in the image, the purpose of which is to expedite the encoding process. Although there has been a tremendous amount of work which utilizes ant colonies in different appli- cations, our vast research did not nd any work in applying ant colonies in lossless image compression for binary images. The contribution of this paper is to design an ant colony algorithm derived from the behavior of real ants; to design ant movement rules which are fed into the algorithm; to utilize the power of arithmetic encoding algorithm in ant movement to provide a higher compression ratio; and to apply it on images simulated as virtual environments which con- tain ants, food and routes for ants to move and search for food. The algorithm in this research is meant to provide a new approach on how ant colonies can be used in binary image coding and compression. This paper is organized as follows: Section 2 re- views related work in ant colonies, image compres- sion and coding; section 3 overviews the proposed Mouring M., Dhou K. and Hadzikadic M. A Novel Algorithm for Bi-Level Image Coding and Lossless Compression based on Virtual Ant Colonies. DOI: 10.5220/0006688400720078 In Proceedings of the 3rd International Conference on Complexity, Future Information Systems and Risk (COMPLEXIS 2018), pages 72-78 ISBN: 978-989-758-297-4 Copyright c 2018 by SCITEPRESS Science and Technology Publications, Lda. All rights reserved algorithm, which is based on the rules in an ant co- lony and how that is applied in image compression; in section 4, we present our results and compare our scheme with other algorithms in the image processing community such as JBIG1, JBIG2; section 5 provides summary and conclusions. 2 RELATED WORK In this section, we review related literature in agent- based modeling and ant colonies. Furthermore, we overview related work which exists in image coding and compression domain. 2.1 Agent based Modeling Agent based modeling has attracted much attention in the research community. It allows scientists build simulations to gain an understanding of real life sce- narios. A remarkable achievement in the agent-based modeling domain is the development of Netlogo, a programming environment developed in Northwes- tern University (Wilensky, 1999). Netlogo offers many agent-based models and it has been extensi- vely used as a simulation tool in research. For ex- ample, Hodzic et al. (2016) developed parameters for an ecological model of predator and prey as allowed by Netlogo. In their work, predator and prey agents have certain movements the main goal of which is to simulate a mathematical formula. One of the models offered by Netlogo is the biolo- gical model of ants (Wilensky, 1997). In this model, ants have certain rules of movement while walking to search for food. This particular set of movement rules was a basis for many research projects in vari- ous domains. For example, Onan et al. (2017) pre- sented an enhanced algorithm for ant clustering that uses heuristic methods. In another study, Lin et al. (2017) utilized Ant Colony Optimization in solving problems of test construction heuristics. With a simi- lar objective, Jacknoon and Abido (2017) used Ant Colony Optimization for tuning certain parameters the purpose of which is to preserve the vertical stand of the Inverted Pendulum in speci c circumstances. Ant colonies were also utilized in solving traf c pro- blems (Kponyo et al., 2016; Jabbarpour et al., 2014). The concept of ant colonies have been applied in various image processing applications (Baterina and Oppus, 2010; Dorrani and Mahmoodi, 2016; Han and Shi, 2007; Kaur and Kaur, 2016; Liu and Fang, 2015; Nayak and Dash, 2016; Pruthi and Gupta, 2017; Ran- jan et al., 2014; Sharma and Chopra, 2016; Tian et al., 2008; Zhang and Peng, 2016). For instance, Tian et al. (2008) utilized the concept of pheromone in an ant co- lony to represent the corner information based on the movements of ants in an image. In addition, Shen et al. (2016) used the concept of ant colonies cou- pled with a genetic algorithm to reduce noise in ima- ges. Although ant movements have been widely used in image processing research, the extensive literature review revealed very few studies on utilizing ant co- lonies in image compression. An example is by Li et al. (2008) who used ant colony algorithm to mini- mize the amount of search and their algorithm provi- des higher compression ratio than other block-based partition methods. Similarly, Yan et al. (2007) propo- sed a hybrid ant colony algorithm that relies on scale compression. A major advantage of our research is the design af ant colony algorithm for the purpose of binary image compression, which is a new research direction as the extensive literature review revealed. 2.2 Coding and Compression Similar movements to ants have their grounds in image processing. This began by the chain coding developed by Freeman (1961), which is an encoding strategy that utilizes the directions between pixels in an image. This strategy is expressed by a combination of eight possible directions from 0 to 7, where each di- rection is represented by 3 bits. This method was sub- jected to extensive enhancement and exploration over the years. For example, Bons and Kegel (1977) deve- loped the Differential Chain Code which uses Huff- man coding on the differences between the consecu- tive codes obtained via Freeman chain code. Further development of DCC included further reduction of the scope of the outcomes by 50% via taking the mo- dulus of eight (Hwang et al., 2001). Bribiesca (1999) developed the vertical chain code (VCC) for shape en- coding. Their method utilizes three numbers to repre- sent the boundaries of a shape: 1 for the outside ed- ges, 3 for inside edges and 2 otherwise. The previous methods can be used for image compression via enco- ding the shapes or binary contours and using the code as a representation. Later, Liu and Zalik (2005) de- veloped a chain code based on the relative angles be- tween elements in the chain and used Huffman code to compress the nal string. Although their method showed an improvement, its limitation is to use the Huffman coding, which does not always generate the highest compression ratio. Zahir and Dhou (2007) de- veloped a new chain code for binary image compres- sion which depends on the relative directions between the adjacent chain codes and the grouping of certain codes. Recently, Zhao et al. (2017) introduced a new method to get the connected components in bi-level images which retrieves the chain code and identify the boundaries. They concluded that the algorithm enhances the complexity and the usage of memory. Along with improvements, the subject of chain code has been the basis of many applications. For exam- ple, Decker et al. 2017 introduced a new tracking me- chanism to be used in endoscopy which overcomes many obstacles in soft surgery. Additionally, Ngan et al. 2017 utilized 3D chain codes in symbolizing the routes of human movement. Advanced techniques of image compression have been explored by researchers in image processing domain. A notable achievement that has drawn much attention in lossless data compression is arithmetic encoding (Sayood, 2012). It uses small number of bits to encode symbols of higher frequency and more bits to encode symbols that exist less. This, in turn, reduces the number of bits that represent the whole string. This method is extensively used in image pro- cessing research. For example, Saarinen (2017) used arithmetic coding, coupled with blinding counterme- asures in cryptography to reduce the size of the sig- natures. Similarly, Mondal and Sarkar (2017) used arithmetic coding to compress a set of vowels. More- over, Shahriyar et al. (2016) proposed a lossless depth coding scheme based on a binary tree and created blocks that were coded using context based arithmetic coding. 3 METHOD One way to envision how the algorithm works on bi- level images is to represent the image as a virtual world which contains ants, food and routes where ants can walk and collect food. Since we have binary images, we assume that the 1 pixels represent cells that contain food, while 0 pixels represent the routes where ants can walk and collect food. The coordina- tes of the rst location and the movement of ants for the purpose of food collection are recorded and can be used to reconstruct an image back. The algorithm consists of the following steps: Step 1: Convert the image to a food-route represen- tation where pixels with the value 1 are replaced with food and pixels with value 0 are replaced with routes. An example is provided in Figure 1. Step 2: Determine the coordinates of the image, so that ants move within the image boundaries and their movements are recorded. Step 3: Drop ants randomly within the boundaries of the image. Each time an ant is dropped onto the image, the algorithm checks that it does not land on top of another ant. If it lands, it is picked back up, and dropped to a new random location on the image until it is stays in a location where it is not dropped over another ant. Step 4: After all ants are properly dropped on an image, each ant checks to see if it was dropped over a food cell or not. If an ant is not dropped over a food location, it starts searching for a food cell. If an ant is dropped over a food cell, or if it reaches a food cell, it records the location and looks in the neighborhood for a cell that contains food. If an ant nds a neig- hboring location with food, it moves to that location and records the movement according to normal mo- vement (See Figure 2). Normal movement consists of four possible directions: top, down, right and left. An ant will choose the normal movement in two ca- ses: If an ant was dropped over a food cell and nds a cell in the neighborhood which contains food If an ant moves from a route location to a food location and is there is a neighborhood cell which contains food Only moves to collect food were recorded because they allow reconstructing the image back. Step 5: Besides recording coordinate locations when an ant is over a food cell, an ant also sets off a phero- mone so that other ants in the area may be drawn to that smell. Over time the smell will lessen until it is gone completely. Figure 3 shows an example of pheromone density released by two ants over cells of food. Each ant releases pheromone in its cell and the eight cells around it. Some cells in the virtual world have a higher pheromone density because they are lo- cated in the neighborhood of two ants. Pheromone dissipates after the second movement of an ant. Figure 4 provides an example pheromone dissipation. An ant is moving to collect food cells while the movement was recorded. Figure 4 (a) shows the initial location of an ant, where it sets the phero- mone level around it. Figure 4 (b) shows the rst mo- vement, where the ant sets a new pheromone level in the surrounding, while the pheromone level that was set in the previous movement (Figure 4 (a)) starts to diminish. Figure 4 (c) shows a new pheromone den- sity in the surrounding cells while some cells with pheromone levels from previous movements have less or no pheromone levels. Step 6: After the rst normal movement, an ant se- arches the neighborhood looking for a cell which has food. If found, the ant chooses to move using a re- lated movement . A related movement depends on the previous movement and can have ve possibi- lities: Advance , Advance Left , Advance Right , Right and Left (Figure 5). For example, if the mo- 1 0 0 0 0 0 0 0 0 1 1 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 0 1 0 0 1 0 0 0 0 1 1 route food Figure 1: An image segment converted to a food-route reresentation. 1 pixels are converted to food and 0 pixels are converted to routes. 1 0 0 0 0 0 0 0 0 1 1 1 0 0 0 1 0 0 1 0 0 0 0 1 1 Right Left Top Down (b) (a) Figure 2: Normal ant movement. 1 0 0 0 0 0 0 0 0 1 1 1 0 0 0 1 0 0 1 0 0 0 0 1 1 route food X X X X X X XX X X X X X X XX X pheromone density ant Figure 3: Example of pheromone density. Some cells have a higher concentration of pheromone because they are within the neighborhood of two ants. vement is similar to the previous movement, the di- rection will be recorded as Advance . If the mo- vement is to the right, the direction is recorded as Right and so on. Figure 6 shows an example of ant movement. An ant starts from a cell which has food and there is food in a cell in the 8-cell neighborhood. Thus, ant decides to have a normal movement . After that, ant decides to choose related movement in the subsequent food cells utilizing ve directions: Ad- vance , Advance Right , Advance Left , Right and Left . Ants make a decision to move to a neighboring cell based on ve factors: If a neighboring cell has food If a pheromone exists in the neighboring cell If the cell has not been explored by an ant before. An ant only chooses to move over an explored lo- cation, if necessary If the location has less ant density. Ants use prox- imity awareness to detect the density of ants in the neighborhood. Figure 7 shows that some cells have a higher density because they are located in a shared neighborhood. In a related movement , an ant chooses Ad- vance direction to move to a new food location, if possible. Otherwise, it chooses a random loca- tion which has food. Step 7: During an ant movement, the algorithm re- cords each 10 consecutive Advance movements as one movement called Huge Advance . In case the algorithm detects less than 10 and more than 4 conse- cutive Advance movements, it encodes the rst ve as one movement called Intermediate Advance mo- vement. The reason why we chose to have these two extra movements is to obtain a higher compression ratio when we use the arithmetic coding algorithm to compress the string resulting from the movement of ants. Step 8: Arithmetic coding (Sayood, 2012) was used to compress the string where variables which have a higher frequency are represented by less bits to save space. 4 RESULTS AND DISCUSSION To evaluate our method, we applied our algorithm on 8 images obtained from Zhou (2007). Then, we com- pared the results with other standard algorithms: G3, G4, JBIG1 and JBIG2. To this end, we looked at the number of bits generated by our algorithm to repre- sent the chain of ant movements after the arithmetic coding is applied as described in the method section and compared that with the number of bits resulting from other algorithms as shown by Zhou (2007). Ta- ble 1 shows the results on the eight images we used 1 0 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 1 0 0 0 0 1 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 1 1 (a) (b) (c) 1 0 0 1 1 (d) Figure 4: An example of changing pheromone density. Darker cells indicate a higher density of pheromone. 1 0 0 0 0 0 0 0 0 1 1 1 0 0 0 1 0 0 1 0 0 0 0 1 1 Advance Right Advance Advance Left Right Left (b) (a) Figure 5: Related ant movement. 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 Right Advance Left Advance Right 8 Advance Advance Left Right Advance Right Figure 6: Example of ant movement, which is a mixture of normal and related movements. Initially, since the begin- ning is from a food cell, the ant decides to utilize normal movement . After that, ant starts to apply a related mo- vement . for testing. For each algorithm, the compression ratio of the images was computed as the following: Compression Ratio = Size before compression Size after compression (1) The compression ratio of the eight images in the ant colony algorithm is 15.85 while it was 4.65, 7.64, 9.83 and 10.18 for G3, G4, JBIG1 and JBIG2, re- spectively. X X X X X X X XX X XX X X X X Figure 7: Example of proximity awareness used by ants as part of their decision to make a movement. An ant prefers to move to a location with less density of ants. Some cells in the gure have more density than others because they are in the neighborhood of two ants. 5 SUMMARY AND CONCLUSION In this paper, we have presented a new method for image coding and lossless compression. Our met- hod works for bi-level images and allows the image to be reconstructed back. The method utilizes ant co- lony rules, coupled with arithmetic encoding in bi- level compression. The experimental results show that the proposed method is superior to many existing methods in the literature and produces a higher com- pression ratio than many methods such as JBIG1 and JBIG2. Additionally, the advantage of our method is that it is simpler to implement compared to the family of JBIG. Future work can be utilizing the rules in ant colo- nies in different image processing applications. One application might be designing new algorithms that help researchers classify images based on their com- ponents via the movement rules of ants. Furthermore, this research can be expanded to investigate other ap- plications on imaging such as retrieval and indexing. Table 1: Number of bits in the string representing the compressed movements of virtual ants used in the algorithm as compared to the number of bits resulting from other methods existing in the literature (Bhaskaran and Konstantinides, 1997; Ono et al., 2000; Zhou, 2007). Image Original G3 G4 JBIG1 JBIG2 Ours Image 1 65280 26048 19488 15176 15064 8556 Image 2 202320 29856 12208 8648 8616 4892 Image 3 187880 26000 11184 8088 8072 4342 Image 4 81524 14176 6256 5080 5064 2591 Image 5 40000 11712 5552 5424 5208 2314 Image 6 96472 21872 9104 7336 7328 3935 Image 7 414720 102208 81424 62208 58728 43966 Image 8 83600 20064 8192 7200 6984 3319 Total 1171796 251936 153408 119160 115064 73915 REFERENCES Baterina, A. V. and Oppus, C. (2010). Image edge detection using ant colony optimization. WSEAS Transactions on Signal Processing, 6(2):58 67. Beckers, R., Deneubourg, J., and Gross, S. (1992). Trail and u-turns in the selection of the shortest path by the ants. J. of Theoretical Biology, 159:397 415. Bhaskaran, V. and Konstantinides, K. (1997). Image and video compression standards: algorithms and archi- tectures, volume 408. Springer Science & Business Media. Bons, J. and Kegel, A. (1977). On the digital processing and transmission of handwriting and sketching. In Procee- dings of EUROCON, volume 77, pages 880 890. Bribiesca, E. (1999). A new chain code. Pattern Recogni- tion, 32(2):235 251. Decker, R. S., Shademan, A., Opfermann, J. D., Leonard, S., Kim, P. C., and Krieger, A. (2017). Biocom- patible near-infrared three-dimensional tracking sy- stem. IEEE Transactions on Biomedical Engineering, 64(3):549 556. Dorigo, M. and Gambardella, L. (2016). Ant-q: A rein- forcement learning approach to the traveling salesman problem. In Proceedings of ML-95, Twelfth Intern. Conf. on Machine Learning, pages 252 260. Dorrani, Z. and Mahmoodi, M. (2016). Noisy images edge detection: Ant colony optimization algorithm. Jour- nal of AI and Data Mining, 4(1):77 83. Forcael, E., Gonz alez, V., Orozco, F., Vargas, S., Pan- toja, A., and Moscoso, P. (2014). Ant colony optimization model for tsunamis evacuation routes. Computer-Aided Civil and Infrastructure Engineer- ing, 29(10):723 737. Freeman, H. (1961). On the encoding of arbitrary geome- tric con gurations. IRE Transactions on Electronic Computers, (2):260 268. Gambardella, L. M. and Dorigo, M. (2015). Coupling ant colony system with local search. Han, Y. and Shi, P. (2007). An improved ant colony al- gorithm for fuzzy clustering in image segmentation. Neurocomputing, 70(4):665 671. Hodzic, M., Selman, S., and Hadzikadic, M. (2016). Com- plex ecological system modeling. Periodicals of En- gineering and Natural Sciences (PEN), 4(1). Hwang, Y.-T., Wang, Y.-C., and Wang, S.-S. (2001). An ef cient shape coding scheme and its codec design. In Signal Processing Systems, 2001 IEEE Workshop on, pages 225 232. IEEE. Jabbarpour, M. R., Malakooti, H., Noor, R. M., Anuar, N. B., and Khamis, N. (2014). Ant colony optimisa- tion for vehicle traf c systems: applications and chal- lenges. International Journal of Bio-Inspired Compu- tation, 6(1):32 56. Jacknoon, A. and Abido, M. (2017). Ant colony based lqr and pid tuned parameters for controlling inverted pen- dulum. In Communication, Control, Computing and Electronics Engineering (ICCCCEE), 2017 Internati- onal Conference on, pages 1 8. IEEE. Jaferzadeh, K., Shakeri, M., and Gholami, S. (2009). Ant colony algorithm for fractal image compression based on edge property. In Soft Computing, Computing with Words and Perceptions in System Analysis, Decision and Control, 2009. ICSCCW 2009. Fifth International Conference on, pages 1 4. IEEE. Kaur, S. and Kaur, P. (2016). An edge detection technique with image segmentation using ant colony optimiza- tion: A review. In Green Engineering and Technolo- gies (IC-GET), 2016 Online International Conference on, pages 1 5. IEEE. Kponyo, J., Nwizege, K., Opare, K., Ahmed, A., Hamdoun, H., Akazua, L., Alshehri, S., and Frank, H. (2016). A distributed intelligent traf c system using ant colony optimization: A netlogo modeling approach. In Sys- tems Informatics, Modelling and Simulation (SIMS), International Conference on, pages 11 17. IEEE. Li, J., Yuan, D., Xie, Q., and Zhang, C. (2008). Fractal image compression by ant colony algorithm. In Young Computer Scientists, 2008. ICYCS 2008. The 9th In- ternational Conference for, pages 1890 1894. IEEE. Lin, Y., Gong, Y.-J., and Zhang, J. (2017). An adaptive ant colony optimization algorithm for constructing cogni- tive diagnosis tests. Applied Soft Computing, 52:1 13. Liu, X. and Fang, S. (2015). A convenient and robust edge detection method based on ant colony optimization. Optics Communications, 353:147 157. Liu, Y. K. and Zalik, B. (2005). An ef cient chain code with huffman coding. Pattern Recognition, 38(4):553 557. Maniezzo, A. C. M. D. V. (1992). Distributed optimization by ant colonies. In Toward a Practice of Autonomous Systems: Proceedings of the First European Confe- rence on Arti cial Life, page 134. Mit Press. Mondal, I. and Sarkar, S. J. (2017). Basic arithmetic co- ding based approach to compress a character string. In Proceedings of the 5th International Conference on Frontiers in Intelligent Computing: Theory and Appli- cations, pages 31 38. Springer. Mullen, R. J., Monekosso, D., Barman, S., and Remagnino, P. (2009). A review of ant algorithms. Expert systems with Applications, 36(6):9608 9617. Nayak, M. and Dash, P. (2016). Edge detection impro- vement by ant colony optimization compared to tradi- tional methods on brain mri image. Communications on Applied Electronics, 5(8):19 23. Neto, R. T. and Godinho Filho, M. (2013). Literature review regarding ant colony optimization applied to schedu- ling problems: Guidelines for implementation and di- rections for future research. Engineering Applications of Arti cial Intelligence, 26(1):150 161. Ngan, P. T. H., Hochin, T., and Nomiya, H. (2017). Si- milarity measure of human body movement through 3d chaincode. In Software Engineering, Arti cial In- telligence, Networking and Parallel/Distributed Com- puting (SNPD), 2017 18th IEEE/ACIS International Conference on, pages 607 614. IEEE. Onan, A., Bulut, H., and Korukoglu, S. (2017). An im- proved ant algorithm with lda-based representation for text document clustering. Journal of Information Science, 43(2):275 292. Ono, F., Rucklidge, W., Arps, R., and Constantinescu, C. (2000). Jbig2-the ultimate bi-level image coding stan- dard. In Image Processing, 2000. Proceedings. 2000 International Conference on, volume 1, pages 140 143. IEEE. Pruthi, J. and Gupta, G. (2017). Metaheuristics: Modeling variant of ant colony optimization for image edge de- tection using self adaptive approach. In Communica- tion and Computing Systems: Proceedings of the In- ternational Conference on Communication and Com- puting Systems (ICCCS 2016), Gurgaon, India, 9-11 September, 2016, page 31. CRC Press. Ranjan, V., Pandey, A., and Joshi, P. C. (2014). Edge de- tection in image corrupted by gaussian noise using ant colony optimization. matrix, 3(9). Saarinen, M.-J. O. (2017). Arithmetic coding and blin- ding countermeasures for lattice signatures. Journal of Cryptographic Engineering, pages 1 14. Sayood, K. (2012). Introduction to data compression. Ne- wnes. Shahriyar, S., Murshed, M., Ali, M., and Paul, M. (2016). Lossless depth map coding using binary tree based de- composition and context-based arithmetic coding. In Multimedia and Expo (ICME), 2016 IEEE Internatio- nal Conference on, pages 1 6. IEEE. Sharma, K. and Chopra, V. (2016). Design and implemen- tation aco based edge detection on the fusion of hue and pca. In Computational Intelligence in Data Mi- ningVolume 1, pages 159 169. Springer. Shen, C., Wang, D., Tang, S., Cao, H., and Liu, J. (2016). Hybrid image noise reduction algorithm based on ge- netic ant colony and pcnn. The Visual Computer, pa- ges 1 12. Tian, J., Yu, W., and Xie, S. (2008). An ant colony optimi- zation algorithm for image edge detection. In Evolu- tionary Computation, 2008. CEC 2008.(IEEE World Congress on Computational Intelligence). IEEE Con- gress on, pages 751 756. IEEE. Wilensky, U. (1997). Netlogo ants model. http://ccl.northwestern.edu/netlogo/models/ants, Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL. Wilensky, U. (1999). Netlogo. http://ccl.northwestern.edu/netlogo/, Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL. Yan, J.-F., Li, N., Li, W.-H., and Shi, H.-B. (2007). Hybrid ant colony algorithm based on scale compression. In Machine Learning and Cybernetics, 2007 Internatio- nal Conference on, volume 2, pages 885 889. IEEE. Zahir, S. and Dhou, K. (2007). A new chain coding ba- sed method for binary image compression and recon- struction. Picture Coding Symposium, pages 1321 1324. Zhang, C. and Peng, H. (2016). Image edge detection based on hybrid ant colony algorithm. Natsional nyi Hirny- chyi Universytet. Naukovyi Visnyk, (1):138. Zhao, X., Zheng, J., and Liu, Y. (2017). A new algorithm of shape boundaries based on chain coding. In ITM Web of Conferences, volume 12, page 03005. EDP Scien- ces. Zhou, L. (2007). A new highly ef cient algorithm for los- sless binary image compression. ProQuest.