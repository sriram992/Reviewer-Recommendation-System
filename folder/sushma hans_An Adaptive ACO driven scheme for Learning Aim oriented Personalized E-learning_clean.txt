SUSHMA HANS et al.: AN ADAPTIVE ACO-DRIVEN SCHEME FOR LEARNING AIM ORIENTED PERSONALIZED E-LEARNING DOI: 10.21917/ijsc.2014.0121 850 AN ADAPTIVE ACO-DRIVEN SCHEME FOR LEARNING AIM ORIENTED PERSONALIZED E-LEARNING Sushma Hans1, S. Chakraverty2 and Aditya Bindal3 Division of Computer Engineering, Netaji Subhas Institute of Technology, India E-mail: 1sushma.nsit@gmail.com, 2apmahs.nsit@gmail.com, 3adityabindal1991@gmail.com Abstract The e-learning paradigm is now a well-established vehicle of modern education. It caters to a wide spectrum of students with diverse backgrounds who enroll with their own learning aims. A core challenge under this scenario is to generate personalized learning paths so that each student can achieve her learning aim most effectively. Prior works used static attributes such as prior knowledge level, learning ability, browsing preferences, learning style etc. to generate personalized learning paths. In this paper, we take an entirely new route by taking into account the continuous improvement of a learner in the light of her own learning aim, to redefine her learning path at each level of the course. We introduce the concept of personalized examination system that systematically evaluates the dynamic learning ability of every student according to her pre-set goals. The proposed intelligent e-learning system uses Ant Colony Optimization to iteratively optimize the forward learning paths. Experimental results reveal that the system is able to tap a student s improved learning ability to choose more difficult paths that contribute highly towards her own aims. We demonstrate that the overall learning success of weaker students doubles as compared to statically generated paths while there is considerable improvement of 50% in the learning success for average students as well. This clearly indicates that our approach gives realistic benefits to initially weak students who gradually evolve as the course progresses. Keywords: Personalized e-Learning, Learning Aims, Ant Colony Optimization, Dynamic Learning Ability, Learning Success 1. INTRODUCTION The role of e-learning in modern education has grown significantly. As students and teachers are not constrained to be present at a particular location at the same time, the learning process can be carried out at an individual s own pace in an any- place, any-time mode. Attractive features such as multimedia presentations, adaptive navigational support, and self-assessment tests are incorporated to aid effective learning [1]-[6]. In order to fully realize the potential of self-paced learning in e-learning offerings, a core challenge that must be tackled is to create tailor-made learning paths for each and every learner based on her own educational goals and constraints. Current works tap the static learning attributes of students such as their pre-determined knowledge level, learning ability, learning style, and browsing behavior to offer personalized services [2], [3], [4], [7], [8], [9], [10]. Prior works have largely ignored the fact that there are incremental improvements in the learning ability of a student as she proceeds in the course. Moreover, in an e- learning environment, every student enrolls with her own specific objective in mind. For example, a student with research interests should explore recent innovations and be able to bring in new ideas whereas another student whose purpose is to appear in an interview should focus on comprehensive coverage of basic concepts. In sharp contrast with previous e-learning approaches, we recognize the fact that a student s learning ability is neither a fixed parameter nor can it be measured uniformly for all students. Rather, a student evolves to sharpen her grasping power continuously. Any e-learning system must incorporate a mechanism to assess such improvements, in the context of her preset goals. The main contributions of our work are summarized below: (i) All aspects of a student s involvement with a course is aligned with her pre-specified Learning Aim (LA). We introduce the innovative idea of personalized examination which is designed and evaluated for each student in the context of her own LA. Furthermore, the system consciously selects those topics, learning objects and perspectives for each student, that are more relevant for achieving her desired LA. (ii) We propose and develop the Dynamic Learning Ability Based E-Learning System (D-LABELS) which actively leverages the benefits of continuous improvements achieved by a student. We introduce a new metric, the Learning-Aim oriented dynamic learning ability to quantify this varying personal trait. (iii) We employ the Ant Colony Optimization (ACO) meta- heuristic to generate dynamically a new optimized future learning sub-path at each stage of the learning process. ACO maximizes the depth of learning as well the coverage of topics with minimum difficulty under given time constraints. The rest of the paper is organized in the following manner. In section 2, we review the current approaches to implement adaptive e-learning systems. Section 3 explains the e-learning model and its components. Section 4 elucidates the overall architecture of D-LABELS and the ACO algorithm with its objective and constraints. We evaluate experimental results in section 5. We conclude our work in section 6 giving directions for future work. 2. PRIOR WORK The literature contains a body of work on adaptive e-learning systems that achieve personalization in terms of learners fixed capabilities, behaviors and preferences. In a recent work reported in [1], Kardan et. al, propose a two-step process to construct an adaptive learning path called ACO-Map. In the first step, the system calculates a similarity key using k-means clustering based on users familiarity with the concepts. In the second step, it invokes ACO in combination with concept map to ISSN: 2229-6956(ONLINE) ICTACT JOURNAL ON SOFT COMPUTING: SPECIAL ISSUE ON DISTRIBUTED INTELLIGENT SYSTEMS AND APPLICATIONS, OCTOBER 2014, VOLUME: 05, ISSUE: 01 851 obtain a learning path for each group of learners. This technique suffers from the cold start problem, as it needs a good database of similar learners to form clusters in the first place. The method ignores complete personalization in favor of group adaptation as each learner is aligned to the cluster centroid, i.e., the average learning attributes of a group. In addition, the cluster based mapping used in this approach allows a learner to be associated to one cluster only. Recently, Saiyd et al., proposed a scheme to arrange the learning units in the form of text, power-point slides, etc. that are delivered as lecture content, in a hierarchical order [2]. Their technique first captures a learner's background knowledge and learning style through a set of questions to set her goals effectively in the context of the organized course. It may be noted that once the knowledge level is determined for each learner, it remains static throughout the course. In [3], the authors propose their Bayesian-based Intelligent Tutoring System (BITS) that provides three types of adaptive guidance: prerequisite recommendations for problem solving, navigational support, and the generation of a learning sequence when studying a particular support. BITS determine the knowledge level of learners through feedback in a fixed three- level format: whether she understood the concept, not understood it at all or is confused. However, discretizing the learning ability of a student in this manner may give a grossly erroneous judgment of her ability, as it is a continuous parameter that increments gradually as she accumulates knowledge. In [4], the system matches the attributes of learning object with a learner's attributes such as educational level, learning style and learner's preferences. The objective is to construct an individualized learning path for new learners. In this approach, learner's preferences is used as a dynamic parameter as a user can change it between sessions. However, it can be set to arbitrary values by the learner. Moreover, its value remains static within a session spanning several topics. In comparison, our scheme automatically calculates the dynamic learning ability of students by assessing her performance in personalized examinations conducted regularly after covering each topic. In [5], Dwi C. A. suggests a combined scheme using student feedback and collaborative voting to assess the acquired knowledge levels and perceived difficulty levels for each concept in order to perform course sequencing. Chin-Ming Hong et al. also work on knowledge levels and difficulty levels for generating an optimized curriculum sequencing using Genetic Algorithm (GA) [6]. In [7], the authors determine promising learning paths by mining the relationship between web navigational patterns of learners and their academic success. Their proposal completely ignores important features such as learning ability. Some recent proposals focus on dynamically generated personalized learning paths. The works outlined in [8], [9] and [10] entail Item Response Theory (IRT) to evaluate a student s dynamic learning ability after each stage of a course and suggest corrective actions. Baylari et. al., propose an e-learning scheme that personalizes the post-tests to be given to learners by applying IRT [8]. A remediation agent analyzes the results of these review tests using Artificial Neural Networks (ANN). It diagnoses learning problems and suggests suitable learning materials to improve upon the deficiencies. Chen et. al., use IRT and student-feedback to assess the dynamically changing learning ability of students and then suggest appropriate learning materials [9]. In [10], the authors propose an ontology based E- Learning Decision Support System (EL-DSS) which calculates the learning ability after every level through IRT and provides optimized learning path based on this updated information. None of the above works give due cognizance to the fact that each student must be assessed and given appropriate recommendations in the light of her own goal for learning. The personalized tests proposed in [8] adjust the difficulty levels according to the varying learning ability of a student but ignores her final aim. In our e-learning scheme, every aspect of a student s involvement with the course aligns with her pre- defined LA. The personalized examination system assesses each student s actual progress towards her own goal. Furthermore, the system recommends a tailor-made forward learning path by selecting those very topics, learning objects and perspectives that are highly relevant to her specified LA. In our earlier work, we had introduced the concept of perspectives in a course structure [11]. This allows the inclusion of different authors viewpoints on a given topic so that students have the freedom to chose a specific way of approaching a topic or she can learn from different approaches and also compare them. However, in that work the authors applied ACO to generate a static learning path for each student based on her initial learning ability. In this work, we enhance our earlier scheme to generate dynamic learning paths and personalized assessments. Literature review thus reveals that most researchers have considered the relatively static features of students to generate tailor-made learning paths for them while initial attempts to factor in continuously changing learning ability have failed to discern students on the basis of their individual goals. In this paper, we adopt a more realistic approach. We recognize that a student is always conscious of her end-objectives and works towards fulfilling those specific goals. It is therefore pertinent that the automated e-learning system also remains aware of a student s end objective and measures her performance in that light. Moreover, the e-learning system must exploit the enhanced ability of a learner to re-adjust her personalized learning path in sync with her renewed abilities. The main objective is to raise the bar of achievement to an appropriate level so that, as a student improves, she is motivated to adopt high-value learning paths even if they are seemingly difficult. 3. COURSE GRAPH MODEL Our proposed e-learning system is an extension of the weighted directed acyclic precedence Course Graph (CG) that we had introduced in [11], adopting the concept of perspectives introduced there. Thus, different authors can contribute their own perspectives on the same concept. The Fig.1 depicts a representative CG structure. SUSHMA HANS et al.: AN ADAPTIVE ACO-DRIVEN SCHEME FOR LEARNING AIM ORIENTED PERSONALIZED E-LEARNING 852 Fig.1. Course Graph Model of the E-learning System 3.1 CONCEPTS, LEARNING OBJECTS AND LEARNING AIMS A course is a chronological succession of nC concepts. Each concept is further refined as a set of Learning Objects (LO) which are separate capsules of learning content. For example, one may explain a concept in progressive detail starting with a textual explanation and following up with block diagrams, learning tips, case study, self-quiz, assignment, text box and hyperlinks leading to additional information. A concept j requires a fixed number nLOj of Learning Objects. Central to our scheme is the premise that the entire process of learning and assessment is steered primarily by a student s primary aim for taking up a course. Each new student registers for a course with a pre-decided LA chosen among a given set of LAs. For example, a prospective student for a course on Data Structures can enroll for any one of the following learning aims: (i) To prepare for an end-semester examination as part of an undergraduate course (ii) To prepare for a job interview (iii) To start a project that requires design and implementation expertise (iv) To focus on pedagogical aspects for teaching the course (v) To boost her knowledge by learning about new data structures. 3.2 COMPONENTS OF THE COURSE GRAPH The CG is structured into nL levels, Level0 LevelnL-1 where each level corresponds to a distinct topic or concept. Multiple nodes {vj,k} at the level j represent different perspectives of the same concept. In order to retain clarity of Fig.1, we have omitted the LOs in each concept. A node weight tj,k represents the total time allocated to a perspective k of concept j. This time is divided among its constituent LOs in proportion to their relative contributions towards the student's LA. A weight DLj,k,k along edge v(j, k) v(j+1,k ) represents the level of difficulty in making a transition from one perspective k at level j to a perspective k at the next level j+1. Note that the edges joining different perspective of the same concept have zero difficulty level. This allows students to freely choose more perspectives to enhance their learning, as long as their time constraints are not violated. 3.3 DATABASES 3.3.1 Maximum Learning Success (MLS): Different concepts of a course have different importance towards achieving its mastery. For instance, the concept of Linked Lists may be deemed to be more important as compared to in-built data types in the Data Structures course. Thus, each conceptual level represents a certain degree of mastery that can be achieved. Experts decide the MLSj achieved when a student has learnt the concept at level j. 3.3.2 Perspective Aim Contribution Table (PACT): Recall that the various perspectives of a concept are distinct approaches offered by different authors towards understanding a concept. For example, consider the topic Stacks in the Data Structures course. An author who explains the operation on stacks with the help of an analogy (say pile of books) may be useful for a learner who wants to teach stacks to school students. Another author who provides code fragments to explain Push and Pop operations on Stacks may find favor with a learner who aspires to be a skilled programmer. Thus, the contribution of various perspectives towards different learning aims vary. Let nPj be the number of perspectives authored for the concept at level j. The PACTj[nLA][nPj] database records the contribution of each perspective of the jth concept towards each of the nLA learning aims. Table.4 shows the PACTs for each concept of the Course Graph in Fig.1 that we used in our experiments. 3.3.3 Learning Object Priority Table (LOPT): It is mandatory for a student to take at least one LO of a concept in order to understand its basics, but the remaining LOs are optional. The question that arises is: which of the LOs can a student choose as mandatory and which among the remaining LOs as additional? 0.37 1.0 0.66 V3,1 0.71 0.28 2 4 3 2 6 5 2 2 5 3 5 3 V0,0 V1,0 V2,0 V1,1 V1,2 V2,1 V3,0 V3,2 V4,1 V4,0 V5,0 0.66 1.0 0 0.66 1.0 1.0 1.0 0.5 0 0 1.0 0.62 0 1.0 0.66 1.0 0.5 0.66 1.0 0 0 1.0 0.4 0.8 Level0 Level1 Level2 Level3 Level4 Level5 ISSN: 2229-6956(ONLINE) ICTACT JOURNAL ON SOFT COMPUTING: SPECIAL ISSUE ON DISTRIBUTED INTELLIGENT SYSTEMS AND APPLICATIONS, OCTOBER 2014, VOLUME: 05, ISSUE: 01 853 In line with our guiding principle, the specific LA of a student acts as beacon light to select appropriate LOs for each concept. Continuing with our example of an e-course on Data Structures, let us consider a student who wants to prepare quickly for an interview where one expects questions on Data Structures. The self-quiz LO of each concept could be a good resource for her preparations. For another learner who wants to apply the trie data structure, a case study LO that describes its application in constructing a dictionary can prove more interesting. The moot point is that each LO has a different relevance for each of the various learning aims. To facilitate the e-learning system in culling out suitable LOs for a student, the priorities of each optional LO towards different LAs are recorded in the LOPTj[nLA][nLOj] table for each concept. Table.5 shows the LOPTs for each concept of the Course Graph of Fig.1 that were referred in our experiments. 3.3.4 Question Relevance Table (QRT): So far, we have explained how the instructional aspects of the e-course namely, choice of perspectives and LOs for each concept, are related with Learning Aims. Continuous assessment of students is the conjugate aspect of education. Our scheme carried out students assessment in a manner that is sensitive to the learning aims of students. We incorporate an innovative Personalized Examination Scheme (PES) in which the relevance of various questions is determined according to a student s own aim of learning. The Question-Relevance Table QRTj[nLA][nQ] stores the relative importance of each of the 1 to nQ questions that are included in the examination at level j towards different LAs. Table.1 illustrates the template for a QRT with 10 questions and 3 LAs. Table.1. Relevance of Questions for various LAs LA Relevance Values Questions of exam j Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 Q10 LA0 0.2 0.1 0.1 0.2 0.2 0.1 0.1 0.0 0.0 0.0 LA1 0.0 0.0 0.1 0.3 0.1 0.2 0.2 0.0 0.0 0.2 LA2 0.0 0.5 0.0 0.1 0.1 0.0 0.0 0.2 0.1 0.0 4. PROPOSED E-LEARNING SCHEME We now present the concepts and detailed working of the proposed D-LABELS scheme. Fig.2 gives the block diagram of the overall architecture of the D-LABELS system. Let us consider a candidate student sx registers for a e-course with her initial learning ability initial and her Learning Aim LA(x). D-LABELS maintains a student's database that contains her registration details and the maximum time allocated for her to complete the course. The system generates a static learning path at the beginning of the course based on this information, whereupon the student embarks upon her learning path. 4.1 PERSONALIZED EXAMINATION SYSTEM After completing the first level perspectives and LOs in the static path recommended by the system, the student sx takes the first level examination provided by PES sub-system. Likewise, PES conducts an examination at the end of each level completed by the student as she proceeds along the course. Based on the student s previous learning ability and her current performance, PES computes her new learning parameters. We elaborate upon this process in the following sub-sections. 4.1.1 LA-Oriented Dynamic Learning Ability: The performance Pj(x) of sx at level j is given by the weighted average marks obtained by her, where the weight of each question is obtained from the QRT database: q q N i i x LA j QRT N i x i j M i x LA j QRT x j P 1 1 * (1) Her new dynamic learning ability j(x) is a weighted combination of her ability at the previous level j-1 and her incremental learning ability as reflected by her most recent performance at level j: j(x) = j-1(x) + Pj(x) (1- ) (2) where, 0 j nL-1 and 0 j(x) 1. The constant is a user input factor that sets the relative importance of a student s cumulative past ability and her newly acquired ability. Fig.2. Architecture of the D-LABELS e-learning system Student sx Course Expert ACO PES Registration Student database Sx takes exam after each level initial(x) , LA(x) Update c Forward learning path Course inputs* c, Tmax -Tc *Course Inputs: Course Graph, PACT[][], LOPT[][], MLS[], QRT[][] SUSHMA HANS et al.: AN ADAPTIVE ACO-DRIVEN SCHEME FOR LEARNING AIM ORIENTED PERSONALIZED E-LEARNING 854 The dynamic learning ability is an indicator of the continuous improvement that a student has achieved in her ability to grasp the concepts needed for her to achieve her learning aim. Since is a blend of cumulative past and current performances, we can identify weak learners as those students with low values. Accordingly, students with 0.4 are categorized as weak learners , students with 0.4 0.6 are categorized as moderate learners and those with 0.6 are recognized as good learners . 4.1.2 Dynamic Learning Success: The overall learning achievable after completing a full course is measured as the cumulative success that a student has achieved after completing each concept. Usually, different concepts have different weightings towards a course. Experts decide the Maximum Learning Success MLSj achievable after covering level j. The Dynamic Learning Success DLSj,k(x) of sx after taking the kth perspective of level j is computed as: x t x e j MLS x k j DLS k j j , 1 , (3) Note that that DLSj,k(x) is a function of a student s dynamic learning ability j(x) as well as the time tj,k(x) she spent in learning the content of the node (j,k). While evaluating possible future paths for a student who has just completed level c, her latest ability index c(x) is used for assessing the projected dynamic learning success [DLSj,k(x)] c at subsequent levels. This is given by: x t x e j MLS x k j DLS k j c c , 1 , (4) 4.2 ACO DRIVEN D-LABELS SCHEME ACO is a probabilistic population based method used to solve optimization problems with large, multidimensional search spaces. The ACO meta-heuristic takes inspiration from the foraging behavior of the ant species [12]. Ants drop some amount of pheromone on their paths. When accumulated over a given time period, pheromone levels mark out favorable, high fitness paths that can be adopted by other ants. Following the fitness proportionate heuristic, the higher is the amount of pheromone on a particular path, the higher is the probability that other ants would follow the same route. However, ants are not bounded by this decision and are allowed to explore alternative paths as well. Moreover, pheromones evaporate at a certain rate to avoid being stuck in local minima. Most ACO schemes update the pheromone quantity locally based on the promise of a selected sub-path as well as globally based on the overall fare- worthiness of the search direction. We have designed an ACO algorithm adapted to our e- learning system. The D-LABELS system invokes the ACO sub- system repeatedly at each step of the learning process after the student has completed a level, given the end-level examination and the PES sub-system has evaluated her current learning ability. At each invocation, ACO generate an optimal forward learning path from the current level to the end of course. Let us examine the objectives and constraints stipulated for the ACO- driven optimization process. 4.2.1 E-learning Objectives and Constraints: When a student enrolls for a course, she aspires to learn all concepts with high success to cover the course and also wants to deepen her understanding of each concept by checking out various perspectives. The following objectives guide dynamic learning path optimization. (i) Coverage Factor: Suppose student sx has covered the course until level c. Let c be a candidate forward path from current level c to the end of the course. The coverage factor (CF) determines the projected cumulative DLS of a student sx along a forward path c P~ , assuming that the dynamic learning ability that she last achieved at level c remains fixed throughout the selected future path. It is given by: c nL c j P k x k j DLS x c P CF c 1 ~ , , ~ (5) (ii) Depth Factor: Depth Factor (DF) quantifies the depth of learning achieved by sx by undertaking various perspectives of a concept. It is the normalized summation of the projected DLS of all perspectives taken at level j, weighted by their respective contributions to the student s LA as obtained from PACT: j nP k k x LA j PACT P k k x LA j PACT c x k j DLS x c P j DF c 1 ~ , , ~ (6) The overall DF of a candidate path c P~ is computed by adding up the DFs at each level from c to the end of the course. nL c j x c P j DF x c P c CDF , ~ , ~ (7) (iii) Cumulative Difficulty Level: Cumulative Difficulty Level (CDL) shows the overall difficulty of a candidate path as determined by the weights of edge along the path. Thus, 1 ~ ,1 , ~ nL c j P k k j v k j v DL c P c CDL c (8) (iv) Path-Value: All the above factors add to the overall fitness or Path-Value (PV) of a candidate path as given below: c P c CDL w x c P c CDF w x c P c CF w x c P c PV ~ 3 , ~ 2 , ~ 1 , ~ (9) Here, w1, w2 and w3 corresponds to the pre-set weights to give significance to the three objective factors CFc, CDFc and CDLc respectively. (v) Time Constraint: Let the time taken by a student to complete the course until level c be Tc(x). The course completion time constraint dictates that the time taken by a student to complete a candidate path should not surpass the time remaining till the maximum course duration Tmax predetermined by experts. Thus, 1 .. ~ max , nL c j P k x c T T x k jt (10) 4.2.2 Working of the ACO Sub-system: At each level, the ACO sub-system launches its search for an optimal forward learning path with the help of a population of ISSN: 2229-6956(ONLINE) ICTACT JOURNAL ON SOFT COMPUTING: SPECIAL ISSUE ON DISTRIBUTED INTELLIGENT SYSTEMS AND APPLICATIONS, OCTOBER 2014, VOLUME: 05, ISSUE: 01 855 ants. All ants trace out their own learning paths by making guided transitions from one node to another. Each ant uses the student s updated c(x) to measure the coverage factor, depth factor, difficulty level and path value of the sub-path it explores and calculates the time remaining. Then it deposits a certain quantity of pheromone on its traversed path, which represents its fitness. The process repeats for subsequent nodes until all ants in the current population reach the final node. (i) Pheromone Updation: All paths are loaded with a constant initial level of pheromone, which is subsequently incrementally updated by a population of ant-agents. Let old v u be the pheromone value of edge (u, v) at any given point of time. When an ant moves from node u to node v, the pheromone value is locally updated as follows: Otherwise x v DLS old v u 0 v u DL If old v u newv u u (11) The parameter is a large positive constant that enables a smooth transition from one perspective to another at the same level. Note that for perspectives at different levels, the pheromone level increases in direct proportion to the projected DLS. The power parameter determines the strength of the DLS factor in enhancing the pheromone level. The ant, which has found the next node that gives the best path value among all competitors augments the pheromone values globally. Let best denote that node. Then, x best PV newv u newv u (12) where, is the control parameter that determines the strength of the PV factor in incrementing the pheromone level. (ii) Transition Probability: Following the fitness proportionate heuristic, the probability that an ant jumps from node u to node v is directly proportional to the pheromone level deposited on edge (u,v). Let {W} be the set of all nodes directly reachable from u. Then, W x newx u newv u v u prob (13) (iii) Pheromone Evaporation: After one population of ants have carried forward their search in iteration i, the next generation of ants follows suit in iteration i+1. Pheromones levels that accumulate over several generations deplete gradually so that outdated knowledge can be replaced by freshly gained experience. Let denote the pheromone evaporation rate. Otherwise i v u If i v u i v u 1 1 1 (14) (iv) Convergence: Subsequent generations of ants continue to scan the search space until the pheromone levels stabilize. The goal is to identify the path with the maximum path value, while ensuring that the time limit is met. At convergence, the ant that has found the path with the highest value of x c P c PV , ~ emerges. ACO returns this path as the optimal forward learning path from the current level to the final level of the course. The optimal learning path output by ACO contains all those concepts, perspectives and learning objects, which are truly beneficial to the student to achieve her desired LA. The student responds by proceeding to the first node of the recommended forward path from her current node. The system repeats the iterative ACO-driven transition from one node to the next until she achieves her goal point. (v) Adaptive Learning Path generation: Note that ACO continuously adapts to the student s evolving dynamic learning ability. The overall fitness of a learning path i.e., path value, is optimized by maximizing the depth and coverage factors and minimizing the difficulty level. However, there is a tradeoff involved, as paths with greater depth and coverage are inherently difficult. ACO leverages this fact by reducing the difficulty level for weak students and raising it for students who show consistent improvement. Thus, if a hitherto weak student subsequently improves, then the system presents her with more challenging paths, which may be difficult but possess greater depth and wider coverage of topics. If her learning ability degrades, then ACO generates an easier path with relevant perspectives and LOs. In all cases, the system optimizes the overall path value in an adaptive manner. Experimental results presented in the next section demonstrate the adaptive personalization of learning paths. 5. EXPERIMENTAL RESULTS We implemented the D-LABELS software using Python 2.7 in its IDE named IDLE on Intel Core i3 processor with Windows 7. We experimented with the system by using the sample course graph shown in Figure 1 as the input course graph. 5.1 INPUT DATA The input values for various constants and thresholds used by the system are given in Table.2. Table.3 shows the number of perspectives, the number of LOs and the Maximum Learning Success - MLS at each level of the course graph. Table.4 shows the PACT data for each level. Table.5 shows the LOPT data for each level. Table.2. Values of various constants and thresholds used by the ACO sub-system Sl. No. Constant/ Threshold Value Sl. No. Constant/ threshold Value 1. 0.8 7. Tmax 20 2. 0.1 8. initial 0.20 3. 0.3 9. w1 (CF) 5 4. 100 10. w2 (DF) 5 5. 1.5 11. w3 (DL) 0.1 6. Tmax/4 SUSHMA HANS et al.: AN ADAPTIVE ACO-DRIVEN SCHEME FOR LEARNING AIM ORIENTED PERSONALIZED E-LEARNING 856 Table.3. Number of perspectives, LOs and MLS at each level Level 0 1 2 3 4 5 Number of Perspectives 1 3 2 3 2 1 Number of LOs 3 2 3 2 3 2 Maximum Learning Success MLS 0.10 0.15 0.20 0.15 0.25 0.15 Table.4. Perspective Aim Contribution Table Learning Aim Level 0 Level 1 Level 2 Level 3 Level 4 Level 5 P0 P0 P1 P2 P0 P1 P0 P1 P2 P0 P1 P0 LA0 1.00 0.50 0.30 0.20 0.30 0.70 0.29 0.10 0.61 0.80 0.20 1.00 LA1 1.00 0.30 0.17 0.53 0.35 0.65 0.29 0.56 0.15 0.65 0.35 1.00 LA2 1.00 0.16 0.54 0.30 0.68 0.32 0.56 0.22 0.22 0.38 0.62 1.00 Table.5. Learning Object Priority Table Learning Aim Level 0 Level 1 Level 2 Level 3 Level 4 Level 5 LO0 LO1 LO2 LO0 LO1 LO0 LO1 LO2 LO0 LO1 LO0 LO1 LO2 LO0 LO1 LA0 0.50 0.34 0.16 0.62 0.38 0.33 0.23 0.44 0.22 0.78 0.38 0.42 0.20 0.39 0.61 LA1 0.26 0.26 0.48 0.52 0.48 0.50 0.15 0.35 0.56 0.44 0.26 0.64 0.10 0.16 0.84 LA2 0.15 0.21 0.64 0.26 0.74 0.10 0.86 0.04 0.77 0.23 0.65 0.11 0.24 0.61 0.39 Table.6. Learning paths generated after each level for S1 and path attributes Current Node Forward Path (Level, {Sequence of perspectives taken at that level}) (taken path marked bold) Values for Forward Paths CF CDF CDL PV Time 0.20 (0, 0) (1, {1}) (2, {1, 0}) (3, {2}) (4, {1, 0}) (5, 0) 0.567 0.338 2.775 4.248 19.98 v0,0 0.24 (1, {2, 0, 1}) (2, {1}) (3, {0, 2, 1}) (4, {0}) (5, 0) 0.589 0.38 3.18 4.527 19.56 v1,1 0.288 (2, {1}) (3, 0, 2) (4, { 0, 1}) (5, 0) 0.701 0.431 3.58 5.302 19.87 v2,1 0.345 (3, {2, 0}) (4, {0, 1}) (5, 0) 0.79 0.483 3.97 5.968 19.87 v3,0 0.415 4, {1, 0}) (5, 0) 0..93 0.546 4.3 6.95 19.87 v4,0 0.498 (5,0) 1.03 0.599 4.3 7.715 19.87 FINAL PATH (0, 0) (1, {2, 0, 1} (2, 1) (3, {2, 0}) (4, {1, 0}) (5, 0) Values for the Final Path 1.129 0.654 4.3 8.49 19.87 5.2 EVOLUTION OF LEARNING PATH WITH REGULAR IMPROVEMENT Let us consider a candidate student S1 with LA0 and initial = 0.20. We assume that the student s dynamic learning ability increases by 20% of the previous value after each level. Table 6 shows the forward learning paths generated after each level and the values of CF, CDF, CDL, PV and time remaining for the forward paths and for the complete path from starting point to end of course. 5.2.1 Static Path: To commence with, the student launches her studies with her initial learning ability initial(1) = 0.2. The best path for her at this point of time is the static path generated by the ACO sub-system of D-LABELS. Referring to Fig.1, we can observe that ACO selects edges with minimum difficulty levels. It is apparent that the system charts an easy path with high path value, given the student s low initial learning ability. 5.2.2 Dynamic Path: Subsequently, the students learning ability increases with 1=0.24 at Level1. D-LABELS recognizes this fact and tries hard to maximize her learning at par with her new ability. D- LABELS achieves the following: (i) More perspectives: The static path (first row of Table.6) included only one perspective at Level1 whereas the very next dynamic path from Level1 to Level5 (second row) includes all three perspectives of Level1. This shows that the system attempts to maximize the depth of learning. One can easily see the benefit it brings. The PV of this path is greater than that of the static path (levels 0 to 5), even though it was calculated for lesser number of levels (levels 1 to 5). ISSN: 2229-6956(ONLINE) ICTACT JOURNAL ON SOFT COMPUTING: SPECIAL ISSUE ON DISTRIBUTED INTELLIGENT SYSTEMS AND APPLICATIONS, OCTOBER 2014, VOLUME: 05, ISSUE: 01 857 (ii) Perspectives with high contribution towards LA(x): Level3 has all three perspectives (P0, P1, P2) in the second row, but only major contributing perspectives (P0, P2) in the third row. The important point is that the perspectives with higher contribution towards LA0 at Level3 were retained, as we can verify from Table.4 (PACT). The least preferred perspective is discarded in favor of more perspectives chosen at other levels. Overall, there is an increase in the path value. (iii) Increase in path difficulty: Comparing the static path with the complete dynamic path (last row) we observe that the overall difficulty CDL increases from 2.775 to 4.3. This means the system prods the initially weaker students to explore more and more difficult transitions as she learns. Fig.3. Improvement in learning path attributes for S1 (iv) Boost in path value: The PV of the dynamic learning path improves from 4.248 to 8.49 i.e. 99.85%. We tested with three initially weak students with initial equal to 0.30, 0.40 and 0.50 and found that on an average, the PV doubled as compared with their respective static paths in each case. Further, we tested with 2 moderate students with initial equal to 0.5 and 0.7 and obtained an average 50% improvement in PV as compared with their static paths. (v) Time constraint fulfilled: Table.6 shows that despite a tight course deadline of 20 time units, the complete dynamic path was able to satisfy it. The level-wise values of CF, CDF, CDL and PV are plotted graphically in Fig.3. We can clearly observe that the values of increase consistently as the student proceeds along her recommended path. 5.3 EVOLUTION OF LEARNING PATH WITH BOOSTED IMPROVEMENT Suppose an aspiring student S2 with LA0 and initial(2) = 0.15. We assume that the student improves her dynamic learning ability by 20% after Level0, 25% after Level1, 30% after Level2 and so on. Table.7 illustrates the increment in various learning path attributes as well as the forward learning paths generated after each level, starting with Level0. In general, we can observe the system follows the same trend of including more perspectives, giving preference to highly contributing perspectives, boosting the path-value as well as the difficulty level of the path as student improves. The major difference between S1 and S2 is that the system has helped S2 to learn more as compare to S1. This is evident from the observation that even though S2, having a lower initial started with a lower PV of 3.296 as compared with S1 with 4.248, she ended up with a higher PV of 9.712 as compared with 8.49 for S1. The system allowed S2 is to reap the advantages of showing better improvement behavior as compared with S1. 5.4 EVOLUTION OF LEARNING PATH WITH LATE IMPROVEMENT This experiment shows the variation in learning paths if a student does not perform well initially but later on improves her performance in the course. Suppose the candidate student S3, having confidence in her ability, registers with a relatively high initial(3) = 0.50 and Learning aim as LA0. However, as she proceeds with the course, she finds it difficult to cope and her decreases by 30% of its previous value after Level1 and Level2. After this, S3 consistently improves by 20% of its previous ability at each level. Table.8 shows the forward paths generated as well as the values of various path attributes. Table.7. Learning paths generated after each level for S2 and path attributes Start Node Forward Path (Level, {Sequence of perspectives taken at that level}) Values for Forward Paths CF CDF CDL PV Time 0.15 (0, 0) (1, 1) (2, 1) (3, {0, 2, 1}) (4, {0, 1}) (5, 0) 0.442 0.272 2.786 3.296 19.98 v0,0 0.18 (1, 0) (2, {0, 1}) (3, {0, 2, 1}) (4, {0, 1}) (5, 0) 0.525 0.319 3.55 3.865 19.87 v1,0 0.225 (2, {1, 0}) (3, {1, 2, 0}) (4, {0, 1}) (5, 0) 0.628 0.38 4.29 4.611 19.87 v2,0 0.293 (3, {0, 1, 2}) (4, 1, 0) (5, 0) 0.739 0.457 4.5 5.528 19.87 v3,2 0.395 4, {1, 0}) (5, 0) 0.918 0.547 4.5 6.875 19.87 v4,0 0.553 (5,0) 1.099 0.648 4.5 8.285 19.87 FINAL PATH (0, 0) (1, 0} (2, {1, 0}) (3, {0, 1, 2}) (4, {1, 0}) (5, 0) Overall values for the Final Path 1.289 0.748 4.5 9.742 19.87 0 1 2 3 4 5 6 7 8 Coverage factor Depth factor Difficulty level PathValue Level 0 Level 1 Level 2 Level 3 Level 4 Level 5 SUSHMA HANS et al.: AN ADAPTIVE ACO-DRIVEN SCHEME FOR LEARNING AIM ORIENTED PERSONALIZED E-LEARNING 858 Table.8. Learning paths generated after each level for S3 and path attributes Start Node Forward Path (Level, {Sequence of perspectives taken at that level}) Values for Forward Paths CF CDF CDL PV Time 0.50 (0, 0) (1, {0, 1}) (2, {1, 0}) (3, {2, 0}) (4, 0) (5, 0) 0.98 0.60 3.54 7.56 19.3 v0,0 0.35 (1, 1) (2, 1) (3, {0, 2) (4, {1, 0}) (5, 0) 0.823 0.491 2.68 6.30 19.54 v1,1 0.245 (2, { 0, 1}) (3, {0, 2, 1}) (4, {0, 1}) (5, 0) 0.639 0.384 3.28 4.785 19.25 v2,1 0.294 (3, {2, 0}) (4, {0, 1}) (5, 0) 0.762 0.443 4.07 5.618 19.81 v3,0 0.353 4, {1, 0}) (5, 0) 0.857 0.495 4.4 6.32 19.81 v4,0 0.423 (5,0) 0.95 0.55 4.4 7.06 19.81 FINAL PATH (0, 0) (1, 1} (2, {0, 1}) (3, {2, 0}) (4, {1, 0}) (5, 0) Overall values for the Final Path 1.047 0.60 4.4 7.814 19.81 Fig.4. Variation in learning path attributes for S3 5.4.1 Static Path: We observe that the initial static path has a relatively high value of 7.56. As S3 is an above-average student, the system gives more preference to higher contributing perspectives that entail making transitions on edges with high difficulty levels. 5.4.2 Dynamic Path: As the student learns the Level0 concept, her performance degrades and 0 decreases to 0.35 at Level1. The system now generates a learning path with lesser difficulty level. In each level transition, it chooses perspectives that can be reached with lower difficulty level edges. For instance, referring to Fig.1, we see that from node v0,0, it goes to the next level v1,1 with DL0,0,1 = 0.4 instead of choosing higher contributing node v1,0 with DL0,0,0 = 1.0. The path values also reduce from Level0 (PV = 7.56) to Level1 (PV = 6.3) and till Level2 (PV = 4.785) as student's learning ability decreases at both these levels. Thus the system selects perspectives based on her ability and does not give preference to coverage and depth increments. Since the learner shows improvement after Level3, the emphasis shifts towards paths that are more difficult but lead to perspectives that contribute higher towards LA0. We can notice that from node v2,1, it goes to the next level v3,2 with DL2,1,2 = 1.0 instead of choosing v1,1 with DL2,1,0 = 0.28 as v3,2 has higher contribution towards student's LA. Fig.4 clearly presents these decrements from levels 0 to 2 and increments from levels 3 to 5 in the values of all path attributes. The experimental results clearly shows that as a learner improves while learning the course, the system provides her the options for more difficult paths emphasizing on increasing the coverage and depth of the learning path. However, if she degrades, the system again look for perspectives with less difficulty level as well as reduces the complexity of the path by eliminating some less important perspectives from student's perspective according to her LA. 6. CONCLUSION We have presented an innovative learning-aim driven personalized and adaptive e-learning scheme. It dynamically readjusts the learning path of each student after each level completed by her, based on her pre-determined goals and personalized evaluation of her performance. We have experimentally demonstrated that our system brings about significant improvement in the learning path values for students with variously evolving learning abilities. Specifically the D- LABELS framework: (i) Includes as many perspectives as possible to enhance the depth of learning, (ii) Always includes perspectives that give a higher contribution to the students specific learning aim, (iii) Explores difficult transition paths to search for better and more number of perspectives as a student improves her learning ability, and (iv) Respects the prescribed course completion time limit For our future work, we will include recommendations of experienced learners into the e-learning framework. REFERENCES [1] A. A. Kardan, M. A. Ebrahim and M. B. Imani, A new Personalized Learning Path Generation Method: Aco- Map , Indian Journal Science Research, Vol. 5, No. 1, pp. 17-24, 2014. [2] Nedhal A. M. Al Saiyd and Intisar A. M. Al-Sayed, A Generic Model of Student-Based Adaptive Intelligent Web- 0 1 2 3 4 5 6 7 8 Coverage factor Depth factor Difficulty level PathValue Level 0 Level 1 Level 2 Level 3 Level 4 Level 5 ISSN: 2229-6956(ONLINE) ICTACT JOURNAL ON SOFT COMPUTING: SPECIAL ISSUE ON DISTRIBUTED INTELLIGENT SYSTEMS AND APPLICATIONS, OCTOBER 2014, VOLUME: 05, ISSUE: 01 859 Based Learning Environment , Proceedings of the World Congress on Engineering, Vol. II, pp. 781-786, 2013. [3] C. J. Butz, S. Hua and R. B. Maguire, A Web-Based Bayesian Intelligent Tutoring System for Computer Programming , Proceedings of the International Conference on Web Intelligence, pp. 159-165, 2004. [4] B. Riad, S. Ali, H. Mourad and S. Hamid, An Adaptive Learning Based on Ant Colony and Collaborative Filtering , Proceedings of the World Congress on Engineering, Vol. II, pp. 851-855, 2012. [5] C. Andharini Dwi and A. Basuki, Personalized Learning Path of a Web-based Learning System , International Journal of Computer Applications, Vol. 53, No. 7, pp. 17- 22, 2012. [6] C. M. Hong, C. M. Chen and M. H. Chang, Personalized Learning Path Generation Approach for Web-based Learning , Fourth World Scientific and Engineering Academy and Society, International Conference on E- ACTIVITES, pp. 62-68, 2005. [7] J. M. Carbo, E. Mor and J. Minguillon, User navigational behavior in e-learning virtual environments , Proceedings of the IEEE/WIC/ACM International Conference on Web Intelligence, pp. 243-249, 2005. [8] A. Baylari and Gh. A. Montazer, Design a Personalized E- learning System based on Item Response Theory and Artificial Neural Network Approach , Expert Systems and Applications, Vol. 36, No. 4, pp. 8013-8021, 2009. [9] C. M. Chen, H. M. Lee and Y. H. Chen, Personalized E- learning System using Item Response Theory , Computers & Education, Vol. 44, No. 3, pp. 237-255, 2005. [10] M. Yarandi, H. Jahankhani and A. R. H. Tawil, Towards Adaptive E-Learning using Decision Support Systems , International Journal of Emerging Technologies in Learning, Vol. 8, pp. 44-51, 2013. [11] S. Chakraverty, S. Hans and V. Mittal, ACO-driven Personalized E-learning with Perspectives and Learning Aims , Proceedings of the International Conference on E- learning, E-business, Enterprise Information Systems, & E- government, pp. 359-365, 2012. [12] M. Dorigo, Optimization, learning and natural algorithms , Ph. D. Thesis, 1992.