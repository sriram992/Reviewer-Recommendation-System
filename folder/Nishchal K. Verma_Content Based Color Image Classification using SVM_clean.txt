Content Based Color Image Classification using SVM Saurabh Agrawal Department of Electrical Engineering, Indian Institute of Technology Kanpur, India saurabh.agrawal.11486@gmail.com Nishchal K Verma Department of Electrical Engineering, Indian Institute of Technology Kanpur, India nishchal@iitk.ac.in Prateek Tamrakar Department of Electrical Engineering, Indian Institute of Technology Kanpur, India prateek.tamrakar@gmail.com Pradip Sircar Department of Electrical Engineering, Indian Institute of Technology Kanpur, India sircar@iitk.ac.in Abstract We propose a novel approach for content based color image classification using Support Vector Machine (SVM). Traditional classification approaches deal poorly on content based image classification tasks being one of the reasons of high dimensionality of the feature space. In this paper, color image classification is done on features extracted from histograms of color components. The benefit of using color image histograms are better efficiency, and insensitivity to small changes in camera view-point i.e. translation and rotation. As a case study for validation purpose, experimental trials were done on a database of about 500 images divided into four different classes has been reported and compared on histogram features for RGB, CMYK, Lab, YUV, YCBCR, HSV, HVC and YIQ color spaces. Results based on the proposed approach are found encouraging in terms of color image classification accuracy. Keywords: Support Vector Machine, color image histogram, image classification. 1. Introduction Image information systems are becoming increasingly important with the advancements in broadband networks, high-powered workstations etc. Large collections of images are becoming available to the public, from photo collection to web pages, or even video databases. Since visual media requires large amounts of memory and computing power for processing and storage, there is a need to efficiently index and retrieve visual information from image database. In recent years, image classification has become an interesting research field in application. Efficient indexing and retrieval of large number of color images, classification plays an important and challenging role.. The main focus of this research work is devoted to finding suitable representation for images and classification generally requires comparison of images depending on the certain useful features. 2. Image features A number of image features based on color and texture attributes have been reported in literature. Although quantifying their discrimination ability to classification problem has not been so easy. Among the many possible features for classification purpose, extracted from an image, we restrict our self to ones which are global and low level features. The simplest way to represent an image is to consider its bitmap representation. More detail is provided ahead. 2.1. Features from Color Histograms In image processing, a color histogram is a representation of the distribution of colors in an image. For digital images, it is basically the number of pixels that have colors in each of a fixed list of color ranges that span the image color space, the set of all possible colors. Color histogram technique is a very simple and low level method and in practice it has shown good results [2] especially for image indexing and retrieval tasks, where similar (not necessary identical) images are to be retrieved and easy feature extraction. This also ensures full translation and rotation invariance in the color images under classification task. A color is represented by a three dimensional vector corresponding to a position in a color space. This leaves us to select the color space and the quantization steps in this color space. As a color space, first we chose the RGB (Red-Green-Blue). The reason for this choice of RGB is that it is widely used in the literature. For the sake of comparison and completeness, we have considered other color spaces also, while keeping other conditions identical. An explanation for this fact is that, after quantization into bins, no information about the color space is used by the classifier. A color histogram is a representation of the distribution of colors in an image. For digital images, a color histogram represents the number of pixels that have colors in each of a fixed list of color ranges that span the 2011 Eighth International Conference on Information Technology: New Generations 978-0-7695-4367-3/11 $26.00 2011 IEEE DOI 10.1109/ITNG.2011.202 1090 (a) (b) Figure 1: (a) Separating Hyperplane, (b) Optimal Separating Hyperplane image's color space, the set of all possible colors. The color histogram can be built for any kind of color space, although the term is more often used for three-dimensional spaces like RGB or HSV. For monochromatic images, the term intensity histogram is used. 3. Support Vector Machines (SVMs) SVMs [1] are learning systems that use a hypothesis space of linear functions in a hyper space, trained with a learning algorithm from optimization theory that implements a learning bias derived from statistical learning theory. The aim of Classification via SVM is to find a computationally efficient way of learning good separating hyper planes in a hyperspace, where good hyper planes mean ones optimizing the generalizing bounds and by computationally efficient we mean algorithms able to deal with sample sizes of very high order. 3.1. Optimal separating hyperplanes Let N i i i y d d 1) , (x be a set of N training examples, each example d i x belongs to a class labeled by } 1,1 { iy , where d being the dimension of the feature space. The aim is to define a hyper plane which divides the set of examples such that all the points with the same label are on the same side of the hyperplane (Fig. 1). This amounts to finding w and b so that )1( , ,1 ,0 ) ( N i b y i i  !  w.x If there exists a hyperplane satisfying eq. (1), the set is said to be linearly separable. In this case it is always possible to rescale w and b so that N i b y i i N i , ,1 ,1 ) ( min 1  t  w.x i.e. so that the closest point to the hyper plane has a distance of w 1 . Then Eq. 1 becomes ) 2 ( 1 ) ( t  b y i i w.x Among the separating hyperplanes, the one for which the distance to the closest point is maximal is called optimal separating hyperplane (OSH). Since the distance to the closest point is w 1 , finding the OSH amounts to minimizing 2 2 1 w under constraints (2). The quantity w 2 is called the margin, and thus the OSH is the separating hyperplane which maximizes the margin. The margin can be seen as a measure of the generalization ability: the larger the margin, the better the generalization is expected to be [4], [5]. Since 2 w is convex, minimizing it under linear constraints (2) can be achieved with Lagrange multipliers. If we denote by ) , , ( 1 N D D  the N non-negative Lagrange multipliers associated with constraints (2), our optimization problem amounts to maximizing ) 3 ( 2 1 ) ( 1 1  N i j i j i j i N i i y y W .x x D D D with 0 t i D and under constraint .0 1 N i i iy D This can be achieved by the use of standard quadratic programming method [6]. Once the vector ) , , ( 0 0 1 0 N D D  solution of the maximization problem (3) has been found, the OSH ) , ( 0 0 b w has the following expansion ) 4 ( 1 0 0 i i N i i y x w D The support vectors are points for which 0 ! i D satisfy Eq. (2) with equality. Thus from Eq. (4), the hyperplane decision plane can be written as ) 5 ( sgn ) ( 0 1 0  b y f i i N i i .x x x D 1091 3.2. Linearly non-separable case When the data is not linearly separable, slack variables ) , ( 1 N [ [  are introduced, with 0 t i[ [7] such that ) 6 ( , ,1 , 1 ) . ( N i b y i i i   t  [ x w to allow the possibility of examples that violate Eq. (2). The purpose of the variables i[ is to allow misclassified points, which have their corresponding 1 ! i[ . Therefore i[ is an upper bound on the number of training errors. The generalized OSH is then regarded as the solution of the following problem: minimize ) 7 ( 2 1 1  N i i C [ w.w subject to constrains (6) and 0 t i[ . The first term is minimized to control the learning capacity (as in the separable case) and the second term is to control the misclassified points. The parameter C is chosen by the user. Larger value of C corresponds to assigning a higher penalty to errors. SVM training requires fixing C (the penalty term for misclassification) in Eq. (7). While dealing with image data, generally the dimension of input space is large compared to the size of the training set, so that the training data is generally linearly separable. Consequently, the value of C has less impact on performance. 3.3. Non Linear Support Vector Machines The input data is mapped into a high-dimensional feature space through some nonlinear mapping chosen a priori [1]. In this feature space, the OSH is constructed. If we replace x by its mapping in the feature space ) (x ) , Eq. (3) becomes: ) 8 ( ) ( ) ( 2 1 ) ( 1 1 , ) )  N i N j i j i j i j i i y y W x . x D D D If we have ) ( ) ( ) , ( j i j i x x x x K ) ) . , then only K is needed in the training algorithm and the mapping ) is never explicitly used. Conversely, given a symmetric position kernel ) , ( y x K , Mercer s theorem [1] indicates us that there exists a mapping ) such that ) 9 ( ) ( ) ( ) , ( y . x y x ) ) K Once the kernel K satisfying Mercer s condition has been chosen, the training algorithm consists of minimizing ) 10 ( ) , ( 2 1 ) ( 1 1 ,  N i N j i j i j i j i i K y y W x x D D D and the decision function becomes ) 11 ( ) , ( sgn ) ( 1  N i i i i b K y f x x x D 3.4. Multi class classification Support Vector Machines are designed for binary classification. When dealing with several classes, as in object recognition and image classification, one needs an appropriate multi-class method. Different possibilities include: x Modify the design of the SVM, as in [3], in order to incorporate the multi-class learning directly in the quadratic solving algorithm. x Combine several binary classifiers: One-against- One (OAO) [7] applies pair wise comparisons between classes, while One-against-All (OAA) [8] compares a given class with all the others put together. In the One-against-All algorithm, n hyperplanes are constructed, where n is the number of classes. Each hyperplane separates one class from the other. In this way, we get n decision functions n k kf d d 1) ( of the form (5) as given in eq. (12). The classes of a new point x is given by arg maxk ) (x fk , i.e. the class with the largest decision function.  l j j i i i b C i i i 1 , , ) 12 ( ) ( 2 1 min [ [ .w w w In the One-against-One algorithm, 2 /)1 (  n n hyperplanes are constructed, where n is the number of classes. Each hyperplane separates only two classes. In this way, we get decision functions of the form (5) as given in eq. (13). ) 13 ( ) ( 2 1 min , ,  t ij t ij ij b C ij ij ij [ [ .w w w In Directed Acyclic Graph SVM (DAG) proposed in [9]. Its training phase is the same as the One-against- One method by solving 2 /)1 (  n n binary SVMs. However, in the testing phase, it uses a rooted binary directed acyclic graph which has 2 /)1 (  n n internal nodes and n leaves. The assumption here is that every image has a single label i.e. every image belongs to only one class. However, in image classification, an image may belong to several classes as its content is not unique. It would be possible to make multiclass learning more robust, and extend it to handle multi-label classification problem. 1092 4. Implementation scheme and case study To implement the above technique, we first find the histogram for images. The number of pixels in each bin is referred to as one feature. These features are then stored in a matrix in row by row fashion i.e. each row contains the histogram corresponding to one image. Class of each image is appended with each row. For validation of the implemented code we use k-fold cross-validation algorithm [10]. In k-fold cross-validation, the complete dataset is divided into k subsamples. One subsample is used for validation (testing) and (k-1) subsamples are used for training. This is repeated k-times so that each subsample is used for validation. The k-accuracies are then averaged to get the actual accuracy. Some of the images used are shown below: The training of SVM is done by )1 (  u d n matrix where n is the number of training data is and d is the number of features. Last column contains the class of each data. The image database contains around 575 images divided into four different classes. The training matrix is as follows:    l d n n n l d n n n d d TR c f f f c f f f c f f f c f f f M , 2 , 1, ), 1 ( 2 ), 1 ( 1 ), 1 ( 1 , 2 2 , 2 1, 2 1 ,1 2 ,1 1,1          Similar is the test matrix TS M . 5. Results Table 1 shows the classes assigned to different types of images used. Table 1: Classes assigned to different types of images Image Classes Class Assigned Car 1 Fire 2 Elephant 3 Lion 4 The accuracies are calculated for OAA , OAO and DAG-SVM for different histogram levels and for different color spaces, using 5-fold cross-validation. 5.1. Results with changing histogram level For RGB image, the histogram level is changed and the accuracies are tabulated in Table 2. It is to be noted that histogram level N corresponds to the data with a dimension of 3N (i.e. N for each R, G and B image). Table 2: Accuracies for OAA, OAO and DAG classifier with changing histogram level Histogram Level (N) Accuracy OAA OAO DAG 2 88.23% 89.08% 65.72% 5 82.10% 82.03% 61.14% 10 79.63% 80.20% 68.39% 15 77.54% 79.52% 72.42% 20 83.26% 76.11% 70.34% 25 87.61% 68.26% 71.26% 5.2. Results with different color spaces Here we keep the histogram level fixed and change the color space. Histogram of 10 is used for all the color spaces and the accuracies are tabulated in Table 3. Table 3: Accuracies for OAA, OAO and DAG classifier for different color spaces (histogram level=10) Color Space Accuracy OAA OAO DAG RGB 79.63% 80.20% 68.39% CMYK 76.29% 76.20% 71.29% Lab 78.26% 79.86% 72.22% YUV 80.27% 79.63% 69.82% YCBCR 84.39% 81.25% 68.76% HSV 74.47% 80.39% 62.37% HVC 81.12% 78.93% 65.27% YIQ 82.11% 77.39% 71.15% Figure 2: Images used to verify the implementation 1093 6. References [1]. Christopher J. C. Burges, A Tutorial on Support Vector Machines for Pattern Recognition , Data Mining and Knowledge Discovery 2, pp.121-167, 1998. [2]. M. Swain and D. Ballard, Indexing via color histograms, International Journal of Computer Vision, Vol. 7, pp. 11 32, 1991. [3]. J. Weston and C. Watkins, Multi-class support vector machines, Technical Report CSD-TR-98-04, Royal Holloway, University of London, 1998. [4]. V. Vapnik, Statistical Learning Theory, John Wiley, New York, 1998. [5]. P. Bartlett and J. Shawe-Taylor, Generalization performance of support vector machines and other pattern classi ers in Advances in Kernel Methods- Support Vector Learning, 1998, MIT Press- Cambridge, USA. [6]. M. Bazaraa and C. M. Shetty, Nonlinear program- ming, John Wiley, New York, 1979. [7]. M. Pontil and A. Verri, Support vector machines for 3-d object recognition, in Pattern Analysis and Machine Intelligence, June 1998, vol. 20. [8]. V. Blanz, B. Sch olkopf, H. B ulthoff, C. Burges, V. Vapnik, and T. Vetter, Comparison of view-based object recognition algorithms using realistic 3d models, in Artificial Neural Networks- ICANN 96, Berlin, 1996, pp. 251 256. [9]. J. C. Platt, N. Cristianini, and J. Shawe-Taylor, Largemargin DAG s for multiclass classi cation , Advances in Neural Information Processing Systems, Cambridge, MA: MIT Press, vol.12, pp. 547-553, 2000. [10]. Mosteller and Frederick, A k-sample slippage test for an extreme population , Annals of Mathematical Statistics Vol.-19, No.-1, pp.58-65, 1948. 1094