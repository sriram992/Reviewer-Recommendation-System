See discussions, stats, and author profiles for this publication at: https://www.researchgate.net/publication/221022528 Feature weighting in content based recommendation system using social network analysis Conference Paper April 2008 DOI: 10.1145/1367497.1367646 Source: DBLP CITATIONS 245 READS 3,735 3 authors, including: Some of the authors of this publication are also working on these related projects: Bengali Speech Recognition View project Smartphone based emotion detection View project Niloy Ganguly Indian Institute of Technology Kharagpur 369 PUBLICATIONS 6,133 CITATIONS SEE PROFILE Pabitra Mitra Indian Institute of Technology Kharagpur 236 PUBLICATIONS 7,142 CITATIONS SEE PROFILE All content following this page was uploaded by Pabitra Mitra on 06 December 2015. The user has requested enhancement of the downloaded file. Feature Weighting in Content Based Recommendation System Using Social Network Analysis Souvik Debnath Indian Institute of Technology Kharagpur, India - 721302 cs_souvik@yahoo.co.in Niloy Ganguly Indian Institute of Technology Kharagpur, India - 721302 niloy@cse.iitkgp.ernet.in Pabitra Mitra Indian Institute of Technology Kharagpur, India - 721302 pabitra@cse.iitkgp.ernet.in ABSTRACT We propose a hybridization of collaborative ltering and content based recommendation system. Attributes used for content based recommendations are assigned weights de- pending on their importance to users. The weight values are estimated from a set of linear regression equations ob- tained from a social network graph which captures human judgment about similarity of items. Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval information ltering General Terms Algorithms, Design, Experimentation Keywords Recommender System, Social Network, Feature Similarity 1. INTRODUCTION Recommendation systems produce a ranked list of items on which a user might be interested, in the context of her current choice of an item. Recommendation systems are built for movies, books, communities, news, articles etc. There are two main approaches to build a recommendation system - collaborative ltering and content based [3]. Col- laborative ltering computes similarity between two users based on their rating pro le, and recommends items which are highly rated by similar users. However, quality of collab- orative ltering su ers in case of sparse preference databases. Content based system on the other hand does not use any preference data and provides recommendation directly based on similarity of items. Similarity is computed based on item attributes using appropriate distance measures. We attempt to hybridize collaborative ltering and content based recom- mendation for circumventing the di culties of these indi- vidual approaches. Item similarity measure used in content based recommendation is learned from a collaborative social network of users. Some previous attempts at integrating collaborative l- tering and content based approach include content boosted collaborative ltering [3], weighted, mixed, switching and Copyright is held by the author/owner(s). WWW 2008, April 21 25, 2008, Beijing, China. ACM 978-1-60558-085-2/08/04. feature combination of di erent types of recommender sys- tem [2]. But none of these talks about producing recom- mendation to a user without getting her preferences. We demonstrate the e ectiveness of the proposed system for rec- ommending movies in Internet Movie Database (IMDB) [1]. From the results it is seen that our recommendation is quite in agreement with IMDB recommendation. 2. FEATURE WEIGHTING IN CONTENT BASED RECOMMENDATION In content based recommendation every item is repre- sented by a feature vector or an attribute pro le. The fea- tures hold numeric or nominal values representing certain aspects of the item like color, price etc. A variety of dis- tance measures between the feature vectors may be used to compute the similarity of two items. The similarity val- ues are then used to obtain a ranked list of recommended items. If one considers Euclidian or cosine similarity; implic- itly equal importance is asserted on all features. However, human judgment of similarity between two items often gives di erent weights to di erent attributes. For example, while choosing a camera, price of a camera may be more impor- tant than the body color attribute. It may be stated that users base their judgments on some latent criteria which is a weighted linear combination of the di erences in individ- ual attribute. Accordingly, we de ne similarity S between objects Oi and Oj as S(Oi, Oj) = 1f(A1i, A1j) + 2f(A2i, A2j) + + nf(Ani, Anj) (1) where n is the weight given to the di erence in value of at- tribute An between objects Oi and Oj, the di erence given by f(Ani, Anj). The de nition of f depends on the type of attribute (numeric, nominal, boolean). We normalize f s to have value in [0, 1]. In general the weights 1, 2, , n are unknown. In the next section we describe a method of determining these weights from a social collaborative net- work. We have used the above methodology for recommending movie in IMDB database. A set of 13 features are con- sidered. The features along with their type, domain and distance measures are shown in Table 1. All these feature values can be obtained from the IMDB database. 3. DETERMINING FEATURE WEIGHTS We estimate the feature weights from a social network graph of items. The underlying principle is to use exist- 1041 WWW 2008 / Poster Paper April 21-25, 2008 Beijing, China Table 1: Features Used in Movie Recommendation Feature Type Domain Distance Measure Release Year YYYY (300 |Y1 Y2|) 300 Type String Movie,TV etc. T1 = T2?1 : 0 Rating Integer (0-10) (10 |R1 R2|) 10 Vote Integer ( 5) (Vmax |V1 V2|) Vmax Director String <Name> D1 = D2?1 : 0 Writer String <Name> W1 = W2?1 : 0 Genre (String)* Drama etc. |G1 G2| Gmax Keyword (String)* College etc. |K1 K2| Kmax Cast (String)* (<Name>)* |C1 C2| Cmax Country (String)* France etc. |C1 C2| Cmax Language (String)* English etc. |L1 L2| Lmax Color String Color, B/W C1 = C2?1 : 0 Company String <Name> C1 = C2?1 : 0 ing recommendation by users to construct a social network graph with items as nodes. The graph represents human judgment of similarity between items aggregated over a large population of users. Optimal feature weights are considered to be those which induce a similarity measure between items best conforming to this social network graph. We describe below a linear regression framework for de- termining the optimal feature weights. Let the items un- der consideration be denoted by O1, O2, , Ol, they cor- responds to the vertices of our social network. The edge weight between vertices Oi and Oj, E(Oi, Oj) = # of users who are interested in both Oi, Oj. E(Oi, Oj), suitably normalized, may be considered as hu- man judgment of similarity between Oi, Oj. Recall that feature vector (content based) similarity between Oi, Oj has been de ned as S(Oi, Oj) in Eq. (1). Equating E(Oi, Oj) with S(Oi, Oj) leads to the following set of regression equa- tions. i, j = 1..l i = j, 0 + 1f(A1i, A1j) + 2f(A2i, A2j) + + nf(Ani, Anj) = E(Oi, Oj) (2) The values of f(A1i, A1j), f(A2i, A2j), , f(Ani, Anj) are known from the data as are the values of E(Oi, Oj). Solv- ing the above regression equations provide estimates for the values of 1, 2, , n. If there are l objects under consid- eration, it is possible to have lC2 regression equations of the above form. In the case of movie recommendation we have considered movies as nodes in the social network. The edge weight between two movies is the number of IMDB reviewers who have reviewed both the movies. 4. EXPERIMENTAL RESULTS The movie database used in our recommendation system consists of 3 105 random movies downloaded from the IMDB. The movies voted by less than 5 people or the movies that have not been reviewed by a single person are ltered out. The data is then divided into three equal sets. Each movie is described by 13 features (Table 1). 4.1 Stability of Feature Weights Our recommendation system is based on the presumption that feature weights are almost universal for di erent sets of users and movies. To test this presumption we consider dif- Table 2: Feature Weight Values Feature Mean Variance Type 0.18 0.0023 Writer 0.36 0.0048 Genre 0.04 0.0001 Keyword 0.03 0.0011 Cast 0.01 0.0003 Country 0.07 0.0013 Language 0.09 0.0004 Company 0.21 0.0110 ferent sets of regression equations and solve for the weights. We consider the following varieties of regression equations. I. Equations using only edge weights 1 (i.e. movie pairs having at least one co-reviewer) II. Equations using only edge weights 2 . (Note that this gives a graph which is a sub-graph of the previous graph.) For the above graphs we construct a set of equations for each of the three (partitioned) datasets having 105 movies. Thus we get six sets of regression equations which we solve using SPSS package. It is observed from the weight values obtained from each of the above six sets of regression equa- tions that some of the features have stable weight values, while some features like Director, Rating, Vote, Year, Color have unstable or negative weight. We remove the features with unstable or negative weights from our regression equa- tions and obtain the following set (Table 2) of stable weights for eight features. Also note, out of the 8, 3 features namely type, writer and company are particularly important. These features along with their weights are used to obtain the rec- ommendations. 4.2 Performance of the Recommender System The proposed algorithm is compared with pure content based method (considering equal weights for all features) and IMDB recommendations. Performance is measured us- ing the classical Recall measure, considering IMDB recom- mendation as benchmark. The experiment has been done on 10 di erent movies. The proposed method achieves an average recall of 0.29. Where as, the pure content based method achieves a recall of 0.24 with IMDB. Thus the pro- posed method agrees well with IMDB recommendation and in this regard it outperforms pure content based method. This demonstrates the e ectiveness of feature weighting. 5. CONCLUSION A hybridization of content based and collaborative lter- ing based recommendation is proposed. The weights of dif- ferent attributes of an item are computed from the collabora- tive social network using regression analysis. Further studies on other weight estimation techniques like sparse regression and isometric projection are being considered. Also more rigorous performance evaluation based on human judgment will be undertaken. 6. REFERENCES [1] Internet Movie Database. http://www.imdb.com. [2] Bruke, R. Hybrid recommender systems: survey and experiments, User Modeling and User Adapted Interaction 12 (2002) 331-370. [3] P. Melville, R.J. Mooney, R. Nagarajan Content-Boosted Collaborative Filtering for Improved Recommendations, Proceedings of the 18th National Conference on Ariti cial Intelligence (AAAI-2002), July 2002, Edmonton, Canada. 1042 WWW 2008 / Poster Paper April 21-25, 2008 Beijing, China