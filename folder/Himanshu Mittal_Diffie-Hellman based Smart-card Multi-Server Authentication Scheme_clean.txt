See discussions, stats, and author profiles for this publication at: https://www.researchgate.net/publication/282269046 Dif e-Hellman Based Smart-Card Multi-server Authentication Scheme Article March 2015 DOI: 10.1109/CICN.2014.173 CITATIONS 5 READS 92 1 author: Some of the authors of this publication are also working on these related projects: Crop disease detection using image and video data analysis using deep learning View project Nature Inspired Algorithms View project Himanshu Mittal Jaypee Institute of Information Technology 48 PUBLICATIONS 681 CITATIONS SEE PROFILE All content following this page was uploaded by Himanshu Mittal on 05 April 2017. The user has requested enhancement of the downloaded file. Diffie-Hellman based Smart-card Multi-Server Authentication Scheme Himanshu Mittal Department of Computer Science Jaypee Institute of Information Technology Noida, India himanshu.mittal@jiit.ac.in Abstract A secure smart-card multi-server authentication scheme has been proposed using Diffie-Hellman, Hash- Function and XOR. The scheme made no use of verification table, or encryption techniques, or timestamps to generate a session key to provide secure communication between user and server and resists all possible security attacks, such as Man-in- the-Middle attack, Impersonation attack, Insider attack and many more. The scheme proved to be better when compared to Xie and Chen scheme in terms of security and performance. Keywords- Multi-server, authentication scheme, Diffie- Hellman, Hash-function. I. INTRODUCTION With variety of services present in the interest today, it has become extremely essential to authenticate and secure the flow of information to appropriate recipients. A multi server authentication scheme is a mechanism wherein a set of multiple servers authenticate a user before allowing access to the services of any server. Generally, there are three participants in a multi-server authentication scheme: users, a group of servers, and the authentication center [17]. In this scheme, the remote user registers only once on the authentication center and is allowed to access services from any of the multiple servers without repeating the registration process. When the single-server authentication schemes were used on multi-server architecture, they became highly inconvenient and impractical. In 2001, Li et al [6] came up with a simple password authentication scheme for multi- server architecture that used a pattern classification system based on neural networks without any verification table. But, it required time to train the neural networks. The scheme cannot resist password guessing attacks and insider attack [13], did not provide mutual authentication and session key agreement [12] and computation and communication costs were extremely high. In 2003, Lin et al [3] gave a multi- server scheme using ElGamal digital signature and geometric transformations on an Euclidean plane. In 2008, Lee et al. [4] proposed an authenticated key agreement scheme using mobile equipment. However, their scheme cannot add server freely that increases the registration center s card-issue cost. Juang [14] also proposed a multi-server authentication scheme that used symmetric encryption techniques without verification table. But, that scheme suffered from insider attack [8]. In 2008, Tsai [5] proposed an efficient multi- server authentication scheme based on one-way hash function without a verification table. Yoon and Yoo [1] claimed that the Jung and Tsai scheme are vulnerable to privileged insider attacks. Zhu et al [2] claimed that both the scheme Liao and Wang [15] and Tsai [5] suffers from the server spoofing attack and the parallel session attack and proposed a new scheme. Chen et al. [16] showed that Tsai s scheme fails against server spoofing attack, and proposed a novel protocol. Xie and Chen [10] claimed that Chen et al scheme [16] cannot resist off-line password guessing attack and proposed a new scheme. However, Xie and Chen scheme [10] cannot handle attacks like insider attack, impersonation attack and forward secrecy attack. This paper proposes Diffie-Hellman based Smart-card Multi-Server Authentication Scheme which thwarts possible security attacks without using any verification table, or encryption techniques to produce a session key and performs better than Xie and Chen scheme [10]. The structure of the paper is as follows: section 2 reviews the Xie and Chen scheme [10] and its weaknesses; the proposed scheme is presented in section 3; the security and performance analysis comparison with Xie and Chen scheme [10] is done in section 4 and 5 respectively and finally paper is concluded along future work in the last section. II. REVIEW OF XIE AND CHEN SCHEME Table I. lists all the relevant notations used in the paper. In 2010, Xie and Chen proposed an authentication scheme using hash-function for multi-server environment [10]. This proposed scheme takes s servers, n remote users and an authentication centre AC. At the beginning, AC randomly chooses two secret numbers x and y, and generates h(SIDj || y) for each server Sj with identity SIDj. There are four phases: User Registration, Login, Authentication Centre Authenticates Remote User and Server and Mutual Authentication and Session Key Generation. TABLE I. NOTATIONS Symbol Definition U, Sj User and jth server, respectively AC Authentication Center ID, Pw U s identity and password, respectively SID Server Sj identity x AC s random number for U y AC s random number for Sj K User random nonce h(.) Secure one-way hash function 2014 Sixth International Conference on Computational Intelligence and Communication Networks 978-1-4799-6929-6/14 $31.00 2014 IEEE DOI 10.1109/.173 809 2014 Sixth International Conference on Computational Intelligence and Communication Networks 978-1-4799-6929-6/14 $31.00 2014 IEEE DOI 10.1109/CICN.2014.173 808 Symbol Definition Bit-wise Exclusive-OR(XOR) operation || Concatenation operation A  B: M A sends message M to B p Public large prime number g Public primitive element in the GF(p) a, b, c, d, a , b Ephemeral random numbers in {1, ,p-1} generated by user, server and authentication center x, y Information held by AC A. User Registration Phase: The user chooses identity ID and password Pw and sends them to AC through a secure channel. AC performs following computation:  U  AC: ID, Pw AC computes Ru = h(ID||x), C0 = Ru h(Pw).  AC  U: C0 AC sends C0 to U to store it on smart card. B. Login The following computation is performed when user U wants to generate session key with server Sj with identity SID. U inserts smart card into terminal device and enters password. The smart card computes and sends ID, SID, C1 to AC and ID, C1 to server Sj. Ru = C0 h(Pw), C1 = h(SID||Ru) Nc. C. Authentication Centre Authenticates Remote User  Sj  AC : ID , SID , C1 , C2 On receiving ID and C1, Sj generates random nonce Ns and computes C2 = h(ID||h(SID||y)) Ns. Sj sends ID, SID, C1, C2 to AC.  AC U: C3 , C4; AC  Sj: C5 , C6 On receiving messages, AC extracts Nc and Ns and generate two random nonce Nrc1 and Nrc2 for computing C3, C4, C5, C6 Nc = h(SID||h(ID||x)) C1, Ns = h(ID||h(SID||y)) C2, C3 = Nrc1 h(SID||h(ID||x)), C4 = h(Nc||Nrc1||ID), C5 = Nrc2 h(ID||h(SID||y)), C6 = h(Ns||Nrc2||SID). AC sends C3, C4 to U and C5, C6 to Sj.  U  AC : C7 ; Sj  AC : C8 On receiving C3 and C4, U retrieves Nrc1 = C3 h(SID||h(ID||x)), computes C4 = h(Nc||Nrc1||ID) and verifies with C4. If it equals then communication is accepted and U computes C7 = h(Nrc1||Nc||ID) and sends it to AC, else the communication is rejected. Similarly, Sj retrieves Nrc2 = C5 h(ID||h(SID||y)) and computes C6 = h(Ns||Nrc2||SID) and verify its equality with C6. If it equals then communication is accepted, and Sj computes C8 = h(Nrc2||Ns||SID) and sends it to AC, else communication is rejected.  AC  U: C9 ; AC  Sj , C9 On receiving C7 and C8, AC computes C7 = h(Nrc1||Nc||ID), C8 = h(Nrc2||Ns||SID), AC verifies them with received C7 and C8, respectively. If both are same, AC computes and sends C9 to U and Sj. C9 = h(ID||h(SID||y)||Ns+1||Nrc2+2) h(SID||h(ID||x)||Nc+1||Nrc1+2). D. Mutual Authentication and Session Key Generation Phase:  Sj  U : C10 On receiving C9, Sj extracts C10 and generates random nonce Ns2 to send C10 to U. C10 = C9 h(ID||h(SID||y)||Ns+1||Nrc2+2), C10 = Ns2 C10 .  U  Sj : C11 On receiving C9, U extracts C11 and generates random nonce Nc2 to compute C11 to Sj. C11 = C9 h(SID||h(ID||x)||Nc+1||Nrc1+2), C11 = Ns2 C11 .  Sj  U : e3 On receiving C11, Sj retrieves Nc2 to compute e3 and send it to U Nc2 = C11 h(ID||h(SID||y)||Ns+1||Nrc2+2), e3 = h(Nc2||Ns2).  U  Sj : e4 On receiving, U retrieves Ns2 to compute e4 and send it to Sj. Ns2 = C10 (SID||h(ID||x)||Nc+1||Nrc1+2), e4 = h(Ns2||Nc2).  Mutual Authentication and Session Key U and Sj compute e3 and e4 and verify them with received values respectively, i.e. e3 and e4.as: e3 = h(Nc2||Ns2), e4 = h(Ns2||Nc2), If both values are equal, user U and server Sj define a Session Key as: (h(ID||h(SID||y)||Ns+1||Nrc2+2)||h(SID||h(ID||x)||Nc+1||Nrc1 +2)||Ns2+1||Nc2+2). WEAKNESSES OF XIE AND CHEN SCHEME  Insider Attack: The user registers at AC with password (Pw). Any insider at AC would easily know user password.  Forward Secrecy Attack: As in said in [10], session key is not forward secret in Xie and Chen scheme. III. THE PROPOSED SCHEME With In this section, the proposed authentication scheme using Diffie-Hellman is described. There are s servers, n users and an authentication centre(AC). At the beginning, AC randomly selects secret values for x and y . p and g are two publicly known variables, where p is a large prime 810 809 number and g is the generator of order p-1 in the group <Zp*,x>. The proposal consists of four phases: A. Server registration phase, B. User Registration phase, C. Authentication of Remote User and Server phase and, D. Mutual Authentication and Session Key Generation. A. Server Registration Phase: Each Server S of identity SID registers at AC.  S  AC: SID In this, S sends identity SID to the AC by a secure channel.  AC S: h(SID||y) h(SID||y) AC sends computed value to server S by a secure channel. B. User Registration Phase: User U registers at AC by entering his/her ID and password.  U  AC: ID, (Pw K) On receiving the ID , AC computes: Ru = h(ID||x), C0 = Ru h(Pw K).  AC  U: C0 AC sends C0 to user over a secure channel and stores it on smart card. C. Authentication of Remote User and Server: In this phase, AC allows any registered user to login and access registered servers as follows:  U  AC: ID*, SID*, C1, C2; U  Sj: ID* At terminal device, User U inserts his smart card, password and target server Sj identity SID* with which user wants to communicate. The terminal computes Ru = C0 h(Pw K), C1 = (ga)(mod p); where a Z*p, C2 = h(Ru||SID*||C1). Terminal transmit ID*, SID*, C1, C2 to AC and ID* to Sj over public network.  Sj  AC: ID*, SID*, C3, C4 On receiving U message, Sj computes: C3 = (gb)(mod p); where b Z*p, C4 = h(h(SID||y)||ID*||C3). Sj sends ID*, SID*, C3, C4 to AC over the public network.  AC U: C5, C6; AC  Sj: C7, C8 On receiving messages, AC computes and verifies: h(h(ID*||x)||SID*||C1) = C2?, h(h(SID*||y)||ID*||C3) = C4?, If both equals, AC authenticates both user U and target server Sj . If either is not equal, AC terminates the session. On authentication, AC chooses randomly c Z*p and d Z*p and computes: C5 = (gc)(mod p), K1 = (C1)c(mod p), C6 = h(K1||h(ID*||x)||SID*), C7 = (gd)(mod p), K2= (C3)d(mod p), C8 = h(K2||h(SID*||y)||ID*). Then, AC communicates C5, C6 to U and C7, C8 to Sj over public network.  U  AC: C9; Sj  AC: C10 U verifies C6 as follows, K1 = (C5)a(mod p), h(K1||h(ID||x)||SID*) = C6?, If verified, U authenticates AC and sends C9 to AC. C9 = h(K1+1). If not, U terminates the session. Similarly, Sj verifies C8: K2 = (C7)b(mod p), h(K2||h(SID||y)||ID*) = C8?, If verified, Sj authenticates AC and send C10 to AC. C10 = h(K2+1). If not, Sj terminates the session.  AC  U: C11; AC  Sj: C11 On receiving C9 and C10, AC verifies: h(K1+1) = C9?, h(K2+1) = C10?, If both verifies, AC computes C11 to send to U and Sj. C11 = h(h(ID*||x)||SID*||K1+2) h(h(SID*||y)||ID*||K2+2). D. Mutual Authentication and Session Key Generation Phase This is the last phase where user U and target server Sj generate session key as:  U  Sj: C14 On receiving C11 , U chooses a Z*p and perform following computation: C12 = C11 (h(h(ID||x)||SID*||K1+2), C13 = (ga )(mod p), C14 = C13 C12, U transmits C14 to Sj over public network.  Sj  U: C17 Similarly, Sj computes: C15 = C11 h(h(SID||y)||ID*||K2+2), C16 = (gb )(mod p), C17 = C16 C15. Sj sends C17 to the U.  U  Sj: e1 On receiving C17, U performs: C16 = C17 h(h(ID||x)||SID*||K1+2), e1 = h(C16 ||C13). U sends e1 to Sj over public network.  Sj  U: e2 Similarly, Sj computes e2 and sends to U over network. C13 = C14 h(h(SID||y)||ID*||K2+2), e2 = h(C13 ||C16).  Mutual Authentication and Session Key This is session key generation step. At the recipient of e1 and e2, user U and target server Sj compute e3 and e4. If both are equal to e2 and e1 respectively, U and Sj authenticate each other and produce session key else terminate the session without session key generation. e3 = h(C13||C16 ) and 811 810 e4 = h(C16||C13 ), Session Key defined at user U and target server Sj : h(h(h(ID||x)||SID||K1+2)||h(h(SID||y)||ID||K2+2)||C13 +2||C16+2). IV. SECURITY ANALYSIS  Password Guessing Attack: The proposal resists on- line password guessing as AC verifies user before generating session key with server, i.e. in step C, password guessing attack will fail. The offline password guessing attack will also fail as password is only used by user and no important information is generated using the password.  Replay Attack: The replay attack cannot occur as messages communicated among server, user and AC contain elements of freshness such as a, b, c, d, a , b .  Impersonation Attack: If attacker impersonates as valid user or valid server, he must know user s h(ID||x), C1 and C2 and server s h(SID||y). The server is provided only with user ID for computation. Thus, the attacker will not get the correct authentication key.  Insider Attack: User registers at AC with password of the form (Pw K) instead of (Pw). So, any insider at AC won t know the user password till value of K is not known, which is a randomly generated value.  Stolen-Verifier Attack: There is no verification table at AC and server because of which stolen-verifier attack is impossible. The AC and server authenticates user on the values provided to them.  Man-In-The-Middle Attack: Since the message generated by server and user for AC contains secret identity of user and server, the messages generated by adversary would fail to get authentication by AC. The adversary would not know the values of x and y .  Server Spoofing Attack: Attacker cannot masquerade as Sj. Server does not contain any verification table, so they cannot authenticate any user directly. The attacker must know h(SID||y) to cheat AC.  Authentication Center Spoofing Attack: Attacker cannot masquerade as AC. User and Server use (ID||x) and (SID||y) in C6 and C8 to authenticate AC.  Forward Secrecy Attack: If x and y discloses, attacker has to know four messages C1, C2, C3 and C4 to authentication from AC. Since C1 and C3 are computed on random values, the attacker will not guess them accurately and generate session key.  Denning-Sacco Attack: The Denning-Sacco attack is where an attacker compromises an old session key and tries to find a long-term private key (e.g. user password or server private key) or other session keys[2]. The proposal resists this type of attack as the attacker cannot get to know K1 and K2 and spoof other entities which are in communication with it.  Mutual Authentication Key Security: The mutual authentication key cannot be calculated by outsider since it contains random values K1, K2, user secret key and server secret key.  Security of Session Key: The session key cannot be calculated by anyone except server and user as it contains values C13, C16, user authentication key, server authentication key. Only, the authenticated server and authenticated user can generate these values and so the session key. Thus, the session key is secure. TABLE II. SECURITY PROPERTIES Security Properties Our Proposed Scheme Xie and Chen Scheme Insider Attack Yes No Forward Secrecy Attack Yes No Impersonation Attack Yes Yes Password Guessing Attack Yes Yes Replay Attack Yes Yes Stolen-Verifier Attack Yes Yes Man-In-The-Middle Attack Yes Yes Server Spoofing Attack Yes Yes Authentication Center spoofing Attack Yes Yes Denning-Sacco Attack Yes Yes Authentication Key Security Yes Yes Session Key Security Yes Yes V. PERFORMANCE ANALYSIS The performance analysis for proposed scheme is done on the bases of number of hash-functions used at each end, i.e., User, Authentication Centre (AC) and Remote Server. Table III shows that our proposed scheme uses less hash functions than Xie and Chen scheme [10]. TABLE III. NUMBER OF HASH FUNCTIONS USED AT EACH END Different Ends Our Proposed Scheme Xie and Chen Scheme User 8 9 Server 5 8 AC 8 10 VI. CONCLUSION AND FUTURE WORK The paper proves that the proposed scheme is better than Xie and Chen scheme in terms of security and performance - both the schemes do not use encryption, verification tables and timestamp for authentication. However, Xie and Chen scheme is not secure against Insider Attack and Forward Secrecy Attack, whereas the proposed scheme improves upon the Xie and Chen scheme exactly in these terms i.e. is secure against Insider and Forward Secrecy Attack. In addition, the proposed scheme uses lesser no of hash function during authentication as compared to Xie and Chen 812 811 scheme. We may further enhance efficiency by reducing hash-functions. REFERENCES [1] Eun-Jun Yoon, Kee-Young Yoo*, Robust Multi-Server Authentication Scheme , IEEE sixth IFIP International Conference on Network and Parallel Computing(2009). [2] H. Zhu, T. Liu, J. Liu, Robust and Simple multi-server authentication protocol without verification table , Ninth International Conference on Hybrid Intelligent Systems, 2009. [3] I. C. Lin, M. S. Hwang, and L. H. Li, A new remote user authentication scheme for multi-server architecture , Future Generation Computer System January, 19:13 22, 2003. [4] J. H. Lee, D. H. Lee, Efficient and Secure Remote Authenticated Key Agreement Scheme for Multi-server Using Mobile Equipment , Proceedings of International Conference on Consumer Electronics, pp. 1-2, January 2008. [5] J. L. Tsai, Efficient multi-server authentication scheme based on one-way hash function without verification table , Computers & Security, 27(2008):115-121, 2008. [6] Li LH, Lin IC, Hwang MS, A remote password authentication scheme for multi server architecture using neural network , IEEE Transactions on Neural Network 12(06)(2001)1498-1504. [7] Lamport L., Password Authentication with insecure communication . Communication of the ACM November 24 (11) (1981)770-772. [8] M.L. Das, A. Saxena, and V.P. Gulati, A dynamic ID-based remote user authentication scheme , IEEE Transactions on Consumer Electronics, vol. 50, pp. 629-631, 2004. [9] MH Shao, YC Chin, A Novel Dynamic ID-based Remote User Authentication and Access Control Scheme for Multi-Server Environment , 10th IEEE International Conference on Computer and information Technology (CIT 2010), 2010. [10] Qi Xie and Deren Chen, Hash function and smart card based multi- server authentication protocol , IEEE WASE International Conference on Information Engineering, 2010. [11] Sun HM, An efficient remote use authentication scheme using smart cards , IEEE Transactions on Consumer Electronics 46(4) (2000)958- 961. [12] TY Chen, MS Hwang*, CC Lee, JK Jan, Cryptanalysis of a secure dynamic ID based remote user authentication scheme for multi-server environment , Fourth International Conference on Innovative Computing, Information and Control, 2009. [13] W. C. Ku, Weaknesses and drawbacks of a password authentication scheme using neural networks for multi-server architecture , IEEE Transactions on Neural Networks, 2005. [14] WS Juang, Efficient multi-server password authenticated key agreement using smart cards , IEEE Transactions on Consumer Electronics 50(1)(2004)251-255. [15] Y. P. Liao, S. S. Wang, A secure dynamic ID based remote user authentication scheme for multi-server environment , Computer Standards & Interfaces, 31(1): 24-29, 2009. [16] Y. L. Chen C. H. Huang J. S. Chou A novel multi-server authentication protocol , http://eprint.iacr.org/2009/176, 2009. [17] H. Mittal, S. Porwal, A Remote Authentication Methodology For Secure Communication In Distributed Network , International Journal of Research & Development in Technology and Management Science Kailash, Volume 21, Issue 1, March 2014 ISBN: 978-1- 63102-445-0. 813 812 View publication stats