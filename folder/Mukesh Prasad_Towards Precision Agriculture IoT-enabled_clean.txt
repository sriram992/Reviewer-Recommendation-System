See discussions, stats, and author profiles for this publication at: https://www.researchgate.net/publication/350475817 Towards Precision Agriculture: IoT-Enabled Intelligent Irrigation Systems Using Deep Learning Neural Network Article in IEEE Sensors Journal March 2021 DOI: 10.1109/JSEN.2021.3069266 CITATIONS 60 READS 1,559 5 authors, including: Some of the authors of this publication are also working on these related projects: Soft Computing View project Salp Swarm Algorithm (SSA): theories, variants, and applications View project Pankaj Kashyap Jawaharlal Nehru University 21 PUBLICATIONS 202 CITATIONS SEE PROFILE Sushil Kumar Jawaharlal Nehru University 133 PUBLICATIONS 2,077 CITATIONS SEE PROFILE Ankita Jaiswal Jawaharlal Nehru University 9 PUBLICATIONS 118 CITATIONS SEE PROFILE Amir H Gandomi University of Technology Sydney 574 PUBLICATIONS 32,501 CITATIONS SEE PROFILE All content following this page was uploaded by Pankaj Kashyap on 30 March 2021. The user has requested enhancement of the downloaded file. 1530-437X (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JSEN.2021.3069266, IEEE Sensors Journal IEEE SENSORS JOURNAL, VOL. XX, NO. XX, MONTH X, XXXX 1 XXXX-XXXX XXXX IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. I. INTRODUCTION T a growth rate of 1.1% annually, the forecasted figure of the world population in 2050 is around 9.7 billion from the current 7.7 billion population [1]. Additionally, rapid urbanization and climate change are posing threats to arable land and freshwater supplies on earth. To feed this large population, agriculture is the fundamental sector to provide them with food and promote sustainable economic growth globally. About 97% of the water on the globe is salty, and the remaining 3% is freshwater [2]. Whereas only one-third of freshwater is flowing into rivers, lakes, underground, and two- thirds of the world s freshwater exists in frozen form in polar ice caps and glaciers [3]. In most developing countries, agriculture accounts for 70% of freshwater for irrigation [4]. Thus, efficient use of freshwater during irrigation in the arable land is the most important issue to reduce the cost (e.g., electricity bills, time) pertain to increase the crop yields. P. Kashyap, S Kumar, A. Jaiswal, are with the School of Computer & Systems Sciences, Jawaharlal Nehru University, New Delhi, India. Email: pankaj76_scs@jnu.ac.in, skdohare@mail.jnu.ac.in, ankita79_scs@jnu.ac.in, manoj26_scs@jnu.ac.in M. Prasad and A. H. Gandomi are with the Faculty of Engineering and Information Technology, University of Technology Sydney, Ultimo, NSW 2007, Australia (e-mail: , mukesh.prasad@uts.edu.au, gandomi@uts.edu.au) Globally, irrigation is scheduled according to crops visual inspection by farmers, and as a result, about 50% of water is wasted by traditional irrigation systems [5]. Controlled irrigation approaches such as sprinkle irrigation, drip irrigation, and furrow irrigation reduce the wastage of water volume by 30-70% [6]. However, due to the open-loop structure, these approaches fail to maintain accurate water content in the soil, which ultimately reduces the quality and quantity of crops because under or over-irrigation reduces the soil nutrients [7]. Thus, there is a need of feedback on integrated precision irrigation practices to efficiently utilize water without harming the development of crops. The precision irrigation takes soil moisture, climate information, rainfall depth, and crop type to estimate the accurate amount of water volume and irrigation period needed to augment crop yields, altogether reducing farmers labour costs. The Internet of Things (IoT) provides a platform for smart agriculture, wirelessly connecting several soil sensors and context-aware sensors, different hardware (e.g., water pumps, sprinklers, solar system devices, etc.), and data analytical applications that augment farmers ability to resolve complicated agricultural issues such as soil preparation, water feed estimation, yields prediction, etc. throughout the whole growing and harvesting cycle [8]. Several mechanistic irrigation scheduling approaches have been proposed using most leverage farming land parameters-soil moisture content Towards Precision Agriculture: IoT-enabled Intelligent Irrigation Systems Using Deep Learning Neural Network Pankaj Kumar Kashyap, Sushil Kumar, Senior Member IEEE, Ankita Jaiswal, Mukesh Prasad, Senior Member IEEE, Amir H. Gandomi, Senior Member IEE Abstract Recently, precision agriculture has gained substantial attention due to the ever-growing world population demands for food and water. Consequently, farmers will need water and arable land to meet this demand. Due to the limited availability of both resources, farmers need a solution that changes the way they operate. Precision irrigation is the solution to deliver bigger, better, and more profitable yields with fewer resources. Several machine learning-based irrigation models have been proposed to use water more efficiently. Due to the limited learning ability of these models, they are not well suited to unpredictable climates. In this context, this paper proposes a deep learning neural network- based Internet of Things (IoT)-enabled intelligent irrigation system for precision agriculture (DLiSA). This is a feedback integrated system that keeps its functionality better in the weather of any region for any period of time. DLiSA utilizes a long short-term memory network (LSTM) to predict the volumetric soil moisture content for one day ahead, irrigation period, and spatial distribution of water required to feed the arable land. It is evident from the simulation results that DLiSA uses water more wisely than state-of-the-art models in the experimental farming area. Index Terms Deep Learning, Long Short Term Memory, Internet of Things, Precision Agriculture, Sensor . A LSTM Model Irrigation planner Farmer / Authorize d user Irrigation Schedular Deep Learning Intelligent Irrigation System Actuator Anchor Rain-gauge Sensor Soil Moisture sensor Humidity Sensor Temperature Sensor Water Sprinkle Authorized licensed use limited to: NATIONAL INFORMATICS CENTRE. Downloaded on March 30,2021 at 10:46:09 UTC from IEEE Xplore. Restrictions apply. 1530-437X (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JSEN.2021.3069266, IEEE Sensors Journal 2 IEEE SENSORS JOURNAL, VOL. XX, NO. XX, MONTH X, XXXX and climate data to estimate the volume of water at specific time intervals [9-10]. Owing to the open-loop structure, these programmed irrigation systems do not ensure optimum irrigation planning decisions to provide promising healthy crop development while maintaining the soil nutrients. Furthermore, these methods do not include models for processing the real-time dynamics of soil moisture content; eventually, the irrigation system is not adaptable to different climate conditions and regions [11]. In recent years, data-driven machine learning (ML) models for irrigation [12-15] are more preferred over physical/mechanistic models [16-17] to predict soil moisture content because data-driven models require less data for calibration as compared to mechanistic model calibration. In addition, ML models process spatial and temporal data easily in less time and show good predictive performance over physical models. The ML model-based irrigation systems have a closed-loop controller that learns from calibration, in which the system itself employs feedback from the comparison between pre-processed data and measured real-time data. In [13-14], authors have suggested a fuzzy-logic decision system to predict the volumetric soil moisture content to estimate optimum water needs, whereas in [15], a neural network (NN)-based model has been developed for water estimation using a threshold value of water stress levels. The aforementioned traditional ML approaches show good performance over physical models, but not robust in different environmental conditions, i.e., not scalable to new regions. These models are limited to those regions in which the model is calibrated and developed using those regions data. Limited learning ability makes the traditional artificial NN lose the information of previously processed information and chaotic in complex agriculture systems over time-series dynamics. Recurrent Neural Network (RNN) adds another feature to the traditional feedforward neural network (FFNN), i.e., the ability to preserve information from previous time steps using memory cells [18]. The strong learning ability and self-looped memory cells of the RNN model ensure accurate prediction of volumetric soil moisture content. The Long Short-Term Memory network (LSTM) is a specially designed RNN to represent the nonlinear relationship between input and output by sequentially processing the long-time series dynamics [19]. In [20], the authors have proposed a model to predict soil moisture content using deep learning in the context of soil moisture active passive mission of NASA. In [21], the authors have proposed a hydrological LSTM model to predict irrigation depth based on temporal dynamics: water diversion, precipitation, temperature, and evaporation. The forecast of soil moisture content by the aforementioned models is time- consuming because they are not self-adaptable to new regions. In [22], the authors have found that LSTM-based model shows better performance than the traditional NN model. Prompted by the previously mentioned challenges, in this paper we present a deep learning NN-based IoT-enabled intelligent irrigation system for precision agriculture (DLiSA). Further, an LSTM RNN model has been employed to predict volumetric soil moisture content of the next day based on the historical temporal dynamics of climate and soil. The proposed model uses a closed-loop approach, which takes feedback from soil sensors and climate sensors that keeps its functionality higher in the unpredicted climate of any region. The major contributions of the paper are as follows: 1) Firstly, a system model is presented for precision irrigation that includes a smart irrigation model and associated sensing IoT network model deployed on farmland. 2) Secondly, LSTM RNN model is proposed to predict the volumetric soil moisture of the next day with their one-step training procedure. 3) Thirdly, the irrigation scheduler is presented to decide whether irrigation is required or not. Water volume is estimated in the case of irrigation requirement and then irrigation period is also evaluated using sprinkled deployment and its flow rate. 4) Fourthly, LSTM RNN based intelligent irrigation algorithm DLiSA is presented with the analysis of time complexity. 5) Finally, the proposed model is calibrated and tested using real time-series data of three different regions. Further, the performance of DLiSA is compared with state-of-the-art algorithms subject to the prediction of soil moisture content, soil water deficit and water volume irrigated over a month. We organize the remaining paper as follow: In Section II, related works are reviewed. In Section III, IoT enabled Intelligent Irrigation systems are presented. In Section IV, the results of the simulation are discussed and analyzed. Finally, in Section V, the conclusion of the paper is presented. II. RELATED WORK In recent years, numerous researcher design ML-based irrigation control models for optimum use of available freshwater resources [12-15, 23]. In [12], the authors have proposed a smart irrigation decision support (SIDSS) system for weekly irrigation using climate and soil information. The SIDSS uses the Adaptive Neuro-Fuzzy Inference System (ANFIS) to predict the volume of water for a week. In [13], a control irrigation system based on the Takagi-Sugeno fuzzy (TSF) model has been proposed to optimize the water loss from hydraulic systems. Furthermore, to optimize the parameters of TSF, a Cuckoo search algorithm with quantum mechanics has been used. In [23], a linear time series model has been proposed to predict the soil moisture deficit at the root zone. However, these models are better in irrigation control, but combining with data analytic techniques makes their calibration more time-consuming and limited only to the specific region where these are calibrated. In [24], the authors have compared the performance of support vector machine (SVM), ANFIS, and HYDRA-2D- based models for the prediction of soil moisture content using soil moisture content and metrological time-series information. The HYDRA-2D model outperforms other ML models, but none of them is suitable for a different range of soil moisture content and precipitation. In [25], the authors have claimed that the nonlinear stochastic model generates the prediction of soil moisture content better than least squares SVM models, back-propagated artificial NN, and ANFIS- based irrigation model. A data-driven methodology using SVM and relevance vector machine model has been proposed to predict the soil moisture content of the field [26]. In [27], data assimilation has been coupled with SVM, and a Kalman Authorized licensed use limited to: NATIONAL INFORMATICS CENTRE. Downloaded on March 30,2021 at 10:46:09 UTC from IEEE Xplore. Restrictions apply. 1530-437X (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JSEN.2021.3069266, IEEE Sensors Journal Pankaj K. Kashyap et al.: Towards Precision Agriculture: IoT-enabled Intelligent Irrigation Systems Using Deep Learning Neural Network 3 filter-based model has been proposed to predict the soil moisture content at different depth levels. However, these Fig. 1. IoT-LSTM network-based Irrigation Model models perform well in the prediction of soil moisture content but suffer from excessive time-consuming data pre-processing steps and reliance on user intervention. In [28], the authors have considered the problem of the deployment pattern of sensors in farmland and proposed a geometric-based deployment model for precision agriculture. Recently, the fuzzy NN models in [29, 31-33], tunnel farming and green roof farming are used as test cases to estimate water needs for different crops. As a matter of fact, these proposed models mostly sense the quality of raw information from sensors, but they fail to discuss how real-time information is processed accurately to predict the soil moisture content. In [33], LSTM rainfall-runoff model has been proposed and calibrated using catchment attributes (large-sample training dataset) and compares its performance with a soil moisture accounting model. Further, the learning capability of the LSTM model from long-term temporal dynamics proved that it is the most promising solution for smart irrigation. In [34], the authors have proposed a flexible framework for intelligent irrigation using IoT network. It is evident from the aforementioned studies that an intelligent agriculture system is in demand, and the timely analysis of the crop and climate is necessary for precision irrigation. III. IOT-ENABLED INTELLIGENT-IRRIGATION SYSTEM In this section, the design of the proposed DLiSA is presented in detail. A. System Model An irrigation model and sensing network model are presented to elaborate the architectural view of DLiSA and basic structural design of the IoT network for irrigation, respectively. 1) Smart Irrigation Model The proposed irrigation model consists of four main components to support the end user s (farmer s) decision to irrigate the farmland with a suitable amount of water (see Figure 1). The first component includes a set of nodes (e.g., soil sensors, environmental sensor-actuator nodes, rain-gauge sensors). It is assumed that wireless sensor nodes are deployed in a planned way inside the farmland to measure air temperature, air humidity, soil moisture, and soil temperature. Actuator nodes have wired connections with water valves/sprinkles to control the sprinkle flow rate. Weather forecasting reports from a weather station or rain-gauge sensors are obtained as rain level are also part of the first component. The second component includes anchor nodes and servers. Anchor nodes forward received data from sensors to the radio gateway, which further forwards these data to a server for storage. The third component includes a deep LSTM RNN model to predict the volumetric soil moisture content for the next day based on the previous day s climate and soil information. Furthermore, soil water retention capability (using a soil classifier model) and crop information (root growth) are sent to the irrigation scheduling system to estimate the volume of water need for irrigation. Additionally, the irrigation planner calculates the irrigation period up to that tenure water sprinkles are opened according to the water flow rate to satisfy the estimated volume of water. The output of the third component is sent to the authorized end-user interface (e.g., smartphone with irrigation application), which is part of the fourth component. The end-user/farmer may agree with the predicted irrigation plan or alter the irrigation plan that is sent back to the irrigation planner that regulates the irrigation system. The irrigation planner sends irrigation commands to the actuator nodes through the anchor nodes. From there, the commands reach the water valves/sprinklers. 2) Sensing Network Model It is considered that a farmland of area , where set of sensor nodes are located at the predefined positions ( , ) , = 1, . to obtain the spatial and temporal information such as air temperature ( , ), air humidity ( , ) , soil moisture ( , ) , and soil temperature ( , ), where is the time instant (daily basis) of the soil and surrounding environment. A set of anchor nodes are located on the farmland ( , ) , = 1, . , which provides multipath wireless connectivity to receive and transmit information from sensors implanted on farmland to a gateway. The actuator nodes are placed at the predefined positions ( , ) , = 1, . and are wirelessly connected to the anchor nodes and have wired connection with water valves/sprinklers. Additionally, the anchor nodes control the actuator nodes to give commands to the water valves/sprinklers. The actuator node is designed to work in binary i.e. ( ) = 0, close the water valves or ( ) = 1 , open the water valves. A rain-gauge sensor node is deployed connecting gateways at position to measure the rain level (precipitation), and is denoted by ( , ) where is a rain-gauge sensor. Thus, the IoT network consists of + + + 1 sensor nodes. B. The Hydrological Interpretation of LSTM Network In this section, a hydrological aspect of the LSTM-RNN model is proposed to predict one-day ahead volumetric soil moisture content. LSTM network relates to hydrological aspects because the memory units of LSTM RNN process the hydrological data: soil moisture content, soil temperature, rain level, air temperature and air humidity for the prediction of soil moisture content of one-day ahead [21]. The LSTM-RNN network feed with temporal input data, = [ 1, 2 , . . ] consisting of linear independent parameters of consecutive days, and these inputs are processed side-by-side in the memory units of the LSTM network to predict the next day soil moisture content ( + 1) as output. In each time LSTM Model Irrigation planner Gateway Farmer / Authorized user Water Sprinkle Soil Moisture Sensor Temperature/ Humidity sensor Solar powered Mist/Anchor node Irrigation Schedular Internet/ Server Authorized licensed use limited to: NATIONAL INFORMATICS CENTRE. Downloaded on March 30,2021 at 10:46:09 UTC from IEEE Xplore. Restrictions apply. 1530-437X (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JSEN.2021.3069266, IEEE Sensors Journal 4 IEEE SENSORS JOURNAL, VOL. XX, NO. XX, MONTH X, XXXX instant (1 ), the current input vector containing the information received from the sensor nodes i.e., = [ ( ), ( ), ( ), ( ), ( )] is processed in each memory unit of the LSTM network layer. The ( ), ( ), ( ), ( ), and ( ) are the average values of air humidity, soil moisture, soil temperature, and rain level during a day, respectively. For efficient learning of the proposed LSTM RNN model, all input data and observed output data are normalized, which can be done by subtracting the mean value of daily data and dividing the result by the standard deviation, where mean and standard deviation are calculated from the training period only for normalization purposes. Unit (t-1) Unit (t+1) tanh + Output Gate Input Gate Current input Forget Gate Output Previous input Next input ( + 1) 1 1 1 2 +1 Previous Cell state Previous Hidden state +1 +1 2 1 tanh Fig. 2. Information flow in one LSTM unit A 2-layered LSTM RNN network consisting of memory units in each layer is presented. The internal operation of LSTM memory unit is shown in Figure 2, which evaluates the mapping from the input sequence to output using the given Eq. (1) to Eq. (6). To control the flow of information in the LSTM network, each LSTM unit consists of hidden state vector , cell memory state vector , and three gates. The first gate resembles to forget gate; it controls which information of previous cell memory state 1 needs to be forgotten up to what degree. The output vector of the forget gate is given as: = ( + 1 + ), (1) where {0,1} is the sigmoid function, and are the adjustable weight parameters, and is the bias vector and altogether known as - learnable coefficients. For the first time instant ( = 0), and are initialized with a vector of zero length defined by the user input parameters of the network. In the next step, the cell memory state vector is updated using hyperbolic tangent layer and can be expressed as: = tanh( + 1 + ) , (2) where { 1,1} and , , are another set of learnable coefficients. Additionally, the output of the second gate (termed as input gate), controls the information to a certain degree that is used for updating the cell memory state in the current time instant, and is given as: = ( + 1 + ), (3) where {0,1} is sigmoid function, and , , are another set of learnable coefficients for the input gate. Now, by using the results of Eq. (1) and Eq. (3), the cell memory state vector is updated as follows: = 1 + , (4) where denotes the multiplication between the elements of the gate and cell memory state vector. The first term of Eq. (4) can be interpreted as what information of the previous cell memory state vector 1 needs to be forgotten ( close to zero) and what information needs to be stored ( close to one). Similarly, the second term can be interpreted as up to what degree new input information needs to be stored ( close to one) and what information can be ignored ( close to zero). The final or third gate is the output gate ( ), which controls up to what extent information of current cell memory state vector are flown to next hidden state , and is given as: = ( + 1 + ), (5) where {0,1}is sigmoid function, and , , and are the set of learnable coefficients for the output gate. Furthermore, the new hidden state is calculated using Eq. (4) and Eq. (5), and it can be expressed as: = tanh( ) (6) The last output of the LSTM layer is sent to a fully connected dense layer containing a single neuron, and the final predicted output is calculated as: = + , (7) where represents the output of the last LSTM layer, and and are the weight coefficients and bias term of the fully connected dense layer. C. The Training Procedure Fully Connected Dense Layer Randomly selected input Predicated output Mini-batch Calculate Loss L(RMSE) Update Learnable Coefficient Generate Mini-batch From Training samples Next iteration Prediction Generator t =1,2, .k Unit 2-Layer LSTM Network K units Unit Unit Unit Unit Unit 1 1 3 2 2 2 3 2 2 2 1 2 Fig.3. Illustration of one training step For training of the proposed LSTM RNN model, data (e.g., volumetric soil moisture, soil temperature, climate data (air temperature, air humidity), and rainfall) are obtained from the Indian metrological department. Once the model is trained, it is saved for the prediction of volumetric soil moisture content of one day ahead. A schematic representation to train the model in one iteration step using training data is shown in Figure 3. For training and testing purposes, the dataset is divided into a 70:30 ratio respectively to avoid network overfitting. In one iteration step, a subset of the training sample (mini-batch) is randomly taken from experience replay memory. The size of the mini-batch is a power of two (2 ), where is the number of samples that are taken to update the network learnable coefficients. The random sample in the training phase enhances the learnable ability of the proposed LSTM network. Every sample contains the input of a normalized dataset and one output (normalized observed) value for the previous days. The LSTM network simulates the predicted output on the given input and compares it with the observed value. The learnable coefficients and bias of the LSTM network are updated Authorized licensed use limited to: NATIONAL INFORMATICS CENTRE. Downloaded on March 30,2021 at 10:46:09 UTC from IEEE Xplore. Restrictions apply. 1530-437X (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JSEN.2021.3069266, IEEE Sensors Journal Pankaj K. Kashyap et al.: Towards Precision Agriculture: IoT-enabled Intelligent Irrigation Systems Using Deep Learning Neural Network 5 according to the loss function, which is calculated as a root mean-squared error (RMSE) with respect to the combined set of weights , and it is given by: ( ) = [ ( )2 =1 ] 0.5 (8) The loss function ( ) trends to zero estimate the good prediction value. The LSTM network weight is updated using a stochastic gradient descent method, which updates the network parameters 2 times (number of random samples in a mini-batch) in one iteration. The network weight is updated with learning rate {0,1} using the following equation: +1 = + ( ) (9) D. Irrigation Scheduling and Planning The irrigation scheduler and irrigation planner are proposed to estimate the spatial and temporal distribution of water needed for the farmland for the next day. 1) Irrigation Scheduler The goal of the irrigation scheduler is to maintain soil moisture content between lower and upper bounds. The upper bound denotes the maximum water retention capacity in the soil, and the lower bound is the threshold value of soil moisture content; anything below the lower bound indicates the need for irrigation. Triggering the irrigation plan on farmland depends upon the soil characteristic (i.e., water retention) capability. According to the predefined set of soil labelled ( ; = 1, . . ) by the United States Department of Agriculture (USDA) [35], the maximum likelihood estimation (MLE) technique classifies the soil type as follows: = { [ ( ( )), ( )]}, [ ; = 1, . . ], (10) where denotes the diffusion rate of average volumetric soil moisture and rain level. The average volumetric soil moisture content is defined as ( ( )) = 1 ( , ) =1 . Once the soil type is classified by MLE, then maximum soil water retention ( ) capacity in the farmland is calculated as: = ( , ( ))| = , (11) where (. ) is the empirical relation between soil type and soil moisture similar to that defined in paper [36]. In irrigation, the soil water retained at crop root at a time instant is equivalent to the depth of moisture content in soil (mm of water), and is given by: = 1000 ( ) , (12) where defines the thickness of plant root in meters, and (m3/m3) is volumetric soil content. The water deficit in soil ( ) of the farmland at time is given by: = (13) The upper bound of water deficit ( ) will be zero, when reaches to maximum soil water retention , i.e., ( ), and irrigation is not required. The lower bound for the water deficit varies with the crop growth rate. However, for the time instant , a threshold value is fixed by using farmers knowledge. Now to estimate the water deficit +1 at time + 1 (for the next day), the proposed LSTM RNN will be used. In case of water deficit in soil i.e. +1 , the irrigation process is scheduled to calculate the amount of water needed for irrigation for the next day. 2) Water Volume Estimation Once the evaluation scheduler decides to irrigate the farmland, this step calculates the amount of water needed in volume ( 1 3) by subtracting the average water deficit from rain level as: ( ) = 1 ( , ) =1 = 1 [ ( , ) ( , )] =1 ( ) (14) The water volume ( ) is the average value estimated by the sensor nodes implanted on the farmland at position , = 1, . . . 3) Irrigation Planner In this step, the irrigation planner determines the spatial and temporal distribution of water needed over the farmland. Towards this end, the information about actuators such as position, numbers, and water flow rate must be known. As previously defined, actuators control the water flow of each sprinkle ( ( ) {0,1}). For spatial distribution, the field is partitioned into some square sub-farmlands. Each sub- farmland contains actuator nodes because each actuator node acts differently according to the estimated need of water volume in each sub-farmland. Let us define , = 1, as sub-farmland irrigated by installed actuators in position , = 1, . . . The sensor nodes are deployed in sub-farmland such that = =1 , where , = 1, are the subset of nodes positions in .The period for irrigation at each actuator node is given as: ( ) = 1 ( , )| =1 , = 1,2, , , (15) where is the period for irrigation computed by each sensing node at their position as: ( , ) = ( , ) ( ) = ( ) ( , ) ( ) , (16) where ( , ) is the volume of water expressed as optimal irrigation period ( ) under an optimal water flow rate of sprinklers ( , ) at the sensor s deployed position. Overall, ( ), = 1, . is the irrigation period for all the actuators that represent the irrigation schedule computed by the event scheduler, i.e., soil moisture content is below the threshold value. Afterward, this information is given to the farmers application smartphone or authorized users. Thereafter, farmers analyze the estimated water capacity from the present capacity of water tanks/reservoirs, according to which farmers can modify the water need to plan and send back commands to the irrigation scheduler to start the irrigation process. If the water volume in reservoirs is less than Authorized licensed use limited to: NATIONAL INFORMATICS CENTRE. Downloaded on March 30,2021 at 10:46:09 UTC from IEEE Xplore. Restrictions apply. 1530-437X (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JSEN.2021.3069266, IEEE Sensors Journal 6 IEEE SENSORS JOURNAL, VOL. XX, NO. XX, MONTH X, XXXX the estimated water capacity, the motor pumps should fill the tank up to at least 80% of its capacity. Trained LSTM Model Air Temperature data Air Humidity Data Soil Moisture Data Predicted Soil Moisture Irrigation Scheduler Irrigation Needed? Irrigation Period Estimate Water Volume Execute Irrigation Plan Input at next Time step No Yes Crop Information (Root Growth) + Soil Information (Type) = [ ( ), ( ), ( ), ( ), ( )] ( ) = [ (1), (2) . ( )] Soil Temperature Data ( ) = [ (1) (2) . ( )] ( ) = [ (1) (2) . ( )] Rain Level Data ( ) = [ (1) (2) . ( )] ( ) = [ (1), (2) . ( )] ( + 1) +1 ( ) ( ) Fig.4. Block Diagram of Predictive Irrigation Schedule E. The LSTM RRN-based Irrigation Algorithm The pseudo-code (Algorithm 1) and block diagram (Figure 4) are presented to recite the proposed intelligent irrigation framework in a nutshell. The input parameters = [ ( ), ( ), ( ), ( ), ( ) ] are applied to the trained LSTM network subject to predict the volumetric soil moisture ( + 1) content one day ahead. The predicted volumetric soil moisture content conjunction with crop information (root growth) and soil information is used to estimate the irrigation timing and amount of water needed for the proper growth of crops, which ultimately gives the best economic return to farmers. Algorithm 1 LSTM RRN-based intelligent irrigation algorithm 1. Training: 1. Initialize the experience replay memory set and maximum number of episode 2. Initialize the learnable coefficient with random weights 3. Initialize 0 , 0 = 0 of length 4. For = 1, . 5. Sample the random mini-batch of size 2 6. For each = 1,2 . . 7. fetch any random sample from mini-batch = [ ( ), ( ), ( ), ( ), ( )] and 8. Calculate t (Eq. 1), t (Eq.2), t (Eq.3) 9. Update cell memory state (Eq.4) 10. Calculate (Eq. 5), (Eq. 6) 11. End for 12. Output : = { 1, . . } 13. Calculate simulated predicted output (Eq.7) 14. Evaluate loss function Eq.(8) 15. Update the LSTM weight parameter by performing stochastic Gradient descent loss optimization using Eq. (9) 16. End for 2. Prediction: 1. Observe the environment and collect the current day information = [ ( ), ( ), ( ), ( ), ( )] 2. Feed the current day as input to trained LSTM model 3. Predict the one day ahead soil moisture content ( + 1) 4. Store the tuple (input and output) in experience replay memory set. 3. Irrigation Scheduler: 1. Classify the soil Eq. (10) 2. Calculate maximum water capacity of farmland Eq .(11) 3. Take crop root growth information and soil type as input to estimate the water deficit +1 Eq. (13) 4. If +1 5. Estimate water volume ( ) for irrigation using Eq. (14) 6. Else 7. Input for next time step, i.e., go to Step 2. Prediction 4. Irrigation Planner: 1. Take sprinkler water flow rate ( ) as input 2. Estimated irrigation time for all actuators ( ) Eq.(16) 3. Execute the irrigation plan 1) Complexity Analysis The time complexity of the proposed algorithm mainly depends upon training procedure- line no.1 to line no. 3 initialization takes constant time of order (1). From line no. 6 to line 11 is the training procedure of the input taken from mini-batch of size 2 for the number of LSTM units as . Further, time complexity depends upon the total weight of the LSTM units in the layer. Each LSTM unit has four recurrent connections: the direct connection from the input layer to the output layer, forget gates, input gates, and output gates. Moreover, each unit has a total + numbers of inputs for the current time slots. Since four recurrent connections means a total 4( + ) weight associated with each unit. Moreover, each layer has number of LSTM units, thus overall 4 ( + ) weight associated with that LSTM layer. The weight associated with the output layer is , where the total number of outputs generated by the output layer is . The total weight corresponding to the three gates is 3. Therefore, total weights associated with the LSTM layer is computed as: = 4 ( + ) + + 3 (17) From line no. 12 to line no. 15 is predication and updating the network weight takes constant time (1) using stochastic gradient descent optimization. The training procedure runs for either the maximum number of the episode or until convergence. Thus, the overall time complexity of the training procedure is ( ) = ( ). Line no. 3 in the prediction procedure consumes (1) time to predict ( + 1) for the next day in the already trained LSTM RNN model. Whereas irrigation scheduler and irrigation planner consists of equations and if-else statement, and their execution takes place at a constant time of order (1). Thus, the overall time complexity of the proposed algorithm is evaluated as ( ). IV. SIMULATION AND RESULT ANALYSIS In this section, simulations are performed to evaluate the effectiveness and potentialities of the proposed intelligent irrigation system (DLiSA) using real-time information from three different sites. This section is divided into three parts. In Authorized licensed use limited to: NATIONAL INFORMATICS CENTRE. Downloaded on March 30,2021 at 10:46:09 UTC from IEEE Xplore. Restrictions apply. 1530-437X (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JSEN.2021.3069266, IEEE Sensors Journal Pankaj K. Kashyap et al.: Towards Precision Agriculture: IoT-enabled Intelligent Irrigation Systems Using Deep Learning Neural Network 7 the first part, simulation environment settings are discussed. In the second part, calibration and testing of DLiSA are discussed. The comparative analysis of the independent test fields is discussed in the third part. A. Simulation Environment Settings The simulation of the proposed DLiSA for soil moisture content prediction is implemented using Python 3.8.1. Numpy and pandas libraries are used for data preprocessing and data management. TensorFlow 1.2.1 framework is used to implement LSTM RRN. The primary in-built functions of the TensorFlow used in the proposed model simulation script are as follows: 1) RNN (input, weights, biases) to create and trained the LSTM network; 2) squaredelta() to evaluate the loss function in the network; 3) GradientDescentOptimizer(): to update the network weight parameters; and 4) tf.global_variables_initializer(): to initialize and process all the variables. We have used a two-layer LSTM network where the length of a cell/hidden state in each layer is set at 20. The dropout is set to be 10% to avoid overfitting to make the network more robust in learning features during the training period. We train the proposed model with a length of input data sequence for 1.5 years of metrological data to predict the soil moisture content for the next day. The size of the mini- batch is set at 256 samples, whereas the training interval (defined as the number of iterations after which the model is updated) is set at 10. For the performance analysis of the proposed model, two state-of-the-art models are considered, namely the feed- forward artificial neural network (FFANN) approach [32] and threshold-based (T-based) approach [37]. The FFANN approach predicts the volumetric soil moisture content daily, and irrigation time and volume of water are estimated to maintain the soil moisture content in the predefined range. In the T-based approach, continuous monitoring of soil moisture content is done during irrigation to control the actuators for opening or closing water valves according to a simple rule: ( ) = {1 ( ( )) < 0 ; a=1 .A (18) where is the threshold value of soil moisture content defined by a farmer as the target value. Two types of scale are used to quantify the performance of state of the art models: (i) Quantitative performance scale to estimate the saving of water volume as: ( ) = ( ) ( ) ( ) 100 (19) where ( ) represents the reference volume water used to evaluate percentage improvement in terms of water-saving by state-of-the-art models to measure water volume ( ); (ii) Qualitative performance scale to measure the crop growth rate in terms of water deficit of the soil ( ) as: ( ) = { < 15 15 70 > 70 (20) The water deficit is measured by expert farmers through observation of the color of crop leaf and the growth of branches. For experimental validation, we create a wireless architecture consisting of = 9 sensing nodes, = 3 anchor nodes, and = 3 actuators, deployed in the farming area of size 12 102 2. The sensor nodes are deployed close to the plant, and actuators are installed in proximity to electric water valves to open or close them according to the irrigation scheduler. The farming area is divided into three sub-farming areas ( = 3) to irrigate with different state-of-the-art models for comparison analysis (see Figure 5). The first farming area ( 1) is used for proposed DLiSA, the second farming area ( 2) belongs to the FFANN approach, and third farming area ( 3) is used for the T-based approach. B. LSTM-RNN model Calibration and Testing Acutator Sensor Anchor Node Gateway 1 2 3 Fig. 5. Wireless architecture placed in the farming area The calibration or training of the proposed DLiSA is performed using data obtained from a web-enabled geographical information system server named the India Water Resource Information System (India-WRIS) in collaboration with the Indian Space Research Organization, which provides a single-window system to obtain metrological data (air temperature, air humidity, rainfall level, etc.) and hydrological data (soil moisture and soil temperature) for different sites in the country [38-39]. We obtained the metrological data for three different sites (as Project River Basin Atlas of India), including air temperature, air humidity, and rainfall from the Indian metrological department over one and a half year 1 June 2017 to 31 Dec. 2018, i.e., 578 days data to capture at least the temporal dynamics of the full annual cycle. The volumetric soil moisture content and soil temperature in all sites are measured by cosmic-ray soil moisture sensors (Model CRS-1000/B) [40] having a horizontal range of 200 m and measuring depth for soil moisture up to 20 . The obtained data is resampled to daily average (24 ) and feed into DLiSA to predict the volumetric soil content for the next day for all sites. The details of the site and soil type (USDA agency) are used for training the proposed DLiSA, which are summarized in Table I. To avoid overfitting of the network, the dataset for each site is divided into a 70: 30 ratio i.e. 433 days of data for training and the remaining 145 days data for testing. This division is done to Authorized licensed use limited to: NATIONAL INFORMATICS CENTRE. Downloaded on March 30,2021 at 10:46:09 UTC from IEEE Xplore. Restrictions apply. 1530-437X (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JSEN.2021.3069266, IEEE Sensors Journal 8 IEEE SENSORS JOURNAL, VOL. XX, NO. XX, MONTH X, XXXX validate the proposed DLiSA using the posterior temporal dataset before the training period. TABLE 1. DETAILS OF SITES USED FOR MODEL TRAINING Site Name Soil Type Land Cover Kanpur (Uttar Pradesh) (Ganga basin) Clay Grassland Ludhiana (Punjab) (Sultlej Basin) Sandy loam Farmland Mayur Vihar (Delhi) (Yamuna basin) Loam Arable The results in Figure 6 (a-c) show predicted soil moisture content over measured soil content with respect to 433 days (training period) for three different sites (see Table 1) by setting up = 0.8. It is evident from the results that the predicted value of the soil moisture content in the initial days of the year has many variations from the measured values. This can be attributed to the reason that DLiSA behaves naively and does not have much knowledge about sites. As the training period (days) increases, the predicted value is close to the measured value. This observation affirms that the learning ability of the proposed DLiSA is higher than underlying dynamic temporal information. The soil moisture content varied from 0.12 to 0.24 3 3 . Fig. 6. Measured soil moisture content and predicted soil moisture content by DLiSA for the three training sites: (a) Kanpur, (b) Ludhiana, and (c) Mayur Vihar. Fig. 7 Percentage error for the three training sites (a) Kanpur, (b) Ludhiana, and (c) Mayur Vihar. The results in Figure 7(a-c) show the corresponding percentage error between measured and predicted soil moisture content values in the training period for each of the three sites. The percentage error is evaluated by dividing the difference between the predicted values and measured values by measured values. It can be clearly observed that the percentage error for some training periods is negative. This can be attributed to the reason that generation of soil moisture prediction is less than the measured values. This may highlight that the soil prediction for the next day is a rainy day rather than a sunny day. It is also worthy to note that the average percentage error for the site Mayur Vihar is between 0.2 0.2, which is less than for the other two sites (varying from 0.4 0.4). This can be attributed to the reason that the proposed model is trained first for the Kanpur site, then the Ludhiana site, and finally for the Mayur Vihar site. So, the gradually proposed model learns about the environment, and when it comes to the last site, the predicted value is much closer to the measured value and, in turn, the error is minimized for the Mayur Vihar site. Once the model is trained, the next phase is to test the model. The testing of the proposed model is exemplified by data not used during the Authorized licensed use limited to: NATIONAL INFORMATICS CENTRE. Downloaded on March 30,2021 at 10:46:09 UTC from IEEE Xplore. Restrictions apply. 1530-437X (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JSEN.2021.3069266, IEEE Sensors Journal Pankaj K. Kashyap et al.: Towards Precision Agriculture: IoT-enabled Intelligent Irrigation Systems Using Deep Learning Neural Network 9 training. Testing of the model is done by using the dataset (145 ) kept aside for each of the training sites. The proposed model takes the average value of the previous three days climate variables and present soil moisture content to predict the average volumetric soil moisture content of the next day. The performance of the trained model is assessed by the root mean squared error as defined by Eq. (8). The prediction/validation performance of the proposed model for three different sites is presented in Table II. TABLE II. TRAINING CROSS-VALIDATION PERFORMANCE Site Name RMSE ( 3 3 ) Kanpur (Uttar Pradesh) (Ganga basin) 0.048 Ludhiana(Punjab) (Sutlej Basin) 0.012 Mayur Vihar (Delhi) (Yamuna basin) 0.014 It is evident from the RMSE values in Table 2 that the DLiSA can generate accurate (close to zero) predictions of the volumetric soil content for each site. This observation affirms that the network weight parameter of the proposed LSTM RNN model is correctly updated during each training period. This is because DLiSA uses a stochastic gradient descent approach to update the network parameters, which avoids the explosion of network weights and helps the model to learn faster. It is also noteworthy that for the training site at Kanpur, the proposed model does not provide good prediction performance, i.e., the RMSE value is far from zero. This can be attributed to the reason that the data used in the training period slightly varies from the dataset used in the testing period. Overall, the proposed DLiSA used for the prediction in different sites further enhances the saving of water volume in the development of various crops. C. Comparative Analysis in the Independent Test Field In this section, the water volume estimation and irrigation timing have been validated in the test farming area as suggested by state-of-the-art models. Three independent irrigations are scheduled by the DLiSA, FFANN, and T-based models respectively, starting with the same initial conditions, and the irrigation starts at = 11: 00 AM. The range of the soil moisture content is to be set by experimental observation between 0.14 to 0.24 3 3 for adequate crop growth. 1) Comparative Analysis of Volumetric Soil Moisture Content Fig. 8. Comparison of Volumetric soil moisture content after the irrigation period A comparison of soil moisture content between proposed DLiSA and state of the art models for one irrigation period is shown in Figure 8. For the prediction of soil moisture content one day ahead, previous days climate information and soil information are feed into the proposed model and FFFAN, whereas T-based models continuously monitor soil moisture content. The temporal volumetric soil content 1 ( , ) ( 1 , = 1,2,3 ) , 2 ( , ) ( 2 , = 4,5,6 ) and ( , ) ( 3 , = 7,8,9), and the irrigation period are also illustrated in Figure 8. The optimal water flow rate of sprinkler is set to be = 3.0 ( ) for all the state of the art models. For the proposed model, the maximum soil retention = 440.23( 3 ) capability is measured by Eq. 11 using predicted volumetric soil content ( ( ) = 0.12 3 3) . Generally, the soil moisture content is lower than the upper range i.e. 0.21 3 3 for the proposed model from ( ( ) = 0.12 3 3) to save water and adequate crop growth. The crop root depth is = 0.25 and the soil surface is 0.25 2, according to the observation of farmers. The actual water content | =11:00 = 245.13 ( 3 ) is calculated using Eq. 12. The water deficit ( = 195.1 ( 3 )) is calculated using Eq. 13, i.e., = 83%, which is an indicator of irrigation needs. Now, the total volume of water ( 1( ) = 195.1( 3 ) 0.25 ( ) 0.25( 2) = 12.19 ) is estimated using Eq. 14. Furthermore, using the optimal water flow rate of sprinkle = 3.0 ( ), the irrigation period is calculated using Eq. 15, i.e. 1( )| =11:00 = 4.06 . For the FFANN, the net volume of water ( 2( ) = 15.78 ) and irrigation period is 2( )| =11:00 = 5.26 , whereas for the T-based approach, the threshold value of soil moisture is set at = 0.17 3 3 , which is higher than the lower range of soil moisture content. The irrigated volume of water ( 3( ) = 21.88 ) stopped at 3( )| =6:30 = 7.3 , when the continuous measured soil moisture content satisfies the condition ( ( )) > . It can be observed from the results that the soil moisture content of the proposed model reaches reference moisture 0.21 3 3 quickly compared to the FFANN and T-based. This can be attributed to the reason that the proposed model handles the temporal input better than state-of-the-art models. This is due to the fact that the proposed model receives feedback from the soil sensors to predict soil moisture content close to the measured value. whereas, the T-based shows the worst performance in terms of water volume saving because the longer irrigation period would exceed the maximum soil water retention capability and ultimately exceed the soil moisture content ( > 0.24 3 3 ). The volume of water- saving as a qualitative performance using Eq. 19 of the proposed scheme is 22.75%, 44.28 % more than the FFANN and T-based approaches, respectively. Moreover, after irrigation, the water deficit of the soil as visually identified by farmers turns out to be ( = 60 ) in the medium range for the proposed model and worst for the T-based approach ( < 10 ) , showing an excessive amount of water in the soil that is responsible for the death of crops. 2) Soil Moisture Content over One Month A comparative analysis of soil moisture prediction between DLiSA and FFANN is presented in Figure 9 for sub-farming areas 1 and 2 respectively for one month. The T-based Authorized licensed use limited to: NATIONAL INFORMATICS CENTRE. Downloaded on March 30,2021 at 10:46:09 UTC from IEEE Xplore. Restrictions apply. 1530-437X (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JSEN.2021.3069266, IEEE Sensors Journal 10 IEEE SENSORS JOURNAL, VOL. XX, NO. XX, MONTH X, XXXX approach is modeled to measure soil moisture content continuously. It can be observed from the results that the proposed model can predict the soil moisture content close to the measured value because DLiSA forms a closed-loop system, receiving feedback from both the soil moisture sensors and climate sensors. Also, the linear approach of processing temporal information leads to the prediction of soil moisture content to an accurate value in the proposed model, whereas FFANN works in an open-form system and its complex processing feature of hidden neurons is not able to predict the soil moisture content accurately close to the measured value. It is also observed that the proposed model used in 1 predicts soil moisture content value on average 0.19 3 3 over the month, whereas FFANN predicts average soil moisture content in 2 as 0.20 3 3, and for the T-based approach in 3, the predicted average soil moisture content is 0.17 3 3 , which is not close to the measured value and implies the excess need for water volume for irrigation in both approaches. This is because the DLiSA responds quickly to a drastic change in nature and triggers the irrigation schedule with an optimal amount of water volume when the soil moisture content goes below the predefined threshold value. It is also seen from the results that for 1 , 7 , 13 , 19 , 25 31st days of the month, soil moisture content is below the lower range 0.14 3 3 value for all state-of-the art-models. Thus, irrigation schedules follow estimated water volume in each state-of-the-art model. 3) Soil water deficit over one month A comparison of soil moisture deficit between DLiSA and state-of-the-art models over one month is presented in Figure 10. It is evident from the results that soil moisture deficits measured by the DLiSA for most of the days are stretched out in the medium range (25 55 ) as defined by qualitative measurement in Eq. 20. This observation affirms that DLiSA predicts the soil moisture content accurately and saves a larger amount of water. It can also be clearly observed from the results that the negative value of soil water deficits in the case of the T-based approach represents overwatering, i.e., the soil moisture content is above the framing area capacity. In the FFANN approach, the soil moisture mostly varied in the range of 22 63 over days of the month, and estimated using the T-based approach falls below the lower range that shows overwatering. This observation affirms that FFANN can save more water in the irrigation process than the T-based approach because FFANN uses hidden layer and weight adjustment of the network in the prediction of soil moisture content, which is better than the threshold-based approach. It is also noteworthy that crosses above the upper range ( > 70 ) of the specified limit only six times over the month, and irrigation is scheduled accordingly. Overall, the proposed model can maintain the soil moisture deficit in the specified range and is able to change irrigation planning adequately for crop growth. 4) Irrigated Water Volume for One Month The result in Figure 11 shows the irrigated water volume for one month using actuators. It can be observed from the results that irrigation is scheduled in one month six times in each state-of-the-art model. This can be attributed to the reason that predicted soil moisture content is in the range of prescribed values, and irrigation is required only when the water deficit in the soil is lower than the threshold value. It is also noteworthy that the average water volume is about 13.69 for the proposed model, whereas the average volume of water for the FFANN and T-based models are about 17.77 and 24.25 , respectively. The average volume of water saved in these six irrigation schedules for the proposed algorithm are 23 % and 43% with respect to the FFANN and T-based models, respectively. This can be attributed to the reason that storing and processing temporal information into LSTM memory cells effectively and correctly estimates the irrigation time and water volume for the development of crops, which ultimately provides economic benefits to farmers. It can also be noted that in the middle of the month (13 day), the need for water is maximum, which is about 16.25 , 19.23, 26.76 for the proposed model, FFANN, and T-based models, respectively. This is due to the measurement of higher temperatures and less humidity in the air by the deployed sensors in the sub-farming area. Fig. 11. Total irrigated water volume over days of the month V. CONCLUSION AND FUTURE WORK In this paper, a recurrent neural network-based intelligent irrigation system for precision agriculture has been presented for the prediction of soil moisture content. It focuses on the crucial requirements of agriculture such as the amount of water saved and irrigation period by controlling the functionality of the irrigation scheduler. The calibration and testing of the proposed DLiSA are carried out for three different sites over 1.5 years. The performance of the DLiSA is compared to state-of-the-art models subject to the prediction Fig. 9. Total irrigated water volume over days of the month Fig. 10. Soil moisture deficit over days of the month Authorized licensed use limited to: NATIONAL INFORMATICS CENTRE. Downloaded on March 30,2021 at 10:46:09 UTC from IEEE Xplore. Restrictions apply. 1530-437X (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information. This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/JSEN.2021.3069266, IEEE Sensors Journal Pankaj K. Kashyap et al.: Towards Precision Agriculture: IoT-enabled Intelligent Irrigation Systems Using Deep Learning Neural Network 11 of soil moisture content over one month, which shows a high degree of reliability in the designed IoT system architecture- based farming area. Overall, the proposed model shows high water saving compared to the FANNN and T-based models by maintaining the soil moisture deficit within the allowed range. In future research, we will design a predictive irrigation scheduler that can also predict rainfall depth in addition to soil moisture content, which will ensure that more water is to be saved through maximum utilization of rainfall depths. ACKNOWLEDGMENT This research work is financially supported by the Jawaharlal Nehru University, New Delhi, India. REFERENCES [1] World Population projected to Reach 9.8 Billion in 2050, and 11.2 Billion in 2100. Accessed: June. 20, 2020. https://www.un.org/en/sections/issuesdepth/population/index.html/ [2] Ice, Snow, and Glaciers and Water cycle. Accessed: June. 20, 2020. [Online]. Available: https://water.usgs.gov/edu/watercycleice.html [3] Water Facts Worldwide Water Supply. Accessed: June. 20, 2020. [Online]. Available: https://www.usbr.gov/mp/arwec/water-facts- wwwater-sup.html/ [4] Water for Sustainable Food and Agriculture by FAO. Accessed: June. 20, 2020. [Online]. Available: https://www.fao.org/3/a-i7959e.pdf/ [5] R. Mulenga, J. Kalezhi, S. K. Musonda, and S. Silavwe, Applying Internet of Things in monitoring and control of an irrigation system for sustainable agriculture for small-scale farmers in rural communities, in Proc. IEEE PES/IAS Power Africa, 2018, pp. 841 845. [6] https://www.nationalgeographic.com/environment/freshwater/food/ [7] Morillo, J.G.; Mart n, M.; Camacho, E.; D az, J.A.R.; Montesinos, P. Towards precision irrigation for intensive strawberry cultivation. Agric. Water Manag. 2015, 151, 43-51. [8] Parra, L.; Rocher, J.; Garc a, L.; Lloret, J.; Tom s, J.; Romero, O.; Rodilla, M.; Falco, S.; Sebasti , M.T.; Mengual, J.; etal. Design of a WSN for smart irrigation in citrus plots with fault-tolerance and energy- saving algorithms. Netw. Protoc. Algorithms 2018, 10.95-115. [9] Pardossi, A.; Incrocci, L. Traditional and New Approaches to Irrigation Scheduling in Vegetable Crops. Hort technology 2011, 21, 309 313. [10] McCarthy, A.C.; Hancock, N.H.; Raine, S.R. Advanced process control of irrigation: The current state and an analysis to aid future development. Irrig. Sci. 2013, 31, 183 192. [11] Park, Y.; Shamma, J.S.; Harmon, T.C. A Receding Horizon Control algorithm for adaptive management of soil moisture and chemical levels during irrigation. Environ. Model. Softw. 2009, 24, 1112 1121. [12] Navarro-Hell n, H.; Mart nez-del-Rincon, J.; Domingo-Miguel, R.; Soto- Valles,F.;Torres-S nchez,R.A decision support system for managing irrigation in agriculture. Comput. Electron. Agric. 2016 [13] J. Chrouta, W. Chakchouk, A. Zaafouri and M. Jemli, "Modeling and Control of an Irrigation Station Process Using Heterogeneous Cuckoo Search Algorithm and Fuzzy Logic Controller," in IEEE Transactions on Industry Applications, vol. 55, no. 1, pp. 976-990, Jan.-Feb. 2019 [14] Giusti, E.; Marsili-Libelli, S. A Fuzzy Decision Support System for irrigation and water conservation in agriculture. Environ. Model. Softw. 2015, 63, 73 86 [15] King, B.A.; Shellie, K.C. Evaluation of neural network modeling to predict non-water-stressed leaf temperature in wine grape for calculation of crop water stress index. Agric. Water Manag.2016, 167, 38-52. [16] Park, Y.; Shamma, J.S.; Harmon, T.C. A Receding Horizon Control algorithm for adaptive management of soil moisture and chemical levels during irrigation. Environ. Model. Softw. 2009, 24, 1112 1121. [17] McCarthy, A.C.; Hancock, N.H.; Raine, S.R. Simulation of irrigation control strategies for cotton using Model Predictive Control within the VARIwise simulation framework. Comput. Electron. Agric. 2014, 101, 135 147 [18] Brezak, D.; Bacek, T.; Majetic, D.; Kasac, J.; Novakovic, B. A comparison of feed-forward and recurrent neural networks in time series forecasting. In Proceedings of the 2012 IEEE Conference on Computational Intelligence for Financial Engineering & Economics (CIFEr), New York, NY, USA, 29 30 March 2012; pp. 1 6. [19] Wang, Y.; Kirubakaran, V.; Biao, H. A Long-Short Term Memory Recurrent Neural network-based Reinforcement Learning Controller for [20] Fang, K., Shen, C., Kifer, D., and Yang, X.: Prolongation of SMAP to Spatiotemporally Seamless Coverage of Continental U.S. Using a Deep Learning Neural Network, Geophys. Res. Lett., 44,11030 11039, 2017. [21] Zhang, J.; Zhu, Y.; Zhang, X.; Ye, M.; Yang, J. Developing a Long Short-Term Memory (LSTM)-based model for predicting water table depth in agricultural areas. J. Hydrol. 2018, 561, 918 929. [22] Zhang, D., Lindholm, G., and Ratnaweera, H.: Use long short-term memory to enhance Internet of Things for combined sewer overflow monitoring, J. Hydrol., 556, 409 418, 2018. [23] Delgoda, D.; Saleem, S.K.; Malano, H.; Halgamuge, M.N. Root zone soil moisture prediction models-based on system identification: Formulation of the theory and validation using field and AQUACROP data.Agric. Water Manag. 2014, 163, 344 353. [24] Karandish, F.; imu nek, J. A comparison of numerical and machine- learning modelling of soil water content with limited input data. J. Hydrol. 2016, 543, 892 909. [25] Deng, J.; Chen, X.; Du, Z.; Zhang, Y. Soil Water Simulation and Predication Using Stochastic Models-based on LS-SVM for Red Soil Region of China. Water Resour. Manag. 2011, 25, 2823 2836. [26] Z. Hong, Z. Kalbarczyk and R. K. Iyer, "A Data-Driven Approach to Soil Moisture Collection and Prediction," 2016 IEEE International Conference on Smart Computing (SMARTCOMP), St. Louis, MO, 2016, pp. 1-6. [27] Liu, D.; Yu, Z.; L , H. Data assimilation using support vector machines and ensemble Kalman filter for multi-layer soil moisture prediction. Water Sci. Eng. 2010, 3, 361-377. [28] O. Kaiwartya, A. H. Abdullah, Y. Cao, R. S. Raw, S. Kumar, D. K. Lobiyal, I. F. Isnin, X. Liu, and R. R. Shah, T-MQM: Testbed-based multi-metric quality measurement of sensor deployment for precision agriculture - a case study, IEEE Sensors J., vol. 16, no. 23, pp. 8649- 8664, Dec. 2016. [29] Munir, M.S.; Bajwa, I.S.; Naeem, M.A.; Ramzan, B. Design and Implementation of an IoT System for Smart Energy Consumption and Smart Irrigation in Tunnel Farming. Energies 2018, 11, 3427. [30] Capraro, F.; Pati o, D.; Tosetti, S.; Schugurensky, C. Neural network- based irrigation control for precision agriculture. In Proceedings of the 2008 IEEE International Conference on Networking, Sensing and Control (ICNSC), Sanya, China, 6 8 April 2008; pp. 357 362. [31] Tsang, S.W.; Jim, C.Y. Applying artificial intelligence modeling to optimize green roof irrigation. Energy Build. 2016, 127, 360 369. [32] Mohapatra, A.G., Lenka, S.K. & Keswani, B. Neural Network and Fuzzy Logic-based Smart DSS Model for Irrigation Notification and Control in Precision Agriculture. Proc. Natl. Acad. Sci., India, Sect. A Phys. Sci. 89, 67 76 (2019). [33] Kratzert, Frederik & Klotz, Daniel & Brenner, Claire & Karsten, Schulz & Herrnegger, Mathew. (2018). Rainfall-Runoff modelling using Long- Short-Term-Memory (LSTM) networks. Hydrology and Earth System Sciences Discussions. 1-26. 10.5194/hess-2018-247. [34] R. Togneri et al., "Advancing IoT-Based Smart Irrigation," in IEEE Internet of Things Magazine, vol. 2, no. 4, pp. 20-25, December 2019, [35] U.S. Department of Agriculture Handbook, Soil Taxonomy:A basic system of soil classification for making and interpreting soil surveys, Natural Resources Conservation Service, 2nd Ed., 1999. [36] X. Yang and X. You, Estimating parameters of Van Genuchten model for soil water retention curve by intelligent algorithms, Appl. Math. Inform. Sci., vol. 7, no. 5, pp. 1977-1983, Sep. 2013 [37] H. Navarro-Hellin, R. Torres-Sanchez, F. Soto-Valles, C. AlbaladejoPerez, J. A. Lopez-Riquelme, and R. Domingo-Miguel, A wireless sensor architecture for efficient irrigation water management, Agr. WaterManage., vol. 151, pp. 64-74, 2015. [38] https://indiawris.gov.in/wris/ [39] http://cwc.gov.in/water-resources-information-system-wris/ [40] Zreda, M.; Shuttleworth, W.J.; Zeng, X.; Zweck, C.; Desilets, D.; Franz, T.; Rosolem, R.COSMOS: The cosmic-ray soil moisture observing system. Hydrol. Earth Syst. Sci. 2012, 16, 4079 4099. Authorized licensed use limited to: NATIONAL INFORMATICS CENTRE. Downloaded on March 30,2021 at 10:46:09 UTC from IEEE Xplore. Restrictions apply. View publication stats