SPECIAL SECTION ON ADVANCED DATA MINING METHODS FOR SOCIAL COMPUTING Received May 20, 2019, accepted June 10, 2019, date of publication July 5, 2019, date of current version August 6, 2019. Digital Object Identifier 10.1109/ACCESS.2019.2926989 Advanced Quantum Based Neural Network Classifier and Its Application for Objectionable Web Content Filtering OM PRAKASH PATEL1, NEHA BHARILL1, ARUNA TIWARI2, VIKRAM PATEL3, OJAS GUPTA4, JIAN CAO 5, JUN LI6, AND MUKESH PRASAD 6 1Department of Computer Science and Engineering, Mahindra Ecole Centrale College of Engineering, Hyderabad 500043, India 2Department of Computer Science and Engineering, Indian Institute of Technology Indore, Indore 453552, India 3Chota Hospital Private Limited, Indore 452011, India 4VMWare, Palo Alto, CA 94304, USA 5Department of Computer Science and Engineering, Shanghai Jiatong University, Shanghai 200240, China 6Centre for Arti cial Intelligence, School of Computer Science, FEIT, University of Technology Sydney, Ultimo, NSW 2007, Australia Corresponding author: Mukesh Prasad (mukesh.prasad@uts.edu.au) This work was supported in part by the China National Key Research and Development Plan under Grant 2018YFB1003800, and in part by the Science and Technology Program of Guangzhou under Grant 201704030133, A Knowledge-Connection and Cognitive-Style-based Mining System for Massive Open Online Courses and Its Application (PRO16-1300). ABSTRACT In this paper, an Advanced Quantum-based Neural Network Classi er (AQNN) is proposed. The proposed AQNN is used to form an objectionable Web content ltering system (OWF). The aim is to design a neural network with a few numbers of hidden layer neurons with the optimal connection weights and the threshold of neurons. The proposed algorithm uses the concept of quantum computing and genetic concept to evolve connection weights and the threshold of neurons. Quantum computing uses qubit as a probabilistic representation which is the smallest unit of information in the quantum computing concept. In this algorithm, a threshold boundary parameter is also introduced to nd the optimal value of the threshold of neurons. The proposed algorithm forms neural network architecture which is used to form an objectionable Web content ltering system which detects objectionable Web request by the user. To judge the performance of the proposed AQNN, a total of 2000 (1000 objectionable + 1000 non- objectionable) Website s contents have been used. The results of AQNN are also compared with QNN-F and well-known classi ers as backpropagation, support vector machine (SVM), multilayer perceptron, decision tree algorithm, and arti cial neural network. The results show that the AQNN as classi er performs better than existing classi ers. The performance of the proposed objectionable Web content ltering system (OWF) is also compared with well-known objectionable Web ltering software and existing models. It is found that the proposed OWF performs better than existing solutions in terms of ltering objectionable content. INDEX TERMS Quantum computing, Web crawler, neural network classi er, objectionable Web content. I. INTRODUCTION Inspired by the human brain to classify complex patterns of the real world, an arti cial neural network has been intro- duced. In recent decades, many neural architectures have been proposed like Perceptron, Feedforward Neural Net- work, and Backpropagation, etc. These models have been used to solve problems of many areas like mathematics, bio- science, economics, and prediction system [1] [5]. The neu- ral network is a mathematical model which performs parallel The associate editor coordinating the review of this manuscript and approving it for publication was Shirui Pan. information processing by adjusting the connections amongst the number of nodes. However, the performance of the neural network depends on many factors such as network archi- tecture, weights, the number of hidden layer neurons, and learning strategy, etc. [6]. Forming a neural network archi- tecture with optimization of all parameters is a dif cult task. In the neural network learning algorithm, nding optimal connection weights is an important factor for its perfor- mance. For proper selection of these connection weights, several evolutionary algorithms have been proposed [7] [12]. To solve the problem of evolving weights of neural network Chen et al. [11], proposed a classi cation technique of neural VOLUME 7, 2019 This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see http://creativecommons.org/licenses/by/4.0/ 98069 O. P. Patel et al.: AQNN Classifier and Its Application for OWF network using an improved genetic algorithm. In this method, the authors use shift reverse logic crossover operation and improved genetic algorithm for optimizing Backpropaga- tion algorithm. One more similar concept is introduced by Lu et. al. [12], in which the quantum computing concept is used to optimize connection weights and architecture of the neural network. In this method, the connection weights, and the number of connections have been decided using the quan- tum computing concept. However, in this approach, the num- ber of neurons in the hidden layer is selected randomly, which is not the correct way to decide the number of neurons. Determining the number of neurons in an above-mentioned way increases the training time and also it may not guarantee to achieve the global optima. The problem of determining the appropriate number of hidden layer neurons can be solved by forming neural network architecture constructively by adding neurons one by one as per requirement. Kim and Park [13], proposed a neural network algorithm which forms neural net- work architecture constructively. In constructive neural net- work algorithm, the neurons are being added to the network during the learning process as per requirements. To determine the optimal connection weights and the number of hidden layer neurons, a quantum based binary neural network learn- ing algorithm has been presented by Patel and Tiwari [14]. In this proposed algorithm, the connection weights have been decided using quantum computing concept, and neural net- work architecture is formed constructively. As discussed above, the neural network has been widely used for pattern recognition or data classi cation [15], [16]. In pattern recognition, the neural network is used in the area of computer networks especially for providing network security in Web. Today, the information age is characterized by the continuous massive production and dissemination of information. Nowadays, the Internet is being used as one of the necessities of our mundane life, and it is more than just emails and web browsing. The number of Internet users is increasing day by day, for example from social networking to an e-commerce platform, a knowledge library to an e-market, Internet has captured everyone in its charisma. The boon of the worldwide Web is the openness and the accessibil- ity that is provided to its users to access any information. However, the availability of all the information to all the users is inappropriate. There are lots of malicious content present on the Internet which may affect the users, especially children. A 2000 US congressional study shows that one in ve of the 24 million children has been solicited online for porn when sur ng on the Internet [17]. However, protection from objectionable Web and free speech on the Web are a contradictory issue and there must be a tradeoff between them. The following example can be understood with the help of a scenario. There are some websites which provide aware- ness about sex education, which is not objectionable. On the contrary, there are other websites which have objectionable pornographic content. Both kinds of websites may have objectionable words. When the analysis is done on the basis of keywords, it blocks both the types of websites which is a drawback in this case. Including these problems as mentioned above, there are many other issues like, websites which do not contain objectionable content as a whole but containing some hyperlinks which might contain objectionable content. In such cases, blocking of parent website is not an intelligent solution, the particular hyperlink must be blocked. All these issues belong to the features selected from website. Along with this, the dynamic nature of the Web is also an important issue. As discussed above, several new websites are launched every day. Analyzing all websites against objectionable and non-objectionable content at run time is not an intelligent solution. There should be a system which is able to identify new objectionable websites before any user access it. This system must regularly check the newly coming objectionable websites and make a database of those websites which helps to speed up the process of blocking objectionable websites. Apart from this, the classi cation of these features is also an important task. To classify accurately between objection- able contents and non-objectionable contents, there must be a proper selection mechanism for selecting the appropriate classi ers. To overcome the issues and drawbacks discussed here, Patel et. al. [18] proposed a method in which quantum based neural network has been used to classify objectionable Web request. In this algorithm, the connection weights and thresh- old is evolved using quantum computing concept. Further- more, the algorithm is tested on objectionable Web content. Although the performance of QNN-F is good still there are possible improvements that can be done in the proposed work [18]. Firstly, the threshold of neurons has been selected randomly in this method which may lead the algorithm to stuck into local minima or maxima. Secondly, the connection weights and threshold is evolved in one population using several generations in it. Finding neural network parameters in this way may lead to evolved locally optimal parameters. Therefore, to handle these issues of an improved algorithm, an Advanced Quantum based Neural Network Learning Algorithm (AQNN) is proposed here. The AQNN is used to form an Objectionable Web Content Filtering system (OWF). The proposed algorithm forms a neural network classi er constructively by adding the neuron at the hidden layer, whereas, the connection weights and threshold of a neuron is decided using the quantum computing concept. In this algorithm, the threshold boundary parameter is introduced which helps to nd optimal value of threshold. The value of threshold is nd out from a particular range rather than randomly. In this a minimum and maximum range of thresh- old are found which provide an optimal range of exploration. Thus, it reduces the number of iterations to nd an optimal value of the threshold. Along with the threshold boundary parameter here, we nd connection weights and threshold of a neuron using quantum and genetic concept in more than one population rather than a single population. Finding parameters in this way helps to nd optimal parameters. The proposed algorithm is trained and tested on Web dataset to form objectionable Web content ltering system. In the 98070 VOLUME 7, 2019 O. P. Patel et al.: AQNN Classifier and Its Application for OWF proposed OWF, for accurate classi cation of objectionable Web content, some unique features have been added. These features have been extracted from the content of websites. This OWF mainly consists of ve modules: Web crawler, requested Web page analyzer, hyperlink analyzer, the feature extractor, and the quantum neural network. The module Web crawler requested Web page analyzer, and hyperlink analyzer help to get websites for Web content analysis. The feature extractor module helps to extract features from websites con- tents, collected from the different modules. These features are given as input into the proposed AQNN to decide whether websites are objectionable or not. This paper is organized as follows. The existing work related to blocking of objectionable Web content ltering system is discussed in Section II. The required preliminaries about the neural network and quantum computing concept are described brie y in Section III. In Section IV, the proposed algorithm is discussed in detail. In Section V, the proposed work AQNN and OWF is illustrated with the help of an example. The experimental work and results are discussed in detail in Section VI. Section VII, is presented with the concluding remarks. II. EXISTING WORK In 1995, to resolve the problem of blocking objectionable content, a set up named as Netscape Communications and Progressive Networks was established by the coalition of Microsoft Corporation [19]. In addition to this, several inter- national organizations and countries have taken similar action to protect the public and children from accessing objec- tionable websites [20]. The Internet content ltering soft- ware (ICFS) became very popular and widely adopted by the school, parents and some governments to protect children from the harmful effect of objectionable content [21], [22]. These Softwares prevent objectionable Web content by mon- itoring data ow between end-user and Internet connection. The existing work in this area is done by many researchers and can be categorized mainly into two categories that are text-based ltering, and other is text and image-based ltering. The rst category is text-based search in which searching of objectionable content is done with the help of objection- able keywords [23]. In this approach, some objectionable keywords are de ned by the administrator which is to be searched in Web content or request website. If it is found then, website is blocked otherwise it is not blocked. However, the drawback of this method is that it blocks the whole Web- site rather than a particular page or hyperlink in the website which is objectionable. As there are several Web contents available which account as objectionable like sex education but it is useful for students and society. This approach also blocks such type of contents. The other ltering objectionable content methods are based on image and text feature. Several researchers have proposed various methods based on text and image [24] [28]. Filtering based on text is done on the basis of objectionable keywords. In addition to this, the ltering of objectionable images is done using skin features. Here, we discuss related work in this eld. An approach is proposed based on text and visual features for ltering objectionable contents by Hammami et. al. [24]. In this approach, text features along with visual feature based on skin color detection are taken. However, objectionable image detection on the basis of skin based features is not suf cient to judge nudity or objectionability in the image. Thus, the classi cation accuracy achieved for visual objec- tionable content is not promising. Also, the way text and visual features are combined is not clear. Chen et. al. [27], also proposed a method of ltering objectionable content on the basis of textual and visual contents. This approach is categorized by three ltering techniques that are based on keywords, based on sentences, and based on images. In these methods, the ROI method is used in place of skin segmenta- tion for objectionable image classi cation. Classi cation of objectionable Web content on the basis of image classi ca- tion, the ltering rate is also not very high. For most of the approaches, skin detection is an initial step for nding nudity in the image. Jones et. al. [31], proposed an approach in which emphasis on the correlation between the percentage of skin and the possibility of nudity in the image. For skin detec- tion in the image, two methods are common. One of them is pixel-based and another is region based. In pixel based, pixels are considered as features and in the region based, the classi cation is done on the basis of spatial information of pixels. However, nding an objectionable image on the basis of these features is not an optimal method. The features based on skin vary due to illumination, the background of a person, age, angle, etc. To solve this issue, several methods have been proposed. A statistical skin detection method has been proposed by Zeng et. al. [32]. A region based approach is proposed by Xu et. al. [33], in which texture and image features are taken from arbitrary-shaped segmented. To judge nudity in an image, the skin detection is done on the basis of YCbCr color space by Shih et. al. [34]. To detect objection- able image online, a BHO (browser helper object) is proposed by Girgis et. al. [26]. The BHO works with Internet Explorer (IE5) in the background which extracts all the images and links of the image and checks against nudity. To judge nudity in this method, the skin color is checked using YUV technique. Along with textual and visual based ltering, some more techniques like semantic analysis of Web content were also proposed. Several approaches have been proposed using machine learning algorithm which checks website content semantically [35] [37]. The classi cation model used for ltering the objectionable Web content are SVM, Logis- tic Regression, and K-nearest neighbor. A lot of research has been done, and many methods have been proposed by researchers to block objectionable images and video, but they have failed to block entire objectionable content because of 85% of the information, present are in the form of text [38] [41]. VOLUME 7, 2019 98071 O. P. Patel et al.: AQNN Classifier and Its Application for OWF III. PRELIMINARIES In this section, preliminaries related to the neural network, and quantum computing concept is discussed in brief, which helps to illustrate the proposed algorithm. A. NEURAL NETWORK The proposed algorithm forms a three-layer neural network architecture consists of an input layer, a hidden layer, and output layer. Let X = {X1, X2, X3, ...., Xu}, where u is the number of input samples and Xl = (xl 1, xl 2, xl 3, ...., xl n) where n is the number of attributes in one instance of the input sample. Thus, in the proposed neural network architecture the input nodes equal to n. For jth hidden layer neuron, connection weights are denoted as follows: W real j = (wj1, wj2, wj3, ...., wjn) (1) The number of hidden layer neurons is decided construc- tively. The number of neurons in the output layer is one, which helps to identify whether the input is objectionable or not. For forming a neuron, we make use of the step function which is given as follows: netj = n X i=1 wji xi (2) f (netj) = ( 1 if netj Threshold 0 if netj > Threshold (3) The value of netj is compared with the threshold to nd out whether the input is objectionable or not. In the pro- posed algorithm the weights (W real j ) and threshold ( real j ) are decided using the quantum computing concept. The required preliminary for the quantum computing concept is presented subsequently. B. QUANTUM COMPUTING The quantum computing concept uses quantum bits Q in place of classical bits. The weight matrix and the threshold of jth hidden layer neuron corresponding to Eqs (1), and (3) in the form of quantum bit Q can be represented as: W j = (Qj1, Qj2, Qj3, ......, Qjn); (4) j = (QTh j ); (5) The quantum bit (Qj) of weight matrix and threshold QTh j is being decided by the quantum concept, where any quantum bit (Qj) and QTh j are represented by several qubits (q). Qj = (qj1|qj2|......|qjk) (6) Here, the k number of qubits represents a quantum bit (Q). The quantum bits uses probabilistic features for its representation [42]. qji = ji | 0 + ji | 1 =   (7) where, and is a complex number representing the proba- bility of qubit in 0 state and in 1 state. However, the proposed algorithm works on a classical com- puter, therefore, these qubits are converted into real coded value using a conversion process which is discussed next. 1) CONVERSION FROM QUANTUM BITS TO REAL VALUE This process starts by taking random number matrix Rj, where Rj = [rj1rj2....rjk], corresponding to Qj = ( j1 | j2 | ...... | jk). The value of rji is selected with the help of random function which generates a uniform number between 0 to 1. Then, further mapping is done by using binary matrix Sj where Sj = [sj1sj2....sjk] [42]. The value of the matrix Sj is generated as follows: if (rj ( ji)2) then sji = 1 else sji = 0. (8) where j = 1, 2, ..., k and k denote the number of qubits. To get the real coded value of the required parameter from binary matrix Sj, we have used a uniform random number generator (urg). The individual quantum bit with k qubits can represent the linear superposition of 2k states. Thus, to get an optimal value of the real coded value of the qubit qji from 2k subspaces, we use a formula bin2dec(Sj) + 1. This formula helps to get a real-coded value from a particular subspace from the available 2k subspaces. The whole conversion pro- cess has been described in terms of pseudo-code as follows: Algorithm 1 Conversion Process begin Step-1: qji, link=0 and random number matrix rji for i = 1:k qji = ji; 0 ji 1 rji = rand(); This rand function generate uniform value between 0 and 1. endfor Step-2: for i = 1:k if (rji <( ji* ji)) sji = 1; else sji = 0; endif endfor Step-3: link = bin2dec(Sj) + 1 qreal ji = urg(); end The conversion process is explained with the help of an example. Let us consider a quantum bit having the length of two qubit Q = 0.807|.45 . Now, take any random number matrix having two random numbers R = [0.330.18]. Using Eq. (8) the binary matrix is achieved as S = [11]. After obtaining the binary matrix, a formula (bin2dec(S)+1) is used to obtain decimal value from a binary value which is achieved as 4. A quantum bit having two qubits will provide 4 search subspaces. Let for example, four search subspaces 98072 VOLUME 7, 2019 O. P. Patel et al.: AQNN Classifier and Its Application for OWF are (0, 0.25), (0.25, 0.5), (0.5, 0.75), and (0.75, 1). The binary to the decimal value achieved as 4 it means the qubit will explore fourth subspaces, i.e., (0.75, 1). Thus, quantum bits of connection weights W j and quantum threshold j are converted into real coded values of connection weight W real j and threshold real j . Once, the real coded value of connection weights and threshold are achieved, these are applied to the learning process. However, the value achieved in the rst gen- eration may or may not produce optimal results. Therefore, there is the requirement of updating the qubits. 2) QUBIT UPDATE PROCESS To generate a new value of qubit for quantum weights W j and quantum threshold j, qubit update process is used which uti- lizes the tness value (F) and a binary bit (S) corresponding to each qubit. By using tness value and binary bits, the rotation angle 1 is decided. Now using Eq (9), Eq (10), and Table 1, the qubits are updated [12]. U(1 ) = cos 1 sin 1 sin 1 cos 1 (9) qji = g+1 ji g+1 ji = cos 1 sin 1 sin 1 cos 1 g ji g ji (10) TABLE 1. Qubit updation. The learning process of AQNN with pseudo code and QWF architecture is discussed in detail in the next section. IV. PROPOSED APPROACH In this section, an advanced quantum based neural network classi er (AQNN) is proposed and it is used to form objec- tionable Web ltering system (OWF) is presented. First, the proposed algorithm AQNN is discussed in detail, then each module of OWF is discussed. A. INPUT DATASET Firstly, the database has been created for training and test- ing of proposed AQNN. In database preparation, total 2000 websites contents have been taken, out of which 1000 are objectionable websites and the remaining 1000 are non-objectionable websites. To uniquely identify objection- able and non-objectionable content, in all total 8 features have been selected as mentioned in Table 2. The dataset is prepared on the basis of the above-mentioned features. The dataset extracted from objectionable websites is called as class A dataset, and dataset belongs to non-objectionable websites called as class B dataset. X(i) where i = 1, 2, 3.....c1; TABLE 2. Details of features. number of sample of class A ( which gives output 0 ). Y(j) where j = 1, 2, 3, ....., c2; number of sample of class B ( which gives output 1 ). B. LEARNING OF AQNN As discussed above the input dataset is X(i) belongs to class A and Y(j) belongs to class B . Once processing of input dataset is done, then initialization of neural network parameters like connection weights, threshold, and objective functions are done. As discussed in section I, to evolve neural network parameters optimally, we use quantum computing concept along with the genetic concept. In the neural network, hidden layer neurons are added incrementally, therefore rst, a hidden layer neuron is taken in the hidden layer. The con- nection weights (W g)h of a hidden layer neuron in terms of quantum bits are represented in three different populations (h = 1, 2, 3). Here, g represents the number of generations needed to evolve connection weights in each population. Finding neural network parameters from three different pop- ulations genetically helps to achieve the optimum values. Once, the initialization of quantum weights are done for this neuron, some more parameters are also initialized. Here, Fglobal is the objective function value corresponding to the whole population (h = 1, 2, 3), (F g )h is the objective func- tion value corresponding to each population (h), and (Fg)h is objective function corresponding to each generation (g). Similarly, initialize the binary bit matrix S global, (S g)h, and (Sg)h of qubits corresponding to the objective function val- ues Fglobal, (F g )h, and (Fg)h, respectively. The binary bit matrix Sj corresponding to quantum bit Qj is discussed in subsection III-B.1. To evolve the connection weights, these parameters are required to update qubit using qubit update process which is discussed in subsection III-B.2. Once all the parameters are de ned, the generation g is initialized as 1 for all three populations (h = 1, 2, 3) and then the conversion process is called to convert quantum weights into the real coded value of connection weights. Thus, in this generation, (W 1)h is converted into the real value weight matrix (W real 1 )h. Here, after converting weights into real coded value, the quan- tum threshold function is called. Once, the initialization and conversion of connection weights are done, the initialization of quantum threshold ( t)h in terms of qubits is done for all three populations (h = 1, 2, 3). Along with the initialization of quantum threshold VOLUME 7, 2019 98073 O. P. Patel et al.: AQNN Classifier and Its Application for OWF some more parameters are also initialized. Here, (Fglobal ) is objective function value for threshold corresponding to the whole population (h = 1, 2, 3), (F )h is the objective function value corresponding to each population (h) and (Ft )h is the objective function for each generation (t). Similarly, initialize the binary bit matrix Sglobal , (S )h, and (St )h cor- responding to objective function values (Fglobal ), (F )h, and (Ft )h, respectively. The binary bits matrix Sj corresponding to quantum bit Qj is discussed in subsection III-B.1. The selection of the objective function for connection weights and threshold is further discussed in this section. Here, to check the number of the learned sample corresponding to each class, two parameters i.e. count1 = 0, and count2 = 0 are taken which show the number of learned samples of class A dataset and class B dataset, respectively. Here, using the conversion process the real coded value of the threshold ( real t )h con is generated. Here, the parameter con is added in the subscript to represent the real coded value of the threshold which is generated using the conver- sion process. However, the real coded value of the threshold ( real t )h con generated using the conversion process is not a nal value of the threshold. To get an optimal value of the threshold, a threshold boundary parameter is proposed here. The threshold boundary parameter helps to nd the threshold value of a neuron in a particular range. Thus, the chance of getting an optimal value of the threshold is more. 1) THRESHOLD BOUNDARY PARAMETER The selection of the boundary parameter is done with the help of connection weight and input dataset of each class. Here, parameters (netA(i))max h , and (netB(j))max h are initialized as 0 and parameters (netA(i))min h , and (netB(j))min h are initialized as . In this process, multiplication of the real coded value of connection weights and input dataset as shown in Eq (2), are done for both the classes, then the minimum and maximum values are found from that. Now, the threshold value of the neuron is decided within the range of this minimum and maximum value. The selection of the boundary parameter for the threshold of each class is done using the following formulation: Boundary Parameter Selection of Each Class (CLASS A) for h=1 to 3 for i=1 to c1 (netA(i))h = P(W real g )h Xi (netA(i))max h = max((netA(i))max h , (netA(i))h) (netA(i))min h = min((netA(i))min h , (netA(i))h) endfor endfor max(( real t )h) = max((netA(i))max h , (netB(j))max h ); (11) min(( real t )h) = min((netA(i))min h , (netB(j))min h ); (12) Boundary Parameter Selection of Each Class (CLASS B) for h=1 to 3 for j=1 to c2 (netB(j))h = P(W real g )h Yj (netB(j))max h = max((netB(j))max h , (netB(j))h) (netB(j))min h = min((netB(j))min h , (netB(j))h) endfor endfor ( real t )h = min(( real t )h) if ( real t )h con < min(( real t )h); ( real t )h con if min(( real t )h) ( real t )h con max(( real t )h); max(( real t )h) if ( real t )h con > max(( real t )h); (13) Here, ( real t )h con is a value of threshold achieved after the conversion process. As discussed above the selection of the objective function value is discussed next. 2) SELECTION OF OBJECTIVE FUNCTION As discussed above the objective function for weights and threshold in each generation are (Fg)h and (Ft )h respectively. The objective function for weights and threshold in each pop- ulation are (F g )h and (F )h, respectively. Whereas, the global objective function for weight and threshold are Fglobal and (Fglobal ). The (F g )h and (F )h having the best value of the objective function in a particular population. The calculation of these values is done as follows: (F g )h = max((Fg)1, (Fg)2, ......, (Fg)h) (14) (F )h = max((Ft )1, (Ft )2, ....., (Ft )h) (15) The calculation of the global parameter, which shows the value of the best objective function in all whole populations and generation are calculated as follows: Fglobal = max(Fglobal, (F g )h) (16) Fglobal = max(Fglobal , (F )h) (17) 3) LEARNING PROCESS The threshold value of neuron ( real t )h evolved through Eqs (11), (12), and Eqs (13) and connection weights are used to learn the neuron for input samples. Here, a multi- plication value of an input dataset of both classes and con- nection weights are compared with threshold ( real t )h. Using these calculations, count1, and count2 values are achieved which shows the number of samples learned of class A and class B respectively by objective function (Ft )h. Now, if the number of samples learned using connection weights and threshold value are not equal to the total number of sam- ples of class A and class B , then the qubits of quantum threshold ( t)h are updated using quantum update process, which is discussed in subsection III-B.2. For updation of qubits of threshold of the objective functions (Fglobal ), (F )h, 98074 VOLUME 7, 2019 O. P. Patel et al.: AQNN Classifier and Its Application for OWF and (Ft )h and their corresponding binary bits are required. Now, for (W real 1 )h, (g = 1) the threshold is updated from ( real 1 )h, (t = 1) to ( real z )h (t = z) or till the whole sample learned of both the classes. After completion of this process, the best objective functions and corresponding binary bit matrix of quantum threshold ( real t )h are stored. Here, to get an optimal value of the threshold and connection weights, the concept of the genetic algorithm is used. After some prede ned interval, the qubits of quantum threshold and quantum weights are exchanged with its adjacent population and mutated. Finding the solution in this way gives large subspace to get optimal value of connection weights and threshold. If there are unlearned sample remain after comple- tion of the whole generation of the quantum threshold, then quantum weights (W 1)h are evolved in the next generation to get (W 2)h using the quantum update function discussed in subsection III-B.2. To update quantum bits of connection weights, the objective function value (Fg)h, (F g )h, Fglobal and corresponding binary bits matrix are used. If there are still samples remains, which not learned after updating weights (W g)h (g = 1 to m) and the threshold of the neuron (t = 1 to z) for all three populations, then one more neuron is added in the hidden layer. The learning of this hidden layer neuron for the number of unlearned samples of both classes is done in the same way as done for the rst hidden neuron at hidden layer by evolving connection weights and threshold using quantum computing concept. The AQNN in the form of pseudo code is presented next: 4) PSEUDO CODE OF AQNN In this section, the pseudo code of the learning algorithm is discussed. The algorithm mainly divided into two parts, the rst part shows AQNN algorithm and the second part shows the quantum threshold function. C. TESTING OF MALICIOUS WEB REQUEST Once, the hidden layer formation is done, the formation of the output layer starts. The connection weights between the hidden layer and output layer are initialized as unity. The threshold of the output layer neuron is kept in such a way that, if the input to the output neuron is positive then the dataset belongs to an objectionable class. If the input to the output neuron is negative, then the dataset belongs to non-objectionable class. Here, hidden layer neuron is trained in such a way to re output accordingly. The proposed AQNN is used to develop an objectionable Web ltering system (OWF). The AQNN works as a classi er for the objectionable and non-objectionable Web content col- lected from different modules of OWF. The basic architecture along with the working of each module of OWF is discussed next. D. OWF ARCHITECTURE OWF has ve basic module. These modules are the Web crawler, requested Web page analyzer, hyperlink analyzer, Algorithm AQNN Algorithm Step-1: Take input dataset as X(i) and Y(j) Take rst neuron at hidden layer and initialize the population by specifying quantum weights (W g)h in terms of qubits. (W g)h = (Qh w1, Qh w2, Qh w3, ......, Qh wn) where g = 1, ..., m; m is the number of generations to update weights in each population. i = 1......n; n is the number of features of sample. Initialization of more parameters. (F0)h = 0 (S0)h = 0; Fglobal = 0 Sglobal = 0; (F g )h = 0 (S g)h = 0; For each pupulation Step-2: for h = 1 to 3 for g = 1 to m Call conversion process ((W g)h). Call Quantum threshold function ((W real g )h). if((Fg)h (c1 + c2) ) Stop learning. else (F g )h = max((Fg)1, (Fg)2, ......, (Fg)h ) update quantum bits by using quantum update (Fglobal, (F g )h), Eqs (9), (10), and Table 1. endif if ((g == m) ((F g )h (c1 + c2) )) Add new neuron for unlearned sample ((c1 + c2)-(F g )h) and nalize its weight by using Step-1 and Step-2. Fglobal = max(Fglobal, (F g )h) endif endfor endfor a feature extractor, and AQNN as shown in Fig. 1. The module Web crawler, requested Web page analyzer, and hyperlink analyzer fetches the content from the requested website on the basis of objectionable keywords. It does not fetch each requested website data, but only those website content which having objectionable keywords. Having objectionable key- words in the websites content does not certify that they are objectionable as discussed in section I. Now, the fea- ture extraction module extract all the features as described in Table 2 from Web content. Once, all the features are extracted, these are provided as the input to the AQNN. The AQNN classi es it into objectionable or non-objectionable website. If the website is found objectionable, then the objec- tionable website/URL s database is updated by adding the VOLUME 7, 2019 98075 O. P. Patel et al.: AQNN Classifier and Its Application for OWF Quantum Threshold Function() Step-1: Initialization of different parameters for t = 1 to z z is user de ned variable to update (( )t)h. ( t)h = (( Th i )h | ( Th i+1)h); (count1)h = 0; (count2)h = 0; (F0 )h = 0; (S0 )h = 0; (F )h = 0; (S )h = 0; Fglobal = 0 (Sglobal ) = 0 Call conversion process(( t)h) to generate real value ( t)h using Eqs (11), (12) and Eqs (13) for i = 1 to c1 netA(i) = P(W real g )h Xi if(netA(i) > ( t)h) increase (count1)h by 1; endif endfor for j=1 to c2 netB(j) = P(W real g )h Yj if(netB(j) ( t)h) increase (count2)h by 1; endif endfor ((Ft )h = (count1)h + (count2)h); (F )h=max((Ft )1, (Ft )2,....., (Ft )h) update quantum bits for ( t+1)h by using Eqs (9), (10) and Table 1. generate updated real coded value of ( t+1)h using conversion process. (Fg)h = (F )h endfor return (Fg)h; FIGURE 1. Outline of OWF. particular website or its objectionable hyperlink websites. Each module of OWF is explained in detail next. 1) WEB CRAWLER The ef ciency of our OWF can further be enhanced by speeding up the process of nding objectionable websites and making our objectionable URLs database rich. For this task, a web crawler is added to our proposed OWF. The primary objective of this Web crawler is to generate a list of suspicious websites with the help of objectionable keywords. Crawler works by searching on known search engines like Google, Yahoo, and Ask on the basis of objectionable key- words, thus, augmenting the list of websites. Consequently, the contents of these websites are fetched for feature selection and analysis. After extracting all the features of these selected websites, it is given to AQNN for classi cation of these websites as objectionable or non-objectionable. If a website is found objectionable, then it is added to the objectionable website/URL s database. Thus, if a user tries to access any objectionable website, then there is a higher chance of it to be present in our objectionable URLs database. 2) REQUESTED WEB PAGE ANALYSIS MODULE This module works by analyzing the source code of the web pages requested by the user. The website requested by the user is rst searched in the objectionable database. If the website is found in the database, then the message is sent back to the user specifying that this website is blocked and cannot be accessed. Otherwise, its content is extracted for features analysis. These features are provided as input to AQNN which classi es it into objectionable or non-objectionable website depending upon the results. If the website is found objectionable, then the objectionable website/URL s database is updated with this website. 3) HYPERLINK WEB PAGE ANALYSIS MODULE Hyperlinks often referred to as just links , are common in Web pages. These links act the same way as they do on the Web, allowing the user to jump from page to page. There are many websites which contain hyperlinks redirected to other websites. Therefore, to make our system more ef cient, ana- lyzing these hyperlinks for objectionable content has become an essential task. Therefore, each hyperlinked are extracted from Web content. After extracting these hyperlinks, this module fetches the content one by one. Once, the features are extracted from these hyperlinks, it is given to AQNN. If the hyperlink is found objectionable, then it is added to the objectionable URLs database. Many of the times it might be the case that a website may contain an objectionable hyperlink. Therefore, it will not be justi ed to block parent websites. During such situations, this module comes in handy as it only blocks the hyperlinks irrespective of their parent websites. 4) DETECTION OF MALICIOUS WEB REQUEST USING AQNN This module with the help of AQNN, classify websites in the category of objectionable and non-objectionable. The classi- cation into an objectionable and non-objectionable website is done on the basis of features extracted from the modules discussed above. The proposed AQNN is already discussed in detail in this section. 98076 VOLUME 7, 2019 O. P. Patel et al.: AQNN Classifier and Its Application for OWF V. ILLUSTRATION OF AQNN AND OWF A. WORKING OF AQNN Working of AQNN can be understood by taking a simple example. Let us consider a database of three objectionable and three non-objectionable websites. The number of features of each website is two. The dataset belongs to objectionable websites is class A, which generate output 1 and dataset belongs to non-objectionable websites is class B which gen- erate output 0. Thus class A dataset is ((0.23, 0.38), (0.19, 0.45), (0.11, 0.09)) and class B dataset is ((0.55, 0.85), (0.66, 0.72), (0.75, 0.88)). Now, initialization of quantum weights are done in each population. Let consider three num- bers of population and their quantum weights are (W 1)1 = (0.707|0.707, 0.707|0.707), (W 1)2 = (0.5|0.5, 0.6|0.6), and (W 1)3 = (0.8|0.3, 0.1|0.4) for rst neuron at hidden layer. Now, for all three populations, the instance conversion pro- cess is called to get the real coded value of weights. Let the value achieved after conversion process are (W real 1 )1 = (0.14, 0.25), (W real 1 )2 = (0.35, 0.44), and (W real 1 )3 = (0.48, 0.55). Now, these weight values are used to nd out the boundary of the threshold. The boundary values achieved as (0.0379, 0.325), (0.0781, 0.6497), and (0.01023, 0.844) using multiplication of weight and input dataset, for three populations respectively. Now, after deciding the boundary parameter for threshold, the quantum threshold is initialized in terms of qubits for all three populations. Let quantum bits for threshold are ( 1)1 = (0.707|0.707), ( 1)2 = (0.5|0.8), and ( 1)3 = (0.3|0.6). After that conversion process is called and use boundary parameter to get the appropriate value of the threshold. The value achieved as real coded value of the threshold are ( real 1 )1 = (0.256), ( real 1 )2 = (0.277), and ( real 1 )3 = (0.504). Now by using the threshold boundary parameter, the nal value of threshold is achieved. Once, the threshold value is achieved, the weights are applied to input dataset, and it is compared with a threshold. The objective functions values achieved after comparison as (F1 )1 = 4, (F1 )2 = 4, and (F1 )3 = 6. It can be observed from the results that, the whole sample is learned for the third population. Thus the connection weights and threshold of the third population is considered as nal parameters for the neural network. The above example is a minor depiction of the bigger problem; therefore a proper solution is achieved in only one generation. If the sample is not learned in the rst generation of the threshold, then it is updated until all samples are learned, or counter reaches to the user-de ned number. The exchange of qubit is also done in this duration after some user-de ned interval, which helps to get optimal value for connection weights and threshold. B. WORKING OF OWF The working of OWF starts from the Web crawler. The Web crawler fetches all the objectionable websites on the basis of objectionable keywords mentioned in the list. There may be a possibility that all the websites fetched by Web crawler may not be objectionable, therefore, to properly investigate websites, their contents are extracted into a separate le. Now, all the hyperlinks are separate out from this content. The feature extraction module extract features from these contents. To check whether the website is objectionable or not, the value of the features are given as input to AQNN. If the website is found objectionable then, the database of objectionable Website/URL is updated by adding this par- ticular website. Thus, on the basis of objectionable key- words, and semantic analysis by AQNN, the database will have the number of objectionable links. Now, if any user request for any website rst it is checked in the database of objectionable website. If the requested website is found in the database, then an error message is delivered else it is forwarded to Internet Service Provider (ISP). The response from ISP is forwarded to the user and requested Web page analyzer also keeps its content. Now, the requested Web page analyzer separates all hyperlink from content and forwarded to hyperlink module. The feature extraction module nds features from content extracted by requested Web page ana- lyzer and gives input to AQNN. If it is found objectionable, then the database of objectionable websites is updated by the requested website. The hyperlink extractor module also accesses the content of each website/hyperlink one by one and its feature are extracted from the feature extraction module. These all features from hyperlink are given to AQNN to check whether hyperlink content is objectionable or not. If it is found objectionable, then the database of objectionable websites is updated by these hyperlinks. In this way, each module of OWF help to lter objectionable Web content. VI. EXPERIMENT AND RESULTS In this section, the experimental setup and results are dis- cussed in detail. Firstly, the experimental setup, the descrip- tion of the system, and the experimental dataset are discussed. In the next subsection, after the experimental setup, the results of experiments on several evaluation parameters are discussed. Firstly, the evaluation of AQNN as the classi er is done, and then the performance of OWF is checked with existing software and objectionable content ltering models. A. EXPERIMENT SETUP The proposed AQNN and OWF are implemented in Java (Version7) and on a computer with an i7 processor, 2.5GHz, and 8GB RAM. For the testing and training purpose, total 1000 objectionable and 1000 non-objectionable websites have been randomly selected. The dataset has been prepared in two classes, one is objectionable, and another is non- objectionable, both are having eight numbers of features as described in Table 2. In the proposed algorithm, objectionable content has been considered as pornographic. In the machine learning eld, it is common to partition the dataset into two separate sets: a training set and a testing set. To evaluate the ef ciency of AQNN, the dataset has been divided into the training and testing data in three different partitions. VOLUME 7, 2019 98077 O. P. Patel et al.: AQNN Classifier and Its Application for OWF Here, the rst partition is done by 60-40, where 60 % of the samples are used for training of the AQNN and the rest of 40% for testing. The second partition is 70-30, 70 % of the samples are used for training and the remaining 30% used for testing. In addition to this, a 10-fold cross validation scheme is also used. In this method, the entire dataset is divided into ten blocks of approximately equal size. During the implementation of our algorithm, 90% of the data is used to train AQNN while the rest 10% data is used for testing. The details of the training and testing partitions are given in Table 3. TABLE 3. Data partition table. B. RESULTS AND DISCUSSION To evaluate the performance of proposed algorithm AQNN, the measures as mean classi cation accuracy, sensitivity, speci city, confusion matrix are calculated using the param- eters such as true positive, true negative, false positive, and false negative [43] as shown in Table 4. Along with these evaluation parameters some more statical evaluation param- eters like precision, recall, and F1 score is calculated. TABLE 4. Sample confusion matrix. As shown in Table 5, for 60-40 training-testing partition, the mean classi cation accuracy achieved by the pro- posed (AQNN) algorithm is 96.875% which is very remark- able, it shows that even for smaller training samples, AQNN has good adaptation and generation capability and can pro- vide better solutions. The mean classi cation accuracy of the proposed models for 70-30 training-testing partition is 98%, and for 10-fold cross-validation, the classi cation accuracy achieved is 99% which con rms the importance of proper training data. AQNN achieves maximum accuracy of 97.9%, 98.6%, and 100% for 60-40, 70-30 training-testing partition and 10-fold cross validation, respectively. The minimum, maximum, and mean values of sensitivity and speci city of all training and testing partitions for AQNN are presented in Table 6. It shows a comparison between sensitivity and speci city. For the 60-40 training-testing partition, the best value achieved by the neural network for sensitivity and speci city is reported in terms of mean and standard devi- ation (std. dev.) is 99.75%, 0.16, and 94%, 0.44, respectively. TABLE 5. Comparison of classification accuracy. TABLE 6. Sensitivity and specificity. For the 70-30 training-testing partition, the best value achieved by the neural network for sensitivity and speci city is reported in terms of mean and std. dev. is 99.34%, 0.29 and 96.67%, 0.15, respectively. For the 10-fold cross validation, the best value achieved by the neural network for sensitivity and speci city is reported in terms of mean and std. dev. are 99%, 0.13 and 99%, 0.84, respectively. Table 7, represents the classi cation accuracies of AQNN in the form of the confusion matrix. It is clear from Table 7, the sum of true positive and true negative increases with the increase in training data. Especially, for 70-30 training-testing partition and 10-fold cross validation, the true positive rate and the true negative rate is around 100. 98078 VOLUME 7, 2019 O. P. Patel et al.: AQNN Classifier and Its Application for OWF TABLE 7. Confusion matrix. TABLE 8. Comparison of Precision, Recall, and F1 Score. In Table 8, The performance of the proposed algorithm is compared with other classi cation algorithms in terms of parameters like precision, recall, and F1 score. Here, it can be observed that the value of precision and recall and score for the data partition 60-40 and 70-30 are 0.988, 0.9975, 0.9927 and 0.989, 0.9934, 0.9912. The value of precision, recall, and F1 score for 10-fold cross validation scheme are 0.99, 0.99, and 0.99. C. COMPARISON AND DISCUSSION To judge the performance of proposed AQNN, it is compared with QNN-F algorithm [18], machine learning algorithms like Backpropagation, Support Vector Machine (SVM), mul- tilevel perceptron, decision tree algorithm, arti cial neu- ral network, and quantum neural network algorithm. Since, AQNN is an advanced version of QNN-F [18], it is observed that AQNN is improving results signi cantly which is discussed subsequently. Table 5, shows the classi ca- tion accuracy of AQNN in terms of parameters like mean, standard deviation (std. dev.), and maximum (max) value. The mean, std. dev., and max values for the dataset ratio of 60-40, and 70-30 are 96.88%, 0.55, 97.9%, and 98%, 0.23, 98.6% respectively. Whereas, with dataset ratio of 60-40 and 70-30 the value of the mean, std. dev., and max for QNN-F are 96.375%, 0.86, 97.53% and 97.83%, 0.36, 99.2% respec- tively. For 10-fold cross validation the values of mean, std. dev., and max are 99%, 0.76 and 100% respectively. The of mean, std. dev., and max for QNN-F are 98%, 0.57, and 98.5% respectively. This clearly shows that AQNN performs better than QNN-F, and other existing classi ers. Similarly, the comparison is made in terms of sensitivity and speci city as discussed in Table 6. It shows that, for the dataset ratio of 60-40, 70-30, and 10-fold cross validation are 99.75%, 94%, 99.34%, 96.67%, and 99%, 99% respectively. The mean value of sensitivity and speci city of QNN-F for dataset ratio of 60-40, 70-30, and 10-fold validation are 98%, 92.75%, 98.75%, 95.67%, and 97.05%, 98.9% respectively. Table 7 shows the confusion matrix corresponding to all methods. The results show that with respect to the objectionable dataset, each algorithm performs well, but corresponding to the non-objectionable dataset, AQNN performs better than other classi cation algorithms in both the data partitions. The performance of the proposed AQNN is better than QNN-F and existing classi ers, this is mainly due to two rea- sons. Firstly, introducing here threshold boundary parameter, which helps to nd an optimal value of threshold within a particular range. As nding an optimal value of the threshold VOLUME 7, 2019 98079 O. P. Patel et al.: AQNN Classifier and Its Application for OWF TABLE 9. Features comparison of OWF with other method and renowned softwares. is important for any neural network architecture. Due to improper selection of this parameter, the algorithm may get trapped into local minima or maxima. Thus, with an optimal value of the threshold, a neural network is formed which gives high classi cation accuracy. Secondly, in the AQNN nding the connection weights and threshold using genetic concept with three different populations. Thus, it gives the better value of connection weights and threshold from one population without genetic concept. As in QNN-F the con- nection weights and the threshold of the neurons are searched in one population using several generations. In AQNN the parameters of the neural network are found in more than one population in several generations in each population. The genetic concept is used here to exchange and muted qubits of connection weights and threshold thus, it helps to nd the optimal value of connection weights and threshold globally. However, the proposed AQNN is compared with QNN-F, Backpropagation, Support Vector Machine (SVM), multi- level perceptron, decision tree algorithm, arti cial neural network, and quantum neural network algorithm but it is hard to make a practical comparison between the existing work of ltering objectionable Web content with the proposed OWF. There are some reasons for this. Firstly, the unavailability of the standard dataset on which the other algorithms are tested. These datasets are prepared in different-different ways from the Web. Secondly, the number of features of extracted Web content is not uniform. Many researchers have opted their own methodology to extract features from the content. Thirdly, many researchers used standard or library classi er like Backpropagation, Support Vector Machine (SVM), mul- tilevel perceptron, decision tree algorithm for classi cation their Web contents [45] [47]. Therefore, to judge the per- formance of the OWF, the comparison is done with exist- ing well known objectionable Web blocking Softwares as URL lterDB, DansGuardian, and Net Nanny [48] [50] and existing some objectionable Web blocking model Webshield and QNN-F [18], [23]. First, the features of the Softwares and existing model is compared with our proposed OWF in Table 9. The comparison is made on the basis of features like Location (user/admin), URL Block, Keyword based, Content analysis, and Filtering domain. To evaluate the per- formance of the proposed OWF with existing well-known Softwares and existing model, the testing is done by taking 800 (400 objectionable + 400 non-objectional) websites. Table 10, shows the testing results in terms of confusion matrix and accuracy. It can be easily observed from Table 10, that the proposed OWF achieves the highest accuracy that is 96.87% in comparison to existing Softwares and existing method. TABLE 10. Comparison of OWF with other method and renowned softwares. VII. CONCLUSION In this paper, an Advanced Quantum based Neural Network Classi er (AQNN) is presented, and it is used to form an Objectionable Web ltering system (OWF). The proposed algorithm uses quantum computing and genetic concept to decide connection weights of the neural network and thresh- old of neurons. The quantum concept is characterized by the representation of the individual and the population dynamics. It gives better population diversity to get the optimal value of required parameters (connections weights and threshold). The network architecture is formed constructively by adding neurons one by one at the hidden layer. The proposed AQNN architecture is used to form OWF. The OWF analyzes the content of websites collected from the different module like Web crawler, requested Web page analyzer, and hyperlink analyzer. The requested Web page analyzer gives the content of websites which are requested by users, and the hyper- link analyzer helps to nd out the content from hyperlink available in websites content. To avoid repeat analysis of each requested websites, the collection of all objectionable Websites declared by AQNN is done, and a database is created as objectionable Website/URL database. The Web crawler module helps to speed up the process of blocking objectionable Web request by updating the database of objec- tionable Website/URLs. To judge the performance of the proposed AQNN algo- rithm and OWF, these are tested on objectionable and non-objectionable Web dataset. The performance of the AQNN is also checked against well-known classi ers with the parameters like accuracy, speci city, sensitivity, preci- sion, recall, and F1 score. Here, the performance of proposed OWF is also compared with objectionable Web ltering Soft- wares as URL lterDB, DansGuardian, and Net Nanny and existing methods. It is found from the result that both AQNN and OWF performs better than existing solutions. REFERENCES [1] J.-H. Xia, Rusli, and A. Kumta, Modeling of silicon carbide ECR etching by feed-forward neural network and its physical interpretations, IEEE Trans. Plasma Sci., vol. 38, no. 5, pp. 1091 1096, May 2010. [Online]. Available: http://research.ntu.edu.sg/ expertise/academicpro le/pages/StaffPro le.aspx?ST_EMAILID= ERUSLI [2] R. Batruni, A multilayer neural network with piecewise-linear structure and back-propagation learning, IEEE Trans. Neural Netw., vol. 2, no. 3, pp. 395 403, May 1991. 98080 VOLUME 7, 2019 O. P. Patel et al.: AQNN Classifier and Its Application for OWF [3] E.-S. M. El-Alfy, N. T. Ratrout, and U. Gazder, Impact of stock market indices and other regional exogenous factors on predictive modeling of border traf c with neural network models, Arabian J. Sci. Eng., vol. 40, no. 2, pp. 303 312, 2015. [4] M. Alshayeb, Y. Eisa, and M. A. Ahmed, Object-oriented class stability prediction: A comparison between arti cial neural network and support vector machine, Arabian J. for Sci. Eng., vol. 39, no. 11, pp. 7865 7876, 2014. [5] M. Deriche, An image quality index based on mutual information and neural networks, Arabian J. Sci. Eng., vol. 39, no. 3, pp. 1983 1993, 2014. [6] S. Kumar, Neural Networks: A Classroom Approach. New York, NY, USA: McGraw-Hill, 2004. [7] W. A. Farag, V. H. Quintana, and G. Lambert-Torres, A genetic-based neuro-fuzzy approach for modeling and control of dynamical systems, IEEE Trans. Neural Netw., vol. 9, no. 5, pp. 756 767, Sep. 1998. [8] M. B. Takahashi, J. C. Rocha, and E. G. F. N ez, Optimization of arti - cial neural network by genetic algorithm for describing viral production from uniform design data, Biochemistry, vol. 51, no. 3, pp. 422 430, 2016. [9] D. Rivero, J. Dorado, J. Rabu al, and A. Pazos, Generation and simpli- cation of arti cial neural networks by means of genetic programming, Neurocomputing, vol. 73, nos. 16 18, pp. 3200 3223, 2010. [10] H.-C. Tsai and Y.-H. Lin, Modular neural network programming with genetic optimization, Expert Syst. Appl., vol. 38, no. 9, pp. 11032 11039, 2011. [11] M. Chen and Z. Yao, Classi cation techniques of neural networks using improved genetic algorithms, in Proc. IEEE Int. Conf. Genetic Evol. Comput. (WGEC), Hubei, China, Sep. 2008, pp. 115 119. [12] T.-C. Lu, G.-R. Yu, and J.-C. Juang, Quantum-based algorithm for opti- mizing arti cial neural networks, IEEE Trans. Neural Netw. Learn. Syst., vol. 24, no. 8, pp. 1266 1278, Aug. 2013. [13] J. H. Kim and S.-K. Park, The geometrical learning of binary neural networks, IEEE Trans. Neural Netw., vol. 6, no. 1, pp. 237 247, Jan. 1995. [14] O. P. Patel and A. Tiwari, Quantum inspired binary neural network algorithm, in Proc. IEEE Int. Conf. Inf. Technol. (ICIT), Bhubaneswar, India, Dec. 2014, pp. 270 274. [15] J.-J. Wong and S.-Y. Cho, Recognizing human emotion from partial facial features, in Proc. IEEE Int. Conf. Neural Netw. (IJCNN), Vancouver, BC, Canada, Jul. 2006, pp. 166 173. [16] E.-S. M. El-Alfy, A hierarchical GMDH-based polynomial neural net- work for handwritten numeral recognition using topological features, in Proc. IEEE Int. Conf. Neural Netw. (IJCNN), Barcelona, Spain, Jul. 2010, pp. 1 7. [17] T. D. Do, K. Chang, and S. C. Hui, Web mining for cyber monitoring and ltering, in Proc. IEEE Int. Conf. Cybern. Intell. Syst., Singapore, Dec. 2004, pp. 399 404. [18] O. Patel, A. Tiwari, V. Patel, and O. Gupta, Quantum based neural network classi er and its application for rewall to detect malicious Web request, in Proc. IEEE Symp. Ser. Comput. Intell., Cape Town, South Africa, Dec. 2015, pp. 67 74. [19] N. Agarwal, H. Liu, and J. Zhang, Blocking objectionable Web con- tent by leveraging multiple information sources, ACM SIGKDD Explor. Newslett., vol. 8, pp. 17 26, 2006. [20] W. P. Stol, H. K. W. Kaspersen, J. Kerstens, E. R. Leukfeldt, and A. R. Lodder, Governmental ltering of websites: The Dutch case, Comput. Law Secur. Rev., vol. 25, no. 3, pp. 251 262, 2009. [21] Y.-S. Kim, A study of PICS/RDF-based Internet content rating system: Issues related to freedom of expression, J. Korean Soc. Inf. Manage., vol. 24, no. 3, pp. 271 297, 2007. [22] C.-H. Chou, A. P. Sinha, and H. Zhao, Commercial Internet lters: Perils and opportunities, Decis. Support Syst., vol. 48, no. 4, pp. 521 530, 2010. [23] U. Thakar, O. Patel, and L. Purohit, Web shield: A modi ed rewall to detect malicious request, in Proc. Int. Conf. Inf. Syst. Design Intell. Appl. (INDIA), New Delhi, India. Berlin, Germany: Springer, 2012, pp. 497 506. [24] M. Hammami, Y. Chahir, and L. Chen, WebGuard: A Web ltering engine combining textual, structural, and visual content-based analysis, IEEE Trans. Knowl. Data Eng., vol. 18, no. 2, pp. 272 284, Feb. 2006. [25] M. Hammami, D. Tsishkou, and L. Chen, Adult content Web ltering and face detection using data-mining based kin-color model, in Proc. IEEE Int. Conf. Multimedia Expo, Taipei, Taiwan, vol. 1, Jun. 2004, pp. 403 406. [26] M. R. Girgis, T. M. Mahmoud, and T. Abd-El-Hafeez, An approach to image extraction and accurate skin detection from Web pages, in Proc. World Acad. Sci., Eng. Technol., 2007, pp. 367 375. [27] Z. Chen, O. Wu, M. Zhu, and W. Hu, A novel Web page ltering system by combining texts and images, in Proc. IEEE Web Intell., Dec. 2006, pp. 732 735. [28] X. Shen, W. Wei, and Q. Qian, The ltering of Internet images based on detecting erotogenic-part, in Proc. IEEE Natural Comput., vol. 2, Aug. 2007, pp. 732 736. [29] M. B. Garcia, T. F. Revano, B. G. M. Habal, J. O. Contreras, and J. B. R. Enriquez, A pornographic image and video ltering application using optimized nudity recognition and detection algorithm, in Proc. 10th IEEE Int. Conf. Humanoid, Nanotechnol., Inf. Technol., Commun. Control, Environ. Manage. (HNICEM), Nov./Dec. 2018, pp. 1 5. [30] W. F. M. Yaqub, M. Mohanty, and N. D. Memon, Encrypted domain skin tone detection for pornographic image ltering, in Proc. 15th IEEE Int. Conf. Adv. Video Signal Based Surveill. (AVSS), Nov. 2018, pp. 1 5. [31] M. J. Jones and J. M. Rehg, Statistical color models with applica- tion to skin detection, Int. J. Comput. Vis., vol. 46, no. 1, pp. 81 96, Jan. 2002. [32] H. Zheng, M. Daoudi, and B. Jedynak, Blocking adult images based on statistical skin detection, Electron. Lett. Comput. Vis. Image Anal., vol. 4, no. 2, pp. 1 14, 2004. [33] Y. Xu, B. Li, X. Xue, and H. Lu, Region-based pornographic image detection, in Proc. IEEE Multimedia Signal Process., Oct./Nov. 2005, pp. 1 4. [34] J.-L. Shih, C.-H. Lee, and C.-S. Yang, An adult image identi cation system employing image retrieval technique, Pattern Recognit. Lett., vol. 28, no. 16, pp. 2367 2374, 2007. [35] V. S. Jacob, R. Krishnan, and Y. U. Ryu, Internet content ltering using isotonic separation on content category ratings, ACM Trans. Internet Technol., vol. 7, no. 1, p. 1, 2007. [36] J. P. Caulkins, W. Ding, G. Duncan, R. Krishnan, and E. Nyberg, A method for managing access to Web pages: Filtering by statistical classi cation (FSC) applied to text, Decis. Support Syst., vol. 42, no. 1, pp. 144 161, 2006. [37] J. Zeng, J. Duan, and C. Wu, Adaptive topic modeling for detec- tion objectionable text, in Proc. IEEE/WIC/ACM Int. Joint Conf. Web Intell. (WI) Intell. Agent Technol. (IAT), Atlanta, GA, USA, Nov. 2013, pp. 381 388. [38] H. Zheng, H. Liu, and M. Daoudi, Blocking objectionable images: Adult images and harmful symbols, in Proc. IEEE Int. Conf. Multimedia Expo (ICME), Taipei, Taiwan, vol. 2, Jun. 2004, pp. 1223 1226. [39] W. Zeng, W. Gao, T. Zhang, and Y. Liu, Image guarder: An intelligent detector for adult images, in Proc. Asian Conf. Comput. Vis., Seoul, South Korea, 2004, pp. 1080 1084. [40] D. Li, N. Li, J. Wang, and T. Zhu, Pornographic images recognition based on spatial pyramid partition and multi-instance ensemble learning, Knowl.-Based Syst., vol. 84, pp. 214 223, 2015. [41] C.-Y. Kim, O.-J. Kwon, W.-G. Kim, and S. Choi, Automatic system for ltering obscene video, in Proc. IEEE Int. Conf. Adv. Commun. Technol., Gangwon-Do, South Korea, Feb. 2008, pp. 1435 1438. [42] K.-H. Han and J.-H. Kim, Quantum-inspired evolutionary algorithm for a class of combinatorial optimization, IEEE Trans. Evol. Comput., vol. 6, no. 6, pp. 580 593, Dec. 2002. [43] M. Sokolova and G. Lapalme, A systematic analysis of performance measures for classi cation tasks, Inf. Process. Manag., vol. 45, no. 4, pp. 427 437, 2009. [44] G. W. Corder and D. I. Foreman, Nonparametric Statistics for Non- Statisticians: A Step-by-Step Approach. Hoboken, NJ, USA: Wiley, 2009. [45] J. Sharma and V. K. Pathak, Automatic pornographic detection in Web pages based on images and text data using support vector machine, in Proc. Int. Conf. Soft Comput. Problem Solving (SocProS). Roorkee, India: Springer, 2011, pp. 473 483. [46] R. Suvorov, I. Sochenkov, and I. Tikhomirov, Method for pornography ltering in the Web based on automatic classi cation and natural language processing, in Proc. Int. Conf. Speech Comput., Pilsen, Czech Republic. Cham, Switzerland: Springer, 2013, pp. 233 240. [47] F. V. Rigo, M. N. Maraes, and E. T. Matsubara, Smart saint: An active semi-supervised learning Internet lter, in Proc. IEEE Int. Conf. Intell. Syst. (BRACIS), Fortaleza, Brazil, Oct. 2013, pp. 136 142. [48] M. Kool. URL lterDB. Accessed: Dec. 15, 2018. [Online]. Available: https://www.url lterdb.com/ [49] SmoothWall. DansGuardian. Accessed: Dec. 16, 2018. [Online]. Avail- able: http://dansguardian.org/ [50] G. Ross. NetNanny. Accessed: Dec. 18, 2018. [Online]. Available: https://www.netnanny.com/products/netnanny/ VOLUME 7, 2019 98081 O. P. Patel et al.: AQNN Classifier and Its Application for OWF OM PRAKASH PATEL received the Ph.D. degree in computer science and engineering from IIT Indore, India, in 2018, and the M.E. degree from the Department of Computer Science and Engineering, Shri Govindaram Sakseria Institute of Technology and Science, Indore, India, in 2011. He is currently an Assistant Professor with the Department of Computer Sci- ence and Engineering, Mahindra Ecole Centrale College of Engineering, Hyderabad, India. His current research interests include quantum-based neural network learning algorithm, pattern recognition, data mining, and fuzzy-based soft computing algorithm. He is a Reviewer of the Neural Processing Letter (Springer). NEHA BHARILL received the B.E. degree in information technology from the Bansal Institute of Science and Technology, Bhopal, India, in 2008, the M.E. degree in computer engineering from the Shri Govindaram Sakseria Institute of Technology and Science, Indore, India, in 2011, and the Ph.D. degree in computer science and engineering from IIT Indore, India, in 2018. She is currently an Assistant Professor with the Department of Computer Science and Engineering, Mahindra Ecole Centrale College of Engineering, Hyderabad, India. Her current research interests include fuzzy sets and systems, big data, pattern recognition, data mining, machine learning, and scalable machine learning approaches for genome identi cation. She has published various refereed journals and conferences of International repute. She is the Reviewer of the IEEE TRANSACTIONS ON CYBERNETICS and the IEEE TRANSACTIONS ON FUZZY SYSTEMS. ARUNA TIWARI received the B.E. and M.E. degrees in computer engi- neering and the Ph.D. degree in computer science and engineering. She has been an Associate Professor of computer science and engineering with IIT Indore, since 2012. Her research interests include soft computing, neu- ral networks, fuzzy clustering, evolutionary computation, genome analysis, and health-care applications. She has many publications in peer-reviewed journals (of the IEEE Transactions, Elsevier, and Springer), international conferences, and book chapters. She has been a Reviewer for many reputed journals and conferences. She has research collaboration with CSIR CEERI Pilani and the Indian Institute of Soybean Research (Indian Council of Agriculture and Research). VIKRAM PATEL received the B.Tech. degree in computer science and engi- neering from IIT Indore, India, in 2016. He is currently the Co-Founder and the Chief Technology Of cer of Chota Hospital Private Limited. Prior to pur- suing his startup full-time, he has published research on quantum-based neu- ral network classi er and had interned at UpsQool, and Refresh.io (acquired by LinkedIn, in 2015). His current research interests include quantum-based neural network learning algorithm, pattern recognition, natural language processing, and automatic speech recognition (ASR). OJAS GUPTA received the B.Tech. degree in computer science and engineer- ing from IIT Indore, India, in 2016, and the M.Sc. degree in computer science from the University of California San Diego, in 2018. He is currently a mem- ber of the technical staff with VMware, Palo Alto, CA, USA. He is working on orchestration and networking with VMware s next-generation network slicing solution in 5G. His current research interests include software-de ned networking, orchestration, telco networks, quantum-based neural network- ing, and convolution neural networks. JIAN CAO received the Ph.D. degree from the Nanjing University of Sci- ence and Technology, in 2000. He was a Postdoctoral Research Fellow of Shanghai Jiaotong University (SJTU) and also a Visiting Scholar of Stanford University. He is currently a tenured Professor with the Department of Computer Science and Engineering, Shanghai Jiaotong University (SJTU), China. He is the Director of the SJTU&Morgan Stanley Joint Research Center on Financial Service Innovation. He is also the Leader of the Lab for Cloud and Service Computing. His research interests include intelligent data analytics, service computing, and network computing. He has published over 200 papers in refereed conference and journals, such as SIGKDD, IJCAI, AAAI, VLDB, WWW, INFOCOM, TMC, TOIS, TPDS, and TKDD. He has undertaken more than ten projects funded by the National High Technology Research and Development and the National Natural Science Foundation of China. His research projects are also widely founded by many industry partners, including Ctrip, Morgan Stanley, Docomo, Samsung, and Shanghai International Port Group, to name but a few. His research has won eight provisional Science and Technology Progress Awards. JUN LI received the B.S. degree in computer science and technology from Shandong University, Jinan, China, in 2003, the M.Sc. degree in information and signal processing from Peking University, Beijing, China, in 2006, and the Ph.D. degree in computer science from the Queen Mary University of London, London, U.K., in 2009. He is currently a Lecturer with the School of Computer Science, Faculty of Engineering and Information Technology, University of Technology Sydney, Ultimo, NSW, Australia. MUKESH PRASAD received the Ph.D. degree in computer science from National Chiao Tung University (NCTU), Hsinchu, Taiwan, in 2015, and the master s degree in computer application from Jawaharlal Nehru Uni- versity, New Delhi, India, in 2009. He was a Principle Engineer (Research and Development) with Taiwan Semiconductor Manufacturing Company, Hsinchu. He is currently a Lecturer with the School of Computer Science, Faculty of Engineering and Information Technology, University of Technol- ogy Sydney, Ultimo, NSW, Australia. He has published 25 peer-reviewed journals and 30 conference articles. His current research interests include machine learning, data analytics, pattern recognition, fuzzy systems, neural networks, arti cial intelligence, and brain computer interface. 98082 VOLUME 7, 2019